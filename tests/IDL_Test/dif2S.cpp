// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:631

#ifndef _TAO_IDL_DIF2S_XAV75Q_CPP_
#define _TAO_IDL_DIF2S_XAV75Q_CPP_


#include "dif2S.h"
#include "tao/PortableServer/Operation_Table_Perfect_Hash.h"
#include "tao/PortableServer/Direct_Collocation_Upcall_Wrapper.h"
#include "tao/Exception_Data.h"
#include "tao/Messaging/ExceptionHolder_i.h"
#include "tao/PortableServer/Upcall_Command.h"
#include "tao/PortableServer/Upcall_Wrapper.h"
#include "tao/TAO_Server_Request.h"
#include "tao/ORB_Core.h"
#include "tao/Profile.h"
#include "tao/Stub.h"
#include "tao/IFR_Client_Adapter.h"
#include "tao/Object_T.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/DynamicC.h"
#include "tao/CDR.h"
#include "tao/operation_details.h"
#include "tao/PortableInterceptor.h"
#include "tao/Thread_Lane_Resources.h"
#include "tao/Buffer_Allocator_T.h"
#include "tao/Messaging/AMH_Skeletons.h"
#include "ace/Auto_Functor.h"
#include "ace/Dynamic_Service.h"
#include "ace/Malloc_Allocator.h"
#include "cstring"
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_AMH_ex1_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_AMH_ex1_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_AMH_ex1_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19,  5,  3,
     15,  4,  9, 14,  0, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19,  0, 19,  0, 19, 19,
      0,  5, 19, 19, 19, 19, 19, 19, 19, 19,
     19,  0, 19, 19, 19, 19,  0, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_AMH_ex1_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 12,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 14,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 18,
      HASH_VALUE_RANGE = 16,
      DUPLICATES = 0,
      WORDLIST_SIZE = 15
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op6", std::addressof(POA_OldDif2::AMH_ex1::op6_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op6)},
      {"",0,0},
      {"_is_a", std::addressof(TAO_AMH_Skeletons::_is_a_amh_skel), nullptr},
      {"op1", std::addressof(POA_OldDif2::AMH_ex1::op1_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op1)},
      {"op3", std::addressof(POA_OldDif2::AMH_ex1::op3_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op3)},
      {"op0", std::addressof(POA_OldDif2::AMH_ex1::op0_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op0)},
      {"",0,0},
      {"_component", std::addressof(TAO_AMH_Skeletons::_component_amh_skel), nullptr},
      {"",0,0},
      {"op4", std::addressof(POA_OldDif2::AMH_ex1::op4_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op4)},
      {"_non_existent", std::addressof(TAO_AMH_Skeletons::_non_existent_amh_skel), nullptr},
      {"_repository_id", std::addressof(TAO_AMH_Skeletons::_repository_id_amh_skel), nullptr},
      {"_interface", std::addressof(TAO_AMH_Skeletons::_interface_amh_skel), nullptr},
      {"",0,0},
      {"op5", std::addressof(POA_OldDif2::AMH_ex1::op5_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op5)},
      {"op2", std::addressof(POA_OldDif2::AMH_ex1::op2_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op2)},
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          const char *s = wordlist[key].opname;

          if (*str == *s && !ACE_OS::strncmp (str + 1, s + 1, len - 1))
            return &wordlist[key];
        }
    }
  return 0;
}

static TAO_OldDif2_AMH_ex1_Perfect_Hash_OpTable tao_OldDif2_AMH_ex1_optable;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::AMH_ex1::AMH_ex1 ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_AMH_ex1_optable);
}

POA_OldDif2::AMH_ex1::AMH_ex1 (const AMH_ex1& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs)
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex1::op0_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex1 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex1 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex1ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex1ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex1ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op0 (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex1::op1_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex1 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex1 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Float f;
  ::CORBA::Long l;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> f) &&
      (_tao_in >> l)
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex1ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex1ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex1ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op1 (
      safe_rd_.get (),
      f,
      l
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex1::op2_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex1 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex1 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Double d;
  ::CORBA::Short s;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> d) &&
      (_tao_in >> s)
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex1ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex1ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex1ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op2 (
      safe_rd_.get (),
      d,
      s
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex1::op3_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex1 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex1 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Long l;
  ::CORBA::ULong ul;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> l) &&
      (_tao_in >> ul)
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex1ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex1ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex1ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op3 (
      safe_rd_.get (),
      l,
      ul
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex1::op4_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex1 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex1 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Short s;
  ::CORBA::UShort us;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> s) &&
      (_tao_in >> us)
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex1ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex1ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex1ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op4 (
      safe_rd_.get (),
      s,
      us
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex1::op5_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex1 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex1 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::ULong ul;
  ::CORBA::UShort us;
  ::CORBA::Boolean b;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> ul) &&
      (_tao_in >> us) &&
      (_tao_in >> ::ACE_InputCDR::to_boolean (b))
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex1ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex1ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex1ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op5 (
      safe_rd_.get (),
      ul,
      us,
      b
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex1::op6_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex1 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex1 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Char c;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> ::ACE_InputCDR::to_char (c))
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex1ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex1ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex1ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op6 (
      safe_rd_.get (),
      c
    );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::AMH_ex1::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:OldDif2/ex1:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::AMH_ex1::_interface_repository_id () const
{
  return "IDL:OldDif2/ex1:1.0";
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_ss.cpp:106

void
POA_OldDif2::AMH_ex1::_dispatch (
    TAO_ServerRequest &req,
    TAO::Portable_Server::Servant_Upcall *context)
{
  this->asynchronous_upcall_dispatch (req,context,this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_ss.cpp:64

OldDif2::ex1*
POA_OldDif2::AMH_ex1::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::ex1>::unchecked_narrow (obj.in ());
      
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_ex1_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_ex1_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_ex1_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19,  5,  3,
     15,  4,  9, 14,  0, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19,  0, 19,  0, 19, 19,
      0,  5, 19, 19, 19, 19, 19, 19, 19, 19,
     19,  0, 19, 19, 19, 19,  0, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_ex1_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 12,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 14,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 18,
      HASH_VALUE_RANGE = 16,
      DUPLICATES = 0,
      WORDLIST_SIZE = 15
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op6", std::addressof(POA_OldDif2::ex1::op6_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op6)},
      {"",0,0},
      {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
      {"op1", std::addressof(POA_OldDif2::ex1::op1_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op1)},
      {"op3", std::addressof(POA_OldDif2::ex1::op3_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op3)},
      {"op0", std::addressof(POA_OldDif2::ex1::op0_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op0)},
      {"",0,0},
      {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
      {"",0,0},
      {"op4", std::addressof(POA_OldDif2::ex1::op4_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op4)},
      {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
      {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr},
      {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
      {"",0,0},
      {"op5", std::addressof(POA_OldDif2::ex1::op5_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op5)},
      {"op2", std::addressof(POA_OldDif2::ex1::op2_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op2)},
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          const char *s = wordlist[key].opname;

          if (*str == *s && !ACE_OS::strncmp (str + 1, s + 1, len - 1))
            return &wordlist[key];
        }
    }
  return 0;
}

static TAO_OldDif2_ex1_Perfect_Hash_OpTable tao_OldDif2_ex1_optable;

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::~_TAO_ex1_Direct_Proxy_Impl ()
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op0 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **)
  
{
  POA_OldDif2::ex1_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex1_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op0 (
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op1 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex1_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex1_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::Float>::ret_val *) args[0])->arg () =
    _tao_ptr->op1 (
          ((TAO::Arg_Traits< ::CORBA::Float>::in_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::CORBA::Double>::out_arg_val *) args[2])->arg (),
          ((TAO::Arg_Traits< ::CORBA::Long>::inout_arg_val *) args[3])->arg ()
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op2 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex1_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex1_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::Double>::ret_val *) args[0])->arg () =
    _tao_ptr->op2 (
          ((TAO::Arg_Traits< ::CORBA::Double>::in_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::CORBA::Long>::out_arg_val *) args[2])->arg (),
          ((TAO::Arg_Traits< ::CORBA::Short>::inout_arg_val *) args[3])->arg ()
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op3 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex1_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex1_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::Long>::ret_val *) args[0])->arg () =
    _tao_ptr->op3 (
          ((TAO::Arg_Traits< ::CORBA::Long>::in_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::CORBA::Short>::out_arg_val *) args[2])->arg (),
          ((TAO::Arg_Traits< ::CORBA::ULong>::inout_arg_val *) args[3])->arg ()
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op4 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex1_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex1_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::Short>::ret_val *) args[0])->arg () =
    _tao_ptr->op4 (
          ((TAO::Arg_Traits< ::CORBA::Short>::in_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::CORBA::ULong>::out_arg_val *) args[2])->arg (),
          ((TAO::Arg_Traits< ::CORBA::UShort>::inout_arg_val *) args[3])->arg ()
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op5 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex1_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex1_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::ULong>::ret_val *) args[0])->arg () =
    _tao_ptr->op5 (
          ((TAO::Arg_Traits< ::CORBA::ULong>::inout_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::CORBA::UShort>::in_arg_val *) args[2])->arg (),
          ((TAO::Arg_Traits< ::ACE_InputCDR::to_char>::out_arg_val *) args[3])->arg (),
          ((TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val *) args[4])->arg ()
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op6 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex1_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex1_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::UShort>::ret_val *) args[0])->arg () =
    _tao_ptr->op6 (
          ((TAO::Arg_Traits< ::CORBA::UShort>::out_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::ACE_InputCDR::to_char>::inout_arg_val *) args[2])->arg ()
        );
}



//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::ex1::ex1 ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_ex1_optable);
}

POA_OldDif2::ex1::ex1 (const ex1& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs)
{
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op0_ex1
    : public TAO::Upcall_Command
  {
  public:
    inline op0_ex1 (
      POA_OldDif2::ex1 * servant)
      : servant_ (servant)
    {
    }

    void execute () override
    {
      this->servant_->op0 ();
    }
  
  private:
    POA_OldDif2::ex1 * const servant_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex1::op0_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex1 * const impl =
    dynamic_cast<POA_OldDif2::ex1 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op0_ex1 command (
    impl);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op1_ex1
    : public TAO::Upcall_Command
  {
  public:
    inline op1_ex1 (
      POA_OldDif2::ex1 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Float>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::Float> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::CORBA::Float>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Float> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::Double>::out_arg_type arg_2 =
        TAO::Portable_Server::get_out_arg< ::CORBA::Double> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::CORBA::Long>::inout_arg_type arg_3 =
        TAO::Portable_Server::get_inout_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          3);
        
      retval =
        this->servant_->op1 (
          arg_1
          , arg_2
          , arg_3);
    }
  
  private:
    POA_OldDif2::ex1 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex1::op1_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::Float>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Float>::in_arg_val _tao_f;
  TAO::SArg_Traits< ::CORBA::Double>::out_arg_val _tao_d;
  TAO::SArg_Traits< ::CORBA::Long>::inout_arg_val _tao_l;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_f),
      std::addressof(_tao_d),
      std::addressof(_tao_l)
    };
  
  POA_OldDif2::ex1 * const impl =
    dynamic_cast<POA_OldDif2::ex1 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op1_ex1 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op2_ex1
    : public TAO::Upcall_Command
  {
  public:
    inline op2_ex1 (
      POA_OldDif2::ex1 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Double>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::Double> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::CORBA::Double>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Double> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::Long>::out_arg_type arg_2 =
        TAO::Portable_Server::get_out_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::CORBA::Short>::inout_arg_type arg_3 =
        TAO::Portable_Server::get_inout_arg< ::CORBA::Short> (
          this->operation_details_,
          this->args_,
          3);
        
      retval =
        this->servant_->op2 (
          arg_1
          , arg_2
          , arg_3);
    }
  
  private:
    POA_OldDif2::ex1 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex1::op2_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::Double>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Double>::in_arg_val _tao_d;
  TAO::SArg_Traits< ::CORBA::Long>::out_arg_val _tao_l;
  TAO::SArg_Traits< ::CORBA::Short>::inout_arg_val _tao_s;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_d),
      std::addressof(_tao_l),
      std::addressof(_tao_s)
    };
  
  POA_OldDif2::ex1 * const impl =
    dynamic_cast<POA_OldDif2::ex1 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op2_ex1 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op3_ex1
    : public TAO::Upcall_Command
  {
  public:
    inline op3_ex1 (
      POA_OldDif2::ex1 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Long>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::CORBA::Long>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::Short>::out_arg_type arg_2 =
        TAO::Portable_Server::get_out_arg< ::CORBA::Short> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::CORBA::ULong>::inout_arg_type arg_3 =
        TAO::Portable_Server::get_inout_arg< ::CORBA::ULong> (
          this->operation_details_,
          this->args_,
          3);
        
      retval =
        this->servant_->op3 (
          arg_1
          , arg_2
          , arg_3);
    }
  
  private:
    POA_OldDif2::ex1 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex1::op3_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::Long>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Long>::in_arg_val _tao_l;
  TAO::SArg_Traits< ::CORBA::Short>::out_arg_val _tao_s;
  TAO::SArg_Traits< ::CORBA::ULong>::inout_arg_val _tao_ul;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_l),
      std::addressof(_tao_s),
      std::addressof(_tao_ul)
    };
  
  POA_OldDif2::ex1 * const impl =
    dynamic_cast<POA_OldDif2::ex1 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op3_ex1 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op4_ex1
    : public TAO::Upcall_Command
  {
  public:
    inline op4_ex1 (
      POA_OldDif2::ex1 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Short>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::Short> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::CORBA::Short>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Short> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::ULong>::out_arg_type arg_2 =
        TAO::Portable_Server::get_out_arg< ::CORBA::ULong> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::CORBA::UShort>::inout_arg_type arg_3 =
        TAO::Portable_Server::get_inout_arg< ::CORBA::UShort> (
          this->operation_details_,
          this->args_,
          3);
        
      retval =
        this->servant_->op4 (
          arg_1
          , arg_2
          , arg_3);
    }
  
  private:
    POA_OldDif2::ex1 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex1::op4_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::Short>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Short>::in_arg_val _tao_s;
  TAO::SArg_Traits< ::CORBA::ULong>::out_arg_val _tao_ul;
  TAO::SArg_Traits< ::CORBA::UShort>::inout_arg_val _tao_us;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_s),
      std::addressof(_tao_ul),
      std::addressof(_tao_us)
    };
  
  POA_OldDif2::ex1 * const impl =
    dynamic_cast<POA_OldDif2::ex1 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op4_ex1 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op5_ex1
    : public TAO::Upcall_Command
  {
  public:
    inline op5_ex1 (
      POA_OldDif2::ex1 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::ULong>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::ULong> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::CORBA::ULong>::inout_arg_type arg_1 =
        TAO::Portable_Server::get_inout_arg< ::CORBA::ULong> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::UShort>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::CORBA::UShort> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_char>::out_arg_type arg_3 =
        TAO::Portable_Server::get_out_arg< ::ACE_InputCDR::to_char> (
          this->operation_details_,
          this->args_,
          3);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_4 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
          this->operation_details_,
          this->args_,
          4);
        
      retval =
        this->servant_->op5 (
          arg_1
          , arg_2
          , arg_3
          , arg_4);
    }
  
  private:
    POA_OldDif2::ex1 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex1::op5_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ULong>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::ULong>::inout_arg_val _tao_ul;
  TAO::SArg_Traits< ::CORBA::UShort>::in_arg_val _tao_us;
  TAO::SArg_Traits< ::ACE_InputCDR::to_char>::out_arg_val _tao_c;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_b;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ul),
      std::addressof(_tao_us),
      std::addressof(_tao_c),
      std::addressof(_tao_b)
    };
  
  POA_OldDif2::ex1 * const impl =
    dynamic_cast<POA_OldDif2::ex1 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op5_ex1 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 5
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op6_ex1
    : public TAO::Upcall_Command
  {
  public:
    inline op6_ex1 (
      POA_OldDif2::ex1 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::UShort>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::UShort> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::CORBA::UShort>::out_arg_type arg_1 =
        TAO::Portable_Server::get_out_arg< ::CORBA::UShort> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_char>::inout_arg_type arg_2 =
        TAO::Portable_Server::get_inout_arg< ::ACE_InputCDR::to_char> (
          this->operation_details_,
          this->args_,
          2);
        
      retval =
        this->servant_->op6 (
          arg_1
          , arg_2);
    }
  
  private:
    POA_OldDif2::ex1 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex1::op6_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::UShort>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::UShort>::out_arg_val _tao_us;
  TAO::SArg_Traits< ::ACE_InputCDR::to_char>::inout_arg_val _tao_c;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_us),
      std::addressof(_tao_c)
    };
  
  POA_OldDif2::ex1 * const impl =
    dynamic_cast<POA_OldDif2::ex1 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op6_ex1 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 3
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::ex1::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:OldDif2/ex1:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::ex1::_interface_repository_id () const
{
  return "IDL:OldDif2/ex1:1.0";
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:394



void POA_OldDif2::ex1::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:354



OldDif2::ex1 *
POA_OldDif2::ex1::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean const _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::ex1>::unchecked_narrow (obj.in ());
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_ss.cpp:67


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op0 ()
{
  this->_tao_rh_init_reply ();

  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op0_excep (
  ::OldDif2::AMH_ex1ExceptionHolder * holder)
{
  try
  {
    holder->raise_op0 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op1 (
  ::CORBA::Float return_value,
  ::CORBA::Double d,
  ::CORBA::Long l)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value) &&
      (_tao_out << d) &&
      (_tao_out << l)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op1_excep (
  ::OldDif2::AMH_ex1ExceptionHolder * holder)
{
  try
  {
    holder->raise_op1 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op2 (
  ::CORBA::Double return_value,
  ::CORBA::Long l,
  ::CORBA::Short s)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value) &&
      (_tao_out << l) &&
      (_tao_out << s)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op2_excep (
  ::OldDif2::AMH_ex1ExceptionHolder * holder)
{
  try
  {
    holder->raise_op2 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op3 (
  ::CORBA::Long return_value,
  ::CORBA::Short s,
  ::CORBA::ULong ul)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value) &&
      (_tao_out << s) &&
      (_tao_out << ul)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op3_excep (
  ::OldDif2::AMH_ex1ExceptionHolder * holder)
{
  try
  {
    holder->raise_op3 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op4 (
  ::CORBA::Short return_value,
  ::CORBA::ULong ul,
  ::CORBA::UShort us)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value) &&
      (_tao_out << ul) &&
      (_tao_out << us)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op4_excep (
  ::OldDif2::AMH_ex1ExceptionHolder * holder)
{
  try
  {
    holder->raise_op4 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op5 (
  ::CORBA::ULong return_value,
  ::CORBA::ULong ul,
  ::CORBA::Char c)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value) &&
      (_tao_out << ul) &&
      (_tao_out << ::ACE_OutputCDR::from_char (c))
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op5_excep (
  ::OldDif2::AMH_ex1ExceptionHolder * holder)
{
  try
  {
    holder->raise_op5 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op6 (
  ::CORBA::UShort return_value,
  ::CORBA::UShort us,
  ::CORBA::Char c)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value) &&
      (_tao_out << us) &&
      (_tao_out << ::ACE_OutputCDR::from_char (c))
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex1ResponseHandler::op6_excep (
  ::OldDif2::AMH_ex1ExceptionHolder * holder)
{
  try
  {
    holder->raise_op6 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_AMI_ex1Handler_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_AMI_ex1Handler_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_AMI_ex1Handler_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19,  5,  3,
     15,  4,  9, 14,  0, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
     19, 19, 19, 19, 19,  0, 19,  0, 19, 19,
      0,  5, 19, 19, 19, 19, 19, 19, 19, 19,
     19,  0,  0, 19, 19, 19,  0, 19, 19, 19,
     19, 19, 19, 19, 19, 19, 19, 19,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_AMI_ex1Handler_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 19,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 14,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 18,
      HASH_VALUE_RANGE = 16,
      DUPLICATES = 7,
      WORDLIST_SIZE = 22
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op6", std::addressof(POA_OldDif2::AMI_ex1Handler::op6_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op6)},
      {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
      {"op1", std::addressof(POA_OldDif2::AMI_ex1Handler::op1_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op1)},
      {"op3", std::addressof(POA_OldDif2::AMI_ex1Handler::op3_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op3)},
      {"op0", std::addressof(POA_OldDif2::AMI_ex1Handler::op0_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op0)},
      {"op0_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op0_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op0_excep)},
      {"op6_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op6_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op6_excep)},
      {"op5_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op5_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op5_excep)},
      {"op4_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op4_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op4_excep)},
      {"op3_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op3_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op3_excep)},
      {"op2_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op2_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op2_excep)},
      {"op1_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op1_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op1_excep)},
      {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
      {"op4", std::addressof(POA_OldDif2::AMI_ex1Handler::op4_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op4)},
      {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
      {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr},
      {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
      {"op5", std::addressof(POA_OldDif2::AMI_ex1Handler::op5_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op5)},
      {"op2", std::addressof(POA_OldDif2::AMI_ex1Handler::op2_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op2)},
    };

  static constexpr signed char lookup[] =
    {
       -1,  -8,  -7,   3,  -1,   4,   5,   6,   7, -26,  15,  -1,  16,  17, 
       18,  19,  -1,  20,  21, 
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          int slot = lookup[key];

          if (slot >= 0 && slot < WORDLIST_SIZE)
            {
              const char *s = wordlist[slot].opname;

              if (*str == *s && !ACE_OS::strncmp (str + 1, s + 1, len - 1))
                return &wordlist[slot];
            }
          else if (slot < 0 && slot >= -MAX_HASH_VALUE)
            return 0;
          else
            {
              unsigned int offset = key + slot + (slot > 0 ? -MAX_HASH_VALUE : MAX_HASH_VALUE);
              const TAO_operation_db_entry *base = &wordlist[-lookup[offset]];
              const TAO_operation_db_entry *ptr = base + -lookup[offset + 1];

              while (--ptr >= base)
                if (*str == *ptr->opname && !ACE_OS::strncmp (str + 1, ptr->opname + 1, len - 1))
                  return ptr;
            }
        }
    }
  return 0;
}

static TAO_OldDif2_AMI_ex1Handler_Perfect_Hash_OpTable tao_OldDif2_AMI_ex1Handler_optable;

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::~_TAO_AMI_ex1Handler_Direct_Proxy_Impl ()
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op0 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op0 (
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op0_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op0_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op1 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op1 (
        ((TAO::Arg_Traits< ::CORBA::Float>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::CORBA::Double>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::CORBA::Long>::in_arg_val *) args[3])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op1_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op1_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op2 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op2 (
        ((TAO::Arg_Traits< ::CORBA::Double>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::CORBA::Long>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::CORBA::Short>::in_arg_val *) args[3])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op2_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op2_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op3 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op3 (
        ((TAO::Arg_Traits< ::CORBA::Long>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::CORBA::Short>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val *) args[3])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op3_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op3_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op4 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op4 (
        ((TAO::Arg_Traits< ::CORBA::Short>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::CORBA::UShort>::in_arg_val *) args[3])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op4_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op4_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op5 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op5 (
        ((TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_char>::in_arg_val *) args[3])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op5_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op5_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op6 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op6 (
        ((TAO::Arg_Traits< ::CORBA::UShort>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::CORBA::UShort>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_char>::in_arg_val *) args[3])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op6_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex1Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex1Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op6_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}



//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::AMI_ex1Handler::AMI_ex1Handler ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_AMI_ex1Handler_optable);
}

POA_OldDif2::AMI_ex1Handler::AMI_ex1Handler (const AMI_ex1Handler& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    ::POA_Messaging::ReplyHandler (rhs)
{
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op0_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op0_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant)
      : servant_ (servant)
    {
    }

    void execute () override
    {
      this->servant_->op0 ();
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op0_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op0_AMI_ex1Handler command (
    impl);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op0_excep_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op0_excep_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op0_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op0_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op0_excep_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op1_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op1_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Float>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Float> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::Double>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Double> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::CORBA::Long>::in_arg_type arg_3 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          3);
        
      this->servant_->op1 (
        arg_1
        , arg_2
        , arg_3);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op1_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Float>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::CORBA::Double>::in_arg_val _tao_d;
  TAO::SArg_Traits< ::CORBA::Long>::in_arg_val _tao_l;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_d),
      std::addressof(_tao_l)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op1_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op1_excep_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op1_excep_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op1_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op1_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op1_excep_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op2_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op2_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Double>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Double> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::Long>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::CORBA::Short>::in_arg_type arg_3 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Short> (
          this->operation_details_,
          this->args_,
          3);
        
      this->servant_->op2 (
        arg_1
        , arg_2
        , arg_3);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op2_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Double>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::CORBA::Long>::in_arg_val _tao_l;
  TAO::SArg_Traits< ::CORBA::Short>::in_arg_val _tao_s;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_l),
      std::addressof(_tao_s)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op2_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op2_excep_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op2_excep_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op2_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op2_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op2_excep_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op3_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op3_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Long>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::Short>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Short> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::CORBA::ULong>::in_arg_type arg_3 =
        TAO::Portable_Server::get_in_arg< ::CORBA::ULong> (
          this->operation_details_,
          this->args_,
          3);
        
      this->servant_->op3 (
        arg_1
        , arg_2
        , arg_3);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op3_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Long>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::CORBA::Short>::in_arg_val _tao_s;
  TAO::SArg_Traits< ::CORBA::ULong>::in_arg_val _tao_ul;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_s),
      std::addressof(_tao_ul)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op3_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op3_excep_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op3_excep_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op3_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op3_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op3_excep_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op4_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op4_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Short>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Short> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::ULong>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::CORBA::ULong> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::CORBA::UShort>::in_arg_type arg_3 =
        TAO::Portable_Server::get_in_arg< ::CORBA::UShort> (
          this->operation_details_,
          this->args_,
          3);
        
      this->servant_->op4 (
        arg_1
        , arg_2
        , arg_3);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op4_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Short>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::CORBA::ULong>::in_arg_val _tao_ul;
  TAO::SArg_Traits< ::CORBA::UShort>::in_arg_val _tao_us;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_ul),
      std::addressof(_tao_us)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op4_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op4_excep_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op4_excep_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op4_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op4_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op4_excep_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op5_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op5_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::ULong>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::ULong> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::ULong>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::CORBA::ULong> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_char>::in_arg_type arg_3 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_char> (
          this->operation_details_,
          this->args_,
          3);
        
      this->servant_->op5 (
        arg_1
        , arg_2
        , arg_3);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op5_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::ULong>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::CORBA::ULong>::in_arg_val _tao_ul;
  TAO::SArg_Traits< ::ACE_InputCDR::to_char>::in_arg_val _tao_c;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_ul),
      std::addressof(_tao_c)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op5_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op5_excep_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op5_excep_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op5_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op5_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op5_excep_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op6_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op6_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::UShort>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::UShort> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::UShort>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::CORBA::UShort> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_char>::in_arg_type arg_3 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_char> (
          this->operation_details_,
          this->args_,
          3);
        
      this->servant_->op6 (
        arg_1
        , arg_2
        , arg_3);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op6_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::UShort>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::CORBA::UShort>::in_arg_val _tao_us;
  TAO::SArg_Traits< ::ACE_InputCDR::to_char>::in_arg_val _tao_c;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_us),
      std::addressof(_tao_c)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op6_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op6_excep_AMI_ex1Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op6_excep_AMI_ex1Handler (
      POA_OldDif2::AMI_ex1Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op6_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex1Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex1Handler::op6_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex1Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex1Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op6_excep_AMI_ex1Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::AMI_ex1Handler::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/AMI_ex1Handler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::AMI_ex1Handler::_interface_repository_id () const
{
  return "IDL:OldDif2/AMI_ex1Handler:1.0";
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:394



void POA_OldDif2::AMI_ex1Handler::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:354



OldDif2::AMI_ex1Handler *
POA_OldDif2::AMI_ex1Handler::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean const _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::AMI_ex1Handler>::unchecked_narrow (obj.in ());
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_AMH_ex2_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_AMH_ex2_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_AMH_ex2_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34,  5, 18,
      0, 20, 25, 30,  3,  8, 13, 15, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34,  0, 34,  0, 34, 34,
      0,  5, 34, 34, 34, 34, 34, 34, 34, 34,
     34,  0, 34, 34, 34, 34,  0, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_AMH_ex2_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 18,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 14,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 33,
      HASH_VALUE_RANGE = 31,
      DUPLICATES = 0,
      WORDLIST_SIZE = 21
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op2", std::addressof(POA_OldDif2::AMH_ex1::op2_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op2)},
      {"op12", std::addressof(POA_OldDif2::AMH_ex2::op12_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op12)},
      {"_is_a", std::addressof(TAO_AMH_Skeletons::_is_a_amh_skel), nullptr},
      {"op6", std::addressof(POA_OldDif2::AMH_ex1::op6_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op6)},
      {"",0,0},
      {"op0", std::addressof(POA_OldDif2::AMH_ex1::op0_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op0)},
      {"op10", std::addressof(POA_OldDif2::AMH_ex2::op10_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op10)},
      {"_component", std::addressof(TAO_AMH_Skeletons::_component_amh_skel), nullptr},
      {"op7", std::addressof(POA_OldDif2::AMH_ex2::op7_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op7)},
      {"",0,0},
      {"_non_existent", std::addressof(TAO_AMH_Skeletons::_non_existent_amh_skel), nullptr},
      {"_repository_id", std::addressof(TAO_AMH_Skeletons::_repository_id_amh_skel), nullptr},
      {"_interface", std::addressof(TAO_AMH_Skeletons::_interface_amh_skel), nullptr},
      {"op8", std::addressof(POA_OldDif2::AMH_ex2::op8_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op8)},
      {"",0,0},
      {"op9", std::addressof(POA_OldDif2::AMH_ex2::op9_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op9)},
      {"",0,0},{"",0,0},
      {"op1", std::addressof(POA_OldDif2::AMH_ex1::op1_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op1)},
      {"op11", std::addressof(POA_OldDif2::AMH_ex2::op11_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op11)},
      {"op3", std::addressof(POA_OldDif2::AMH_ex1::op3_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op3)},
      {"",0,0},{"",0,0},{"",0,0},{"",0,0},
      {"op4", std::addressof(POA_OldDif2::AMH_ex1::op4_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op4)},
      {"",0,0},{"",0,0},{"",0,0},{"",0,0},
      {"op5", std::addressof(POA_OldDif2::AMH_ex1::op5_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op5)},
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          const char *s = wordlist[key].opname;

          if (*str == *s && !ACE_OS::strncmp (str + 1, s + 1, len - 1))
            return &wordlist[key];
        }
    }
  return 0;
}

static TAO_OldDif2_AMH_ex2_Perfect_Hash_OpTable tao_OldDif2_AMH_ex2_optable;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::AMH_ex2::AMH_ex2 ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_AMH_ex2_optable);
}

POA_OldDif2::AMH_ex2::AMH_ex2 (const AMH_ex2& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_OldDif2::AMH_ex1 (rhs)
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex2::op7_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex2 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex2 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Char c;
  ::CORBA::Octet o;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> ::ACE_InputCDR::to_char (c)) &&
      (_tao_in >> ::ACE_InputCDR::to_octet (o))
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex2ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex2ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex2ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op7 (
      safe_rd_.get (),
      c,
      o
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex2::op8_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex2 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex2 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Octet o;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> ::ACE_InputCDR::to_octet (o))
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex2ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex2ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex2ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op8 (
      safe_rd_.get (),
      o
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex2::op9_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex2 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex2 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Octet o;
  ::CORBA::String_var ls;
  ::CORBA::Long l;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> ::ACE_InputCDR::to_octet (o)) &&
      (_tao_in >> ::ACE_InputCDR::to_string (ls.out (), 10)) &&
      (_tao_in >> l)
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex2ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex2ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex2ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op9 (
      safe_rd_.get (),
      o,
      ls.in (),
      l
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex2::op10_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex2 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex2 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::String_var s;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> s.out ())
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex2ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex2ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex2ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op10 (
      safe_rd_.get (),
      s.in ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex2::op11_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex2 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex2 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::String_var ls;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> ::ACE_InputCDR::to_string (ls.out (), 10))
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex2ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex2ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex2ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op11 (
      safe_rd_.get (),
      ls.in ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex2::op12_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex2 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex2 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Long l;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> l)
    ))
    throw ::CORBA::MARSHAL();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex2ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex2ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex2ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->op12 (
      safe_rd_.get (),
      l
    );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::AMH_ex2::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:OldDif2/ex1:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/ex2:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::AMH_ex2::_interface_repository_id () const
{
  return "IDL:OldDif2/ex2:1.0";
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_ss.cpp:106

void
POA_OldDif2::AMH_ex2::_dispatch (
    TAO_ServerRequest &req,
    TAO::Portable_Server::Servant_Upcall *context)
{
  this->asynchronous_upcall_dispatch (req,context,this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_ss.cpp:64

OldDif2::ex2*
POA_OldDif2::AMH_ex2::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::ex2>::unchecked_narrow (obj.in ());
      
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_ex2_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_ex2_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_ex2_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34,  5, 18,
      0, 20, 25, 30,  3,  8, 13, 15, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34,  0, 34,  0, 34, 34,
      0,  5, 34, 34, 34, 34, 34, 34, 34, 34,
     34,  0, 34, 34, 34, 34,  0, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_ex2_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 18,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 14,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 33,
      HASH_VALUE_RANGE = 31,
      DUPLICATES = 0,
      WORDLIST_SIZE = 21
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op2", std::addressof(POA_OldDif2::ex1::op2_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op2)},
      {"op12", std::addressof(POA_OldDif2::ex2::op12_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op12)},
      {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
      {"op6", std::addressof(POA_OldDif2::ex1::op6_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op6)},
      {"",0,0},
      {"op0", std::addressof(POA_OldDif2::ex1::op0_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op0)},
      {"op10", std::addressof(POA_OldDif2::ex2::op10_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op10)},
      {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
      {"op7", std::addressof(POA_OldDif2::ex2::op7_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op7)},
      {"",0,0},
      {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
      {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr},
      {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
      {"op8", std::addressof(POA_OldDif2::ex2::op8_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op8)},
      {"",0,0},
      {"op9", std::addressof(POA_OldDif2::ex2::op9_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op9)},
      {"",0,0},{"",0,0},
      {"op1", std::addressof(POA_OldDif2::ex1::op1_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op1)},
      {"op11", std::addressof(POA_OldDif2::ex2::op11_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op11)},
      {"op3", std::addressof(POA_OldDif2::ex1::op3_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op3)},
      {"",0,0},{"",0,0},{"",0,0},{"",0,0},
      {"op4", std::addressof(POA_OldDif2::ex1::op4_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op4)},
      {"",0,0},{"",0,0},{"",0,0},{"",0,0},
      {"op5", std::addressof(POA_OldDif2::ex1::op5_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op5)},
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          const char *s = wordlist[key].opname;

          if (*str == *s && !ACE_OS::strncmp (str + 1, s + 1, len - 1))
            return &wordlist[key];
        }
    }
  return 0;
}

static TAO_OldDif2_ex2_Perfect_Hash_OpTable tao_OldDif2_ex2_optable;

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::~_TAO_ex2_Direct_Proxy_Impl ()
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op7 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex2_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex2_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::ACE_InputCDR::to_char>::ret_val *) args[0])->arg () =
    _tao_ptr->op7 (
          ((TAO::Arg_Traits< ::ACE_InputCDR::to_char>::in_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::out_arg_val *) args[2])->arg (),
          ((TAO::Arg_Traits< ::ACE_InputCDR::to_octet>::inout_arg_val *) args[3])->arg ()
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op8 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex2_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex2_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val *) args[0])->arg () =
    _tao_ptr->op8 (
          ((TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::out_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::ACE_InputCDR::to_octet>::in_arg_val *) args[2])->arg ()
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op9 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex2_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex2_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::ACE_InputCDR::to_octet>::ret_val *) args[0])->arg () =
    _tao_ptr->op9 (
          ((TAO::Arg_Traits< ::ACE_InputCDR::to_octet>::inout_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< char *>::out_arg_val *) args[2])->arg (),
          ((TAO::Arg_Traits< ::TAO::OldDif2_ex2_op9_ls>::in_arg_val *) args[3])->arg (),
          ((TAO::Arg_Traits< ::CORBA::Long>::inout_arg_val *) args[4])->arg ()
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op10 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex2_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex2_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< char *>::ret_val *) args[0])->arg () =
    _tao_ptr->op10 (
          ((TAO::Arg_Traits< char *>::in_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::TAO::OldDif2_ex2_op10_ls>::out_arg_val *) args[2])->arg ()
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op11 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex2_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex2_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::TAO::OldDif2_ex2_op11>::ret_val *) args[0])->arg () =
    _tao_ptr->op11 (
          ((TAO::Arg_Traits< ::TAO::OldDif2_ex2_op11_ls>::inout_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::CORBA::Long>::out_arg_val *) args[2])->arg ()
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op12 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex2_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex2_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::Long>::ret_val *) args[0])->arg () =
    _tao_ptr->op12 (
          ((TAO::Arg_Traits< ::CORBA::Long>::in_arg_val *) args[1])->arg ()
        );
}



//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::ex2::ex2 ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_ex2_optable);
}

POA_OldDif2::ex2::ex2 (const ex2& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_OldDif2::ex1 (rhs)
{
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op7_ex2
    : public TAO::Upcall_Command
  {
  public:
    inline op7_ex2 (
      POA_OldDif2::ex2 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_char>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::ACE_InputCDR::to_char> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::ACE_InputCDR::to_char>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_char> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::out_arg_type arg_2 =
        TAO::Portable_Server::get_out_arg< ::ACE_InputCDR::to_boolean> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::inout_arg_type arg_3 =
        TAO::Portable_Server::get_inout_arg< ::ACE_InputCDR::to_octet> (
          this->operation_details_,
          this->args_,
          3);
        
      retval =
        this->servant_->op7 (
          arg_1
          , arg_2
          , arg_3);
    }
  
  private:
    POA_OldDif2::ex2 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex2::op7_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::ACE_InputCDR::to_char>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_char>::in_arg_val _tao_c;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::out_arg_val _tao_b;
  TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::inout_arg_val _tao_o;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_c),
      std::addressof(_tao_b),
      std::addressof(_tao_o)
    };
  
  POA_OldDif2::ex2 * const impl =
    dynamic_cast<POA_OldDif2::ex2 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op7_ex2 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op8_ex2
    : public TAO::Upcall_Command
  {
  public:
    inline op8_ex2 (
      POA_OldDif2::ex2 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::ACE_InputCDR::to_boolean> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::out_arg_type arg_1 =
        TAO::Portable_Server::get_out_arg< ::ACE_InputCDR::to_boolean> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_octet> (
          this->operation_details_,
          this->args_,
          2);
        
      retval =
        this->servant_->op8 (
          arg_1
          , arg_2);
    }
  
  private:
    POA_OldDif2::ex2 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex2::op8_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::out_arg_val _tao_b;
  TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::in_arg_val _tao_o;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_b),
      std::addressof(_tao_o)
    };
  
  POA_OldDif2::ex2 * const impl =
    dynamic_cast<POA_OldDif2::ex2 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op8_ex2 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 3
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op9_ex2
    : public TAO::Upcall_Command
  {
  public:
    inline op9_ex2 (
      POA_OldDif2::ex2 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::ACE_InputCDR::to_octet> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::inout_arg_type arg_1 =
        TAO::Portable_Server::get_inout_arg< ::ACE_InputCDR::to_octet> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< char *>::out_arg_type arg_2 =
        TAO::Portable_Server::get_out_arg< char *> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::TAO::OldDif2_ex2_op9_ls>::in_arg_type arg_3 =
        TAO::Portable_Server::get_in_arg< ::TAO::OldDif2_ex2_op9_ls> (
          this->operation_details_,
          this->args_,
          3);
        
      TAO::SArg_Traits< ::CORBA::Long>::inout_arg_type arg_4 =
        TAO::Portable_Server::get_inout_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          4);
        
      retval =
        this->servant_->op9 (
          arg_1
          , arg_2
          , arg_3
          , arg_4);
    }
  
  private:
    POA_OldDif2::ex2 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex2::op9_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::inout_arg_val _tao_o;
  TAO::SArg_Traits< char *>::out_arg_val _tao_s;
  TAO::SArg_Traits< ::TAO::OldDif2_ex2_op9_ls>::in_arg_val _tao_ls;
  TAO::SArg_Traits< ::CORBA::Long>::inout_arg_val _tao_l;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_o),
      std::addressof(_tao_s),
      std::addressof(_tao_ls),
      std::addressof(_tao_l)
    };
  
  POA_OldDif2::ex2 * const impl =
    dynamic_cast<POA_OldDif2::ex2 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op9_ex2 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 5
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op10_ex2
    : public TAO::Upcall_Command
  {
  public:
    inline op10_ex2 (
      POA_OldDif2::ex2 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< char *>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< char *> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< char *>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< char *> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::TAO::OldDif2_ex2_op10_ls>::out_arg_type arg_2 =
        TAO::Portable_Server::get_out_arg< ::TAO::OldDif2_ex2_op10_ls> (
          this->operation_details_,
          this->args_,
          2);
        
      retval =
        this->servant_->op10 (
          arg_1
          , arg_2);
    }
  
  private:
    POA_OldDif2::ex2 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex2::op10_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< char *>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_s;
  TAO::SArg_Traits< ::TAO::OldDif2_ex2_op10_ls>::out_arg_val _tao_ls;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_s),
      std::addressof(_tao_ls)
    };
  
  POA_OldDif2::ex2 * const impl =
    dynamic_cast<POA_OldDif2::ex2 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op10_ex2 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 3
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op11_ex2
    : public TAO::Upcall_Command
  {
  public:
    inline op11_ex2 (
      POA_OldDif2::ex2 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::TAO::OldDif2_ex2_op11>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::TAO::OldDif2_ex2_op11> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::TAO::OldDif2_ex2_op11_ls>::inout_arg_type arg_1 =
        TAO::Portable_Server::get_inout_arg< ::TAO::OldDif2_ex2_op11_ls> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::CORBA::Long>::out_arg_type arg_2 =
        TAO::Portable_Server::get_out_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          2);
        
      retval =
        this->servant_->op11 (
          arg_1
          , arg_2);
    }
  
  private:
    POA_OldDif2::ex2 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex2::op11_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::TAO::OldDif2_ex2_op11>::ret_val retval;
  TAO::SArg_Traits< ::TAO::OldDif2_ex2_op11_ls>::inout_arg_val _tao_ls;
  TAO::SArg_Traits< ::CORBA::Long>::out_arg_val _tao_l;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ls),
      std::addressof(_tao_l)
    };
  
  POA_OldDif2::ex2 * const impl =
    dynamic_cast<POA_OldDif2::ex2 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op11_ex2 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 3
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op12_ex2
    : public TAO::Upcall_Command
  {
  public:
    inline op12_ex2 (
      POA_OldDif2::ex2 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Long>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_);
      
      TAO::SArg_Traits< ::CORBA::Long>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          1);
        
      retval =
        this->servant_->op12 (
          arg_1);
    }
  
  private:
    POA_OldDif2::ex2 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex2::op12_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::Long>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Long>::in_arg_val _tao_l;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_l)
    };
  
  POA_OldDif2::ex2 * const impl =
    dynamic_cast<POA_OldDif2::ex2 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op12_ex2 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::ex2::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:OldDif2/ex1:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/ex2:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::ex2::_interface_repository_id () const
{
  return "IDL:OldDif2/ex2:1.0";
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:394



void POA_OldDif2::ex2::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:354



OldDif2::ex2 *
POA_OldDif2::ex2::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean const _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::ex2>::unchecked_narrow (obj.in ());
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_ss.cpp:67


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op7 (
  ::CORBA::Char return_value,
  ::CORBA::Boolean b,
  ::CORBA::Octet o)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << ::ACE_OutputCDR::from_char (return_value)) &&
      (_tao_out << ::ACE_OutputCDR::from_boolean (b)) &&
      (_tao_out << ::ACE_OutputCDR::from_octet (o))
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op7_excep (
  ::OldDif2::AMH_ex2ExceptionHolder * holder)
{
  try
  {
    holder->raise_op7 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op8 (
  ::CORBA::Boolean return_value,
  ::CORBA::Boolean b)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << ::ACE_OutputCDR::from_boolean (return_value)) &&
      (_tao_out << ::ACE_OutputCDR::from_boolean (b))
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op8_excep (
  ::OldDif2::AMH_ex2ExceptionHolder * holder)
{
  try
  {
    holder->raise_op8 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op9 (
  ::CORBA::Octet return_value,
  ::CORBA::Octet o,
  const char * s,
  ::CORBA::Long l)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << ::ACE_OutputCDR::from_octet (return_value)) &&
      (_tao_out << ::ACE_OutputCDR::from_octet (o)) &&
      (_tao_out << s) &&
      (_tao_out << l)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op9_excep (
  ::OldDif2::AMH_ex2ExceptionHolder * holder)
{
  try
  {
    holder->raise_op9 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op10 (
  const char * return_value,
  const char * ls)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value) &&
      (_tao_out << ls)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op10_excep (
  ::OldDif2::AMH_ex2ExceptionHolder * holder)
{
  try
  {
    holder->raise_op10 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op11 (
  const char * return_value,
  const char * ls,
  ::CORBA::Long l)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value) &&
      (_tao_out << ls) &&
      (_tao_out << l)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op11_excep (
  ::OldDif2::AMH_ex2ExceptionHolder * holder)
{
  try
  {
    holder->raise_op11 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op12 (
  ::CORBA::Long return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex2ResponseHandler::op12_excep (
  ::OldDif2::AMH_ex2ExceptionHolder * holder)
{
  try
  {
    holder->raise_op12 ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_AMI_ex2Handler_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_AMI_ex2Handler_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_AMI_ex2Handler_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
     39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
     39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
     39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
     39, 39, 39, 39, 39, 39, 39, 39, 18, 15,
      0,  5, 20, 25, 30,  3,  8, 13, 39, 39,
     39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
     39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
     39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
     39, 39, 39, 39, 39,  0, 39,  0, 39, 39,
      0,  5, 39, 39, 39, 39, 39, 39, 39, 39,
     39,  0,  0, 39, 39, 39, 25, 39, 39, 39,
     39, 39, 39, 39, 39, 39, 39, 39,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_AMI_ex2Handler_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 31,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 14,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 38,
      HASH_VALUE_RANGE = 36,
      DUPLICATES = 12,
      WORDLIST_SIZE = 34
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op2", std::addressof(POA_OldDif2::AMI_ex1Handler::op2_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op2)},
      {"op12", std::addressof(POA_OldDif2::AMI_ex2Handler::op12_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op12)},
      {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
      {"op7", std::addressof(POA_OldDif2::AMI_ex2Handler::op7_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op7)},
      {"op3", std::addressof(POA_OldDif2::AMI_ex1Handler::op3_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op3)},
      {"op0_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op0_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op0_excep)},
      {"op9_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op9_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op9_excep)},
      {"op8_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op8_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op8_excep)},
      {"op7_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op7_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op7_excep)},
      {"op6_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op6_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op6_excep)},
      {"op5_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op5_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op5_excep)},
      {"op4_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op4_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op4_excep)},
      {"op3_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op3_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op3_excep)},
      {"op2_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op2_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op2_excep)},
      {"op1_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op1_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op1_excep)},
      {"op10_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op10_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op10_excep)},
      {"op12_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op12_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op12_excep)},
      {"op11_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op11_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op11_excep)},
      {"op8", std::addressof(POA_OldDif2::AMI_ex2Handler::op8_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op8)},
      {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr},
      {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
      {"op9", std::addressof(POA_OldDif2::AMI_ex2Handler::op9_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op9)},
      {"op1", std::addressof(POA_OldDif2::AMI_ex1Handler::op1_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op1)},
      {"op11", std::addressof(POA_OldDif2::AMI_ex2Handler::op11_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op11)},
      {"op0", std::addressof(POA_OldDif2::AMI_ex1Handler::op0_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op0)},
      {"op10", std::addressof(POA_OldDif2::AMI_ex2Handler::op10_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op10)},
      {"op4", std::addressof(POA_OldDif2::AMI_ex1Handler::op4_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op4)},
      {"op5", std::addressof(POA_OldDif2::AMI_ex1Handler::op5_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op5)},
      {"op6", std::addressof(POA_OldDif2::AMI_ex1Handler::op6_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op6)},
      {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
      {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
    };

  static constexpr signed char lookup[] =
    {
       -1, -18,  -3,   3,   4,   5,   6,  -1,   7,  41, -47,  21,  -8, -10, 
       22,  23,  24,  -1,  25,  26,  -1,  27,  28,  29,  -1,  -1,  -1,  -1, 
       30,  -1,  -1,  -1,  -1,  31,  -1,  32,  -1,  -1,  33, 
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          int slot = lookup[key];

          if (slot >= 0 && slot < WORDLIST_SIZE)
            {
              const char *s = wordlist[slot].opname;

              if (*str == *s && !ACE_OS::strncmp (str + 1, s + 1, len - 1))
                return &wordlist[slot];
            }
          else if (slot < 0 && slot >= -MAX_HASH_VALUE)
            return 0;
          else
            {
              unsigned int offset = key + slot + (slot > 0 ? -MAX_HASH_VALUE : MAX_HASH_VALUE);
              const TAO_operation_db_entry *base = &wordlist[-lookup[offset]];
              const TAO_operation_db_entry *ptr = base + -lookup[offset + 1];

              while (--ptr >= base)
                if (*str == *ptr->opname && !ACE_OS::strncmp (str + 1, ptr->opname + 1, len - 1))
                  return ptr;
            }
        }
    }
  return 0;
}

static TAO_OldDif2_AMI_ex2Handler_Perfect_Hash_OpTable tao_OldDif2_AMI_ex2Handler_optable;

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::~_TAO_AMI_ex2Handler_Direct_Proxy_Impl ()
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op7 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op7 (
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_char>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_octet>::in_arg_val *) args[3])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op7_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op7_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op8 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op8 (
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val *) args[2])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op8_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op8_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op9 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op9 (
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_octet>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_octet>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< char *>::in_arg_val *) args[3])->arg (),
        ((TAO::Arg_Traits< ::CORBA::Long>::in_arg_val *) args[4])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op9_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op9_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op10 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op10 (
        ((TAO::Arg_Traits< char *>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::TAO::OldDif2_ex2_op10_ls>::in_arg_val *) args[2])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op10_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op10_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op11 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op11 (
        ((TAO::Arg_Traits< ::TAO::OldDif2_AMI_ex2Handler_op11_ami_return_val>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::TAO::OldDif2_ex2_op11_ls>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::CORBA::Long>::in_arg_val *) args[3])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op11_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op11_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op12 (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op12 (
        ((TAO::Arg_Traits< ::CORBA::Long>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op12_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex2Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex2Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->op12_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}



//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::AMI_ex2Handler::AMI_ex2Handler ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_AMI_ex2Handler_optable);
}

POA_OldDif2::AMI_ex2Handler::AMI_ex2Handler (const AMI_ex2Handler& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    ::POA_Messaging::ReplyHandler (rhs),
    POA_OldDif2::AMI_ex1Handler (rhs)
{
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op7_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op7_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_char>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_char> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::in_arg_type arg_3 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_octet> (
          this->operation_details_,
          this->args_,
          3);
        
      this->servant_->op7 (
        arg_1
        , arg_2
        , arg_3);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op7_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_char>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_b;
  TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::in_arg_val _tao_o;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_b),
      std::addressof(_tao_o)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op7_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op7_excep_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op7_excep_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op7_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op7_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op7_excep_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op8_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op8_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
          this->operation_details_,
          this->args_,
          2);
        
      this->servant_->op8 (
        arg_1
        , arg_2);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op8_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_b;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_b)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op8_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 3
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op8_excep_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op8_excep_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op8_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op8_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op8_excep_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op9_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op9_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_octet> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_octet> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< char *>::in_arg_type arg_3 =
        TAO::Portable_Server::get_in_arg< char *> (
          this->operation_details_,
          this->args_,
          3);
        
      TAO::SArg_Traits< ::CORBA::Long>::in_arg_type arg_4 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          4);
        
      this->servant_->op9 (
        arg_1
        , arg_2
        , arg_3
        , arg_4);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op9_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::in_arg_val _tao_o;
  TAO::SArg_Traits< char *>::in_arg_val _tao_s;
  TAO::SArg_Traits< ::CORBA::Long>::in_arg_val _tao_l;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_o),
      std::addressof(_tao_s),
      std::addressof(_tao_l)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op9_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 5
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op9_excep_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op9_excep_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op9_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op9_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op9_excep_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op10_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op10_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< char *>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< char *> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::TAO::OldDif2_ex2_op10_ls>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::TAO::OldDif2_ex2_op10_ls> (
          this->operation_details_,
          this->args_,
          2);
        
      this->servant_->op10 (
        arg_1
        , arg_2);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op10_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::TAO::OldDif2_ex2_op10_ls>::in_arg_val _tao_ls;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_ls)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op10_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 3
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op10_excep_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op10_excep_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op10_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op10_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op10_excep_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op11_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op11_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::TAO::OldDif2_AMI_ex2Handler_op11_ami_return_val>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::TAO::OldDif2_AMI_ex2Handler_op11_ami_return_val> (
          this->operation_details_,
          this->args_,
          1);
        
      TAO::SArg_Traits< ::TAO::OldDif2_ex2_op11_ls>::in_arg_type arg_2 =
        TAO::Portable_Server::get_in_arg< ::TAO::OldDif2_ex2_op11_ls> (
          this->operation_details_,
          this->args_,
          2);
        
      TAO::SArg_Traits< ::CORBA::Long>::in_arg_type arg_3 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          3);
        
      this->servant_->op11 (
        arg_1
        , arg_2
        , arg_3);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op11_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::TAO::OldDif2_AMI_ex2Handler_op11_ami_return_val>::in_arg_val _tao_ami_return_val;
  TAO::SArg_Traits< ::TAO::OldDif2_ex2_op11_ls>::in_arg_val _tao_ls;
  TAO::SArg_Traits< ::CORBA::Long>::in_arg_val _tao_l;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val),
      std::addressof(_tao_ls),
      std::addressof(_tao_l)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op11_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 4
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op11_excep_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op11_excep_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op11_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op11_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op11_excep_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op12_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op12_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Long>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op12 (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op12_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Long>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op12_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class op12_excep_AMI_ex2Handler
    : public TAO::Upcall_Command
  {
  public:
    inline op12_excep_AMI_ex2Handler (
      POA_OldDif2::AMI_ex2Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->op12_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex2Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex2Handler::op12_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex2Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex2Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  op12_excep_AMI_ex2Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::AMI_ex2Handler::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/AMI_ex1Handler:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/AMI_ex2Handler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::AMI_ex2Handler::_interface_repository_id () const
{
  return "IDL:OldDif2/AMI_ex2Handler:1.0";
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:394



void POA_OldDif2::AMI_ex2Handler::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:354



OldDif2::AMI_ex2Handler *
POA_OldDif2::AMI_ex2Handler::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean const _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::AMI_ex2Handler>::unchecked_narrow (obj.in ());
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_AMH_ex3_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_AMH_ex3_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_AMH_ex3_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29,  4,  9,
     14,  3,  5, 10,  0, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29,  0, 29,  0, 29, 29,
      0,  0, 29, 29, 29, 29, 29, 29, 29, 29,
     29,  0, 29, 29, 29, 29,  5, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_AMH_ex3_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 19,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 28,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 28,
      HASH_VALUE_RANGE = 26,
      DUPLICATES = 4,
      WORDLIST_SIZE = 22
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op6", std::addressof(POA_OldDif2::AMH_ex1::op6_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op6)},
      {"_is_a", std::addressof(TAO_AMH_Skeletons::_is_a_amh_skel), nullptr},
      {"op3", std::addressof(POA_OldDif2::AMH_ex1::op3_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op3)},
      {"op0", std::addressof(POA_OldDif2::AMH_ex1::op0_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op0)},
      {"op4", std::addressof(POA_OldDif2::AMH_ex1::op4_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op4)},
      {"_interface", std::addressof(TAO_AMH_Skeletons::_interface_amh_skel), nullptr},
      {"op1", std::addressof(POA_OldDif2::AMH_ex1::op1_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op1)},
      {"op5", std::addressof(POA_OldDif2::AMH_ex1::op5_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op5)},
      {"_repository_id", std::addressof(TAO_AMH_Skeletons::_repository_id_amh_skel), nullptr},
      {"_component", std::addressof(TAO_AMH_Skeletons::_component_amh_skel), nullptr},
      {"op2", std::addressof(POA_OldDif2::AMH_ex1::op2_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op2)},
      {"_non_existent", std::addressof(TAO_AMH_Skeletons::_non_existent_amh_skel), nullptr},
      {"_get_long_attribute", std::addressof(POA_OldDif2::ex3::_get_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_long_attribute)},
      {"_get_float_attribute", std::addressof(POA_OldDif2::ex3::_get_float_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_float_attribute)},
      {"_set_short_attribute", std::addressof(POA_OldDif2::ex3::_set_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_set_short_attribute)},
      {"_get_short_attribute", std::addressof(POA_OldDif2::ex3::_get_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_short_attribute)},
      {"_get_double_attribute", std::addressof(POA_OldDif2::ex3::_get_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_double_attribute)},
      {"_set_double_attribute", std::addressof(POA_OldDif2::ex3::_set_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_set_double_attribute)},
      {"_get_unsigned_long_attribute", std::addressof(POA_OldDif2::ex3::_get_unsigned_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_unsigned_long_attribute)},
    };

  static constexpr signed char lookup[] =
    {
       -1, -19,  -2,   3,  -1,   4,   5,   6,   7,  -1,   8,  -1,   9,  10, 
       11,  12,  -1,  13,  14,  15,  30, -48, -16,  -3,  -1,  -1,  -1,  -1, 
       21, 
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          int slot = lookup[key];

          if (slot >= 0 && slot < WORDLIST_SIZE)
            {
              const char *s = wordlist[slot].opname;

              if (*str == *s && !ACE_OS::strncmp (str + 1, s + 1, len - 1))
                return &wordlist[slot];
            }
          else if (slot < 0 && slot >= -MAX_HASH_VALUE)
            return 0;
          else
            {
              unsigned int offset = key + slot + (slot > 0 ? -MAX_HASH_VALUE : MAX_HASH_VALUE);
              const TAO_operation_db_entry *base = &wordlist[-lookup[offset]];
              const TAO_operation_db_entry *ptr = base + -lookup[offset + 1];

              while (--ptr >= base)
                if (*str == *ptr->opname && !ACE_OS::strncmp (str + 1, ptr->opname + 1, len - 1))
                  return ptr;
            }
        }
    }
  return 0;
}

static TAO_OldDif2_AMH_ex3_Perfect_Hash_OpTable tao_OldDif2_AMH_ex3_optable;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::AMH_ex3::AMH_ex3 ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_AMH_ex3_optable);
}

POA_OldDif2::AMH_ex3::AMH_ex3 (const AMH_ex3& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_OldDif2::AMH_ex1 (rhs)
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex3::_get_float_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex3 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex3 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex3ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex3ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex3ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->float_attribute (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex3::_get_double_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex3 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex3 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex3ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex3ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex3ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->double_attribute (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex3::_set_double_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex3 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex3 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Double double_attribute;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> double_attribute)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex3ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex3ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex3ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->double_attribute (
      safe_rd_.get (),
      double_attribute
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex3::_get_long_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex3 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex3 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex3ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex3ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex3ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->long_attribute (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex3::_get_short_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex3 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex3 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex3ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex3ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex3ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->short_attribute (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex3::_set_short_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex3 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex3 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Short short_attribute;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> short_attribute)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex3ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex3ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex3ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->short_attribute (
      safe_rd_.get (),
      short_attribute
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex3::_get_unsigned_long_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex3 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex3 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex3ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex3ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex3ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->unsigned_long_attribute (
      safe_rd_.get ()
    );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::AMH_ex3::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:OldDif2/ex1:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/ex3:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::AMH_ex3::_interface_repository_id () const
{
  return "IDL:OldDif2/ex3:1.0";
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_ss.cpp:106

void
POA_OldDif2::AMH_ex3::_dispatch (
    TAO_ServerRequest &req,
    TAO::Portable_Server::Servant_Upcall *context)
{
  this->asynchronous_upcall_dispatch (req,context,this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_ss.cpp:64

OldDif2::ex3*
POA_OldDif2::AMH_ex3::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::ex3>::unchecked_narrow (obj.in ());
      
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_ex3_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_ex3_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_ex3_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29,  4,  9,
     14,  3,  5, 10,  0, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
     29, 29, 29, 29, 29,  0, 29,  0, 29, 29,
      0,  0, 29, 29, 29, 29, 29, 29, 29, 29,
     29,  0, 29, 29, 29, 29,  5, 29, 29, 29,
     29, 29, 29, 29, 29, 29, 29, 29,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_ex3_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 19,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 28,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 28,
      HASH_VALUE_RANGE = 26,
      DUPLICATES = 4,
      WORDLIST_SIZE = 22
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op6", std::addressof(POA_OldDif2::ex1::op6_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op6)},
      {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
      {"op3", std::addressof(POA_OldDif2::ex1::op3_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op3)},
      {"op0", std::addressof(POA_OldDif2::ex1::op0_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op0)},
      {"op4", std::addressof(POA_OldDif2::ex1::op4_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op4)},
      {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
      {"op1", std::addressof(POA_OldDif2::ex1::op1_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op1)},
      {"op5", std::addressof(POA_OldDif2::ex1::op5_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op5)},
      {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr},
      {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
      {"op2", std::addressof(POA_OldDif2::ex1::op2_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op2)},
      {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
      {"_get_long_attribute", std::addressof(POA_OldDif2::ex3::_get_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_long_attribute)},
      {"_get_float_attribute", std::addressof(POA_OldDif2::ex3::_get_float_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_float_attribute)},
      {"_set_short_attribute", std::addressof(POA_OldDif2::ex3::_set_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_set_short_attribute)},
      {"_get_short_attribute", std::addressof(POA_OldDif2::ex3::_get_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_short_attribute)},
      {"_get_double_attribute", std::addressof(POA_OldDif2::ex3::_get_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_double_attribute)},
      {"_set_double_attribute", std::addressof(POA_OldDif2::ex3::_set_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_set_double_attribute)},
      {"_get_unsigned_long_attribute", std::addressof(POA_OldDif2::ex3::_get_unsigned_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_unsigned_long_attribute)},
    };

  static constexpr signed char lookup[] =
    {
       -1, -19,  -2,   3,  -1,   4,   5,   6,   7,  -1,   8,  -1,   9,  10, 
       11,  12,  -1,  13,  14,  15,  30, -48, -16,  -3,  -1,  -1,  -1,  -1, 
       21, 
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          int slot = lookup[key];

          if (slot >= 0 && slot < WORDLIST_SIZE)
            {
              const char *s = wordlist[slot].opname;

              if (*str == *s && !ACE_OS::strncmp (str + 1, s + 1, len - 1))
                return &wordlist[slot];
            }
          else if (slot < 0 && slot >= -MAX_HASH_VALUE)
            return 0;
          else
            {
              unsigned int offset = key + slot + (slot > 0 ? -MAX_HASH_VALUE : MAX_HASH_VALUE);
              const TAO_operation_db_entry *base = &wordlist[-lookup[offset]];
              const TAO_operation_db_entry *ptr = base + -lookup[offset + 1];

              while (--ptr >= base)
                if (*str == *ptr->opname && !ACE_OS::strncmp (str + 1, ptr->opname + 1, len - 1))
                  return ptr;
            }
        }
    }
  return 0;
}

static TAO_OldDif2_ex3_Perfect_Hash_OpTable tao_OldDif2_ex3_optable;

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::~_TAO_ex3_Direct_Proxy_Impl ()
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_float_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex3_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex3_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::Float>::ret_val *) args[0])->arg () =
    _tao_ptr->float_attribute (
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_double_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex3_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex3_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::Double>::ret_val *) args[0])->arg () =
    _tao_ptr->double_attribute (
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_set_double_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex3_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex3_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->double_attribute (
        ((TAO::Arg_Traits< ::CORBA::Double>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_long_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex3_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex3_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::Long>::ret_val *) args[0])->arg () =
    _tao_ptr->long_attribute (
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_short_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex3_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex3_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::Short>::ret_val *) args[0])->arg () =
    _tao_ptr->short_attribute (
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_set_short_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex3_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex3_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->short_attribute (
        ((TAO::Arg_Traits< ::CORBA::Short>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_unsigned_long_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex3_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex3_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::ULong>::ret_val *) args[0])->arg () =
    _tao_ptr->unsigned_long_attribute (
        );
}



//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::ex3::ex3 ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_ex3_optable);
}

POA_OldDif2::ex3::ex3 (const ex3& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_OldDif2::ex1 (rhs)
{
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_float_attribute_ex3
    : public TAO::Upcall_Command
  {
  public:
    inline _get_float_attribute_ex3 (
      POA_OldDif2::ex3 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Float>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::Float> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->float_attribute ();
    }
  
  private:
    POA_OldDif2::ex3 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex3::_get_float_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::Float>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex3 * const impl =
    dynamic_cast<POA_OldDif2::ex3 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_float_attribute_ex3 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_double_attribute_ex3
    : public TAO::Upcall_Command
  {
  public:
    inline _get_double_attribute_ex3 (
      POA_OldDif2::ex3 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Double>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::Double> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->double_attribute ();
    }
  
  private:
    POA_OldDif2::ex3 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex3::_get_double_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::Double>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex3 * const impl =
    dynamic_cast<POA_OldDif2::ex3 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_double_attribute_ex3 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _set_double_attribute_ex3
    : public TAO::Upcall_Command
  {
  public:
    inline _set_double_attribute_ex3 (
      POA_OldDif2::ex3 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Double>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Double> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->double_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::ex3 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex3::_set_double_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Double>::in_arg_val _tao_double_attribute;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_double_attribute)
    };
  
  POA_OldDif2::ex3 * const impl =
    dynamic_cast<POA_OldDif2::ex3 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_double_attribute_ex3 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_long_attribute_ex3
    : public TAO::Upcall_Command
  {
  public:
    inline _get_long_attribute_ex3 (
      POA_OldDif2::ex3 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Long>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->long_attribute ();
    }
  
  private:
    POA_OldDif2::ex3 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex3::_get_long_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::Long>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex3 * const impl =
    dynamic_cast<POA_OldDif2::ex3 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_long_attribute_ex3 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_short_attribute_ex3
    : public TAO::Upcall_Command
  {
  public:
    inline _get_short_attribute_ex3 (
      POA_OldDif2::ex3 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Short>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::Short> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->short_attribute ();
    }
  
  private:
    POA_OldDif2::ex3 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex3::_get_short_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::Short>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex3 * const impl =
    dynamic_cast<POA_OldDif2::ex3 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_short_attribute_ex3 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _set_short_attribute_ex3
    : public TAO::Upcall_Command
  {
  public:
    inline _set_short_attribute_ex3 (
      POA_OldDif2::ex3 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Short>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Short> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->short_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::ex3 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex3::_set_short_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Short>::in_arg_val _tao_short_attribute;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_short_attribute)
    };
  
  POA_OldDif2::ex3 * const impl =
    dynamic_cast<POA_OldDif2::ex3 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_short_attribute_ex3 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_unsigned_long_attribute_ex3
    : public TAO::Upcall_Command
  {
  public:
    inline _get_unsigned_long_attribute_ex3 (
      POA_OldDif2::ex3 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::ULong>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::ULong> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->unsigned_long_attribute ();
    }
  
  private:
    POA_OldDif2::ex3 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex3::_get_unsigned_long_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::ULong>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex3 * const impl =
    dynamic_cast<POA_OldDif2::ex3 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_unsigned_long_attribute_ex3 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::ex3::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:OldDif2/ex1:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/ex3:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::ex3::_interface_repository_id () const
{
  return "IDL:OldDif2/ex3:1.0";
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:394



void POA_OldDif2::ex3::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:354



OldDif2::ex3 *
POA_OldDif2::ex3::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean const _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::ex3>::unchecked_narrow (obj.in ());
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_ss.cpp:67


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::get_float_attribute (
  ::CORBA::Float return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::get_float_attribute_excep (
  ::OldDif2::AMH_ex3ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_float_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::get_double_attribute (
  ::CORBA::Double return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::get_double_attribute_excep (
  ::OldDif2::AMH_ex3ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_double_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::set_double_attribute ()
{
  this->_tao_rh_init_reply ();

  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::set_double_attribute_excep (
  ::OldDif2::AMH_ex3ExceptionHolder * holder)
{
  try
  {
    holder->raise_set_double_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::get_long_attribute (
  ::CORBA::Long return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::get_long_attribute_excep (
  ::OldDif2::AMH_ex3ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_long_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::get_short_attribute (
  ::CORBA::Short return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::get_short_attribute_excep (
  ::OldDif2::AMH_ex3ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_short_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::set_short_attribute ()
{
  this->_tao_rh_init_reply ();

  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::set_short_attribute_excep (
  ::OldDif2::AMH_ex3ExceptionHolder * holder)
{
  try
  {
    holder->raise_set_short_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::get_unsigned_long_attribute (
  ::CORBA::ULong return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex3ResponseHandler::get_unsigned_long_attribute_excep (
  ::OldDif2::AMH_ex3ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_unsigned_long_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_AMI_ex3Handler_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_AMI_ex3Handler_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_AMI_ex3Handler_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
     44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
     44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
     44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
     44, 44, 44, 44, 44, 44, 44, 44,  5, 10,
     20, 25,  3,  8,  0, 44, 44, 44, 44, 44,
     44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
     44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
     44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
     44, 44, 44, 44, 44,  0, 44,  0, 44, 44,
      0,  0, 44,  0, 44, 44, 44, 44, 44, 44,
     44,  0,  0, 44, 44, 10, 30, 44, 44, 44,
     44, 44, 44, 44, 44, 44, 44, 44,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_AMI_ex3Handler_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 33,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 33,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 43,
      HASH_VALUE_RANGE = 41,
      DUPLICATES = 9,
      WORDLIST_SIZE = 36
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op6", std::addressof(POA_OldDif2::AMI_ex1Handler::op6_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op6)},
      {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
      {"op4", std::addressof(POA_OldDif2::AMI_ex1Handler::op4_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op4)},
      {"op0", std::addressof(POA_OldDif2::AMI_ex1Handler::op0_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op0)},
      {"op0_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op0_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op0_excep)},
      {"op6_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op6_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op6_excep)},
      {"op5_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op5_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op5_excep)},
      {"op4_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op4_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op4_excep)},
      {"op3_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op3_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op3_excep)},
      {"op2_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op2_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op2_excep)},
      {"op1_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op1_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op1_excep)},
      {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
      {"op5", std::addressof(POA_OldDif2::AMI_ex1Handler::op5_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op5)},
      {"op1", std::addressof(POA_OldDif2::AMI_ex1Handler::op1_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op1)},
      {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr},
      {"get_long_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::get_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_long_attribute)},
      {"get_float_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::get_float_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_float_attribute)},
      {"get_short_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::get_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_short_attribute)},
      {"get_double_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::get_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_double_attribute)},
      {"op2", std::addressof(POA_OldDif2::AMI_ex1Handler::op2_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op2)},
      {"get_long_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::get_long_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_long_attribute_excep)},
      {"get_float_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::get_float_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_float_attribute_excep)},
      {"get_short_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::get_short_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_short_attribute_excep)},
      {"get_double_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::get_double_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_double_attribute_excep)},
      {"get_unsigned_long_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::get_unsigned_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_unsigned_long_attribute)},
      {"op3", std::addressof(POA_OldDif2::AMI_ex1Handler::op3_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op3)},
      {"set_short_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::set_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_short_attribute)},
      {"set_double_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::set_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_double_attribute)},
      {"get_unsigned_long_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::get_unsigned_long_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_unsigned_long_attribute_excep)},
      {"set_short_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::set_short_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_short_attribute_excep)},
      {"set_double_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::set_double_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_double_attribute_excep)},
      {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
      {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
    };

  static constexpr signed char lookup[] =
    {
       -1,  -7,  -7,   3,  -1,   4,   5,  -1,   6, -51,  14,  15,  -1,  16, 
       17,  -1, -19,  -2,  18, -46,  21, -24,  -2,  22,  23, -47,  26,  27, 
       28,  29,  30,  -1,  -1,  31,  -1,  32,  33,  -1,  -1,  -1,  34,  -1, 
       -1,  35, 
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          int slot = lookup[key];

          if (slot >= 0 && slot < WORDLIST_SIZE)
            {
              const char *s = wordlist[slot].opname;

              if (*str == *s && !ACE_OS::strncmp (str + 1, s + 1, len - 1))
                return &wordlist[slot];
            }
          else if (slot < 0 && slot >= -MAX_HASH_VALUE)
            return 0;
          else
            {
              unsigned int offset = key + slot + (slot > 0 ? -MAX_HASH_VALUE : MAX_HASH_VALUE);
              const TAO_operation_db_entry *base = &wordlist[-lookup[offset]];
              const TAO_operation_db_entry *ptr = base + -lookup[offset + 1];

              while (--ptr >= base)
                if (*str == *ptr->opname && !ACE_OS::strncmp (str + 1, ptr->opname + 1, len - 1))
                  return ptr;
            }
        }
    }
  return 0;
}

static TAO_OldDif2_AMI_ex3Handler_Perfect_Hash_OpTable tao_OldDif2_AMI_ex3Handler_optable;

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::~_TAO_AMI_ex3Handler_Direct_Proxy_Impl ()
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_float_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_float_attribute (
        ((TAO::Arg_Traits< ::CORBA::Float>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_float_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_float_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_double_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_double_attribute (
        ((TAO::Arg_Traits< ::CORBA::Double>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_double_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_double_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_double_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->set_double_attribute (
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_double_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->set_double_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_long_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_long_attribute (
        ((TAO::Arg_Traits< ::CORBA::Long>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_long_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_long_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_short_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_short_attribute (
        ((TAO::Arg_Traits< ::CORBA::Short>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_short_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_short_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_short_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->set_short_attribute (
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_short_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->set_short_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_unsigned_long_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_unsigned_long_attribute (
        ((TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_unsigned_long_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex3Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex3Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_unsigned_long_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}



//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::AMI_ex3Handler::AMI_ex3Handler ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_AMI_ex3Handler_optable);
}

POA_OldDif2::AMI_ex3Handler::AMI_ex3Handler (const AMI_ex3Handler& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    ::POA_Messaging::ReplyHandler (rhs),
    POA_OldDif2::AMI_ex1Handler (rhs)
{
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_float_attribute_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_float_attribute_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Float>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Float> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_float_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::get_float_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Float>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_float_attribute_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_float_attribute_excep_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_float_attribute_excep_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_float_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::get_float_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_float_attribute_excep_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_double_attribute_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_double_attribute_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Double>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Double> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_double_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::get_double_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Double>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_double_attribute_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_double_attribute_excep_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_double_attribute_excep_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_double_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::get_double_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_double_attribute_excep_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class set_double_attribute_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline set_double_attribute_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant)
      : servant_ (servant)
    {
    }

    void execute () override
    {
      this->servant_->set_double_attribute ();
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::set_double_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  set_double_attribute_AMI_ex3Handler command (
    impl);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class set_double_attribute_excep_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline set_double_attribute_excep_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->set_double_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::set_double_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  set_double_attribute_excep_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_long_attribute_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_long_attribute_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Long>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Long> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_long_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::get_long_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Long>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_long_attribute_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_long_attribute_excep_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_long_attribute_excep_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_long_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::get_long_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_long_attribute_excep_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_short_attribute_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_short_attribute_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::Short>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::Short> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_short_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::get_short_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::Short>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_short_attribute_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_short_attribute_excep_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_short_attribute_excep_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_short_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::get_short_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_short_attribute_excep_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class set_short_attribute_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline set_short_attribute_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant)
      : servant_ (servant)
    {
    }

    void execute () override
    {
      this->servant_->set_short_attribute ();
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::set_short_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  set_short_attribute_AMI_ex3Handler command (
    impl);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class set_short_attribute_excep_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline set_short_attribute_excep_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->set_short_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::set_short_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  set_short_attribute_excep_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_unsigned_long_attribute_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_unsigned_long_attribute_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::ULong>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::ULong> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_unsigned_long_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::get_unsigned_long_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::ULong>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_unsigned_long_attribute_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_unsigned_long_attribute_excep_AMI_ex3Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_unsigned_long_attribute_excep_AMI_ex3Handler (
      POA_OldDif2::AMI_ex3Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_unsigned_long_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex3Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex3Handler::get_unsigned_long_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex3Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex3Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_unsigned_long_attribute_excep_AMI_ex3Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::AMI_ex3Handler::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/AMI_ex1Handler:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/AMI_ex3Handler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::AMI_ex3Handler::_interface_repository_id () const
{
  return "IDL:OldDif2/AMI_ex3Handler:1.0";
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:394



void POA_OldDif2::AMI_ex3Handler::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:354



OldDif2::AMI_ex3Handler *
POA_OldDif2::AMI_ex3Handler::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean const _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::AMI_ex3Handler>::unchecked_narrow (obj.in ());
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_AMH_ex4_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_AMH_ex4_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_AMH_ex4_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35,  5, 30,
      0,  8, 13, 23, 28, 10, 20,  3, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35,  0, 35,  0, 35, 35,
      0,  0, 35, 35, 35, 35, 35, 35, 35, 35,
     35,  0, 35, 35, 35, 35,  5, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_AMH_ex4_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 35,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 29,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 34,
      HASH_VALUE_RANGE = 32,
      DUPLICATES = 11,
      WORDLIST_SIZE = 38
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op2", std::addressof(POA_OldDif2::AMH_ex1::op2_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op2)},
      {"op12", std::addressof(POA_OldDif2::AMH_ex2::op12_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op12)},
      {"_is_a", std::addressof(TAO_AMH_Skeletons::_is_a_amh_skel), nullptr},
      {"op9", std::addressof(POA_OldDif2::AMH_ex2::op9_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op9)},
      {"op0", std::addressof(POA_OldDif2::AMH_ex1::op0_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op0)},
      {"op10", std::addressof(POA_OldDif2::AMH_ex2::op10_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op10)},
      {"_interface", std::addressof(TAO_AMH_Skeletons::_interface_amh_skel), nullptr},
      {"op3", std::addressof(POA_OldDif2::AMH_ex1::op3_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op3)},
      {"op7", std::addressof(POA_OldDif2::AMH_ex2::op7_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op7)},
      {"_repository_id", std::addressof(TAO_AMH_Skeletons::_repository_id_amh_skel), nullptr},
      {"_component", std::addressof(TAO_AMH_Skeletons::_component_amh_skel), nullptr},
      {"op4", std::addressof(POA_OldDif2::AMH_ex1::op4_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op4)},
      {"_non_existent", std::addressof(TAO_AMH_Skeletons::_non_existent_amh_skel), nullptr},
      {"_get_long_attribute", std::addressof(POA_OldDif2::ex3::_get_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_long_attribute)},
      {"_get_char_attribute", std::addressof(POA_OldDif2::ex4::_get_char_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_char_attribute)},
      {"_get_float_attribute", std::addressof(POA_OldDif2::ex3::_get_float_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_float_attribute)},
      {"_get_octet_attribute", std::addressof(POA_OldDif2::ex4::_get_octet_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_octet_attribute)},
      {"_set_short_attribute", std::addressof(POA_OldDif2::ex3::_set_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_set_short_attribute)},
      {"_get_short_attribute", std::addressof(POA_OldDif2::ex3::_get_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_short_attribute)},
      {"_get_double_attribute", std::addressof(POA_OldDif2::ex3::_get_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_double_attribute)},
      {"_set_string_attribute", std::addressof(POA_OldDif2::ex4::_set_string_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_set_string_attribute)},
      {"_get_string_attribute", std::addressof(POA_OldDif2::ex4::_get_string_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_string_attribute)},
      {"_set_double_attribute", std::addressof(POA_OldDif2::ex3::_set_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_set_double_attribute)},
      {"_get_boolean_attribute", std::addressof(POA_OldDif2::ex4::_get_boolean_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_boolean_attribute)},
      {"_set_boolean_attribute", std::addressof(POA_OldDif2::ex4::_set_boolean_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_set_boolean_attribute)},
      {"op8", std::addressof(POA_OldDif2::AMH_ex2::op8_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op8)},
      {"_get_an_object_attribute", std::addressof(POA_OldDif2::ex4::_get_an_object_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_an_object_attribute)},
      {"op5", std::addressof(POA_OldDif2::AMH_ex1::op5_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op5)},
      {"_get_unsigned_long_attribute", std::addressof(POA_OldDif2::ex3::_get_unsigned_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_unsigned_long_attribute)},
      {"_get_unsigned_short_attribute", std::addressof(POA_OldDif2::ex4::_get_unsigned_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_unsigned_short_attribute)},
      {"_get_limited_string_attribute", std::addressof(POA_OldDif2::ex4::_get_limited_string_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_limited_string_attribute)},
      {"_set_unsigned_short_attribute", std::addressof(POA_OldDif2::ex4::_set_unsigned_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_set_unsigned_short_attribute)},
      {"op6", std::addressof(POA_OldDif2::AMH_ex1::op6_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op6)},
      {"op1", std::addressof(POA_OldDif2::AMH_ex1::op1_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op1)},
      {"op11", std::addressof(POA_OldDif2::AMH_ex2::op11_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op11)},
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
            {
              const TAO_operation_db_entry  *resword; 

              switch (key)
                {
                case   3:
                  resword = &wordlist[3]; break;
                case   4:
                  resword = &wordlist[4]; break;
                case   5:
                  resword = &wordlist[5]; break;
                case   6:
                  resword = &wordlist[6]; break;
                case   8:
                  resword = &wordlist[7]; break;
                case   9:
                  resword = &wordlist[8]; break;
                case  10:
                  resword = &wordlist[9]; break;
                case  11:
                  resword = &wordlist[10]; break;
                case  13:
                  resword = &wordlist[11]; break;
                case  14:
                  resword = &wordlist[12]; break;
                case  15:
                  resword = &wordlist[13]; break;
                case  16:
                  resword = &wordlist[14]; break;
                case  18:
                  resword = &wordlist[15]; break;
                case  19:
                  resword = &wordlist[16];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[17];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  20:
                  resword = &wordlist[18];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[19];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[20];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[21];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  21:
                  resword = &wordlist[22];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[23];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[24];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[25];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  22:
                  resword = &wordlist[26];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[27];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  23:
                  resword = &wordlist[28]; break;
                case  24:
                  resword = &wordlist[29]; break;
                case  26:
                  resword = &wordlist[30]; break;
                case  28:
                  resword = &wordlist[31]; break;
                case  29:
                  resword = &wordlist[32];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[33];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[34];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  31:
                  resword = &wordlist[35]; break;
                case  33:
                  resword = &wordlist[36]; break;
                case  34:
                  resword = &wordlist[37]; break;
                default: return 0;
                }
              if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1))
                return resword;
              return 0;
            }
        }
    }
  return 0;
}

static TAO_OldDif2_AMH_ex4_Perfect_Hash_OpTable tao_OldDif2_AMH_ex4_optable;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::AMH_ex4::AMH_ex4 ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_AMH_ex4_optable);
}

POA_OldDif2::AMH_ex4::AMH_ex4 (const AMH_ex4& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_OldDif2::AMH_ex1 (rhs),
    POA_OldDif2::AMH_ex2 (rhs),
    POA_OldDif2::AMH_ex3 (rhs)
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex4::_get_unsigned_short_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex4 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex4 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex4ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex4ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex4ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->unsigned_short_attribute (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex4::_set_unsigned_short_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex4 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex4 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::UShort unsigned_short_attribute;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> unsigned_short_attribute)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex4ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex4ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex4ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->unsigned_short_attribute (
      safe_rd_.get (),
      unsigned_short_attribute
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex4::_get_char_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex4 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex4 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex4ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex4ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex4ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->char_attribute (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex4::_get_boolean_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex4 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex4 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex4ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex4ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex4ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->boolean_attribute (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex4::_set_boolean_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex4 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex4 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::Boolean boolean_attribute;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> ::ACE_InputCDR::to_boolean (boolean_attribute))
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex4ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex4ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex4ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->boolean_attribute (
      safe_rd_.get (),
      boolean_attribute
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex4::_get_octet_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex4 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex4 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex4ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex4ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex4ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->octet_attribute (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex4::_get_string_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex4 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex4 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex4ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex4ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex4ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->string_attribute (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex4::_set_string_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex4 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex4 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  ::CORBA::String_var string_attribute;
  TAO_InputCDR & _tao_in = *_tao_server_request.incoming ();

  if (!(
      (_tao_in >> string_attribute.out ())
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex4ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex4ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex4ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->string_attribute (
      safe_rd_.get (),
      string_attribute.in ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex4::_get_limited_string_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex4 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex4 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex4ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex4ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex4ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->limited_string_attribute (
      safe_rd_.get ()
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_ss.cpp:303

void
POA_OldDif2::AMH_ex4::_get_an_object_attribute_skel (
    TAO_ServerRequest & _tao_server_request,
    TAO::Portable_Server::Servant_Upcall * /* context */,
    TAO_ServantBase * _tao_servant)
{
  POA_OldDif2::AMH_ex4 * const _tao_impl =
    dynamic_cast<POA_OldDif2::AMH_ex4 *> (_tao_servant);
  if (!_tao_impl)
    throw ::CORBA::INTERNAL ();
  
  TAO_ORB_Core *orb_core =
    _tao_server_request.orb ()->orb_core ();
  
  TAO_AMH_BUFFER_ALLOCATOR* amh_allocator =
    orb_core->lane_resources ().amh_response_handler_allocator ();
  
  TAO::TAO_Buffer_Allocator<
      POA_OldDif2::TAO_AMH_ex4ResponseHandler,
      TAO_AMH_BUFFER_ALLOCATOR
    > buffer_allocator (amh_allocator);
  
  POA_OldDif2::TAO_AMH_ex4ResponseHandler_ptr _tao_rh_ptr = 
    buffer_allocator.allocate();
  
  if (!_tao_rh_ptr) 
    throw ::CORBA::NO_MEMORY ();
  
  _tao_rh_ptr->init (_tao_server_request, amh_allocator);
  
  ACE_Utils::Auto_Functor <POA_OldDif2::TAO_AMH_ex4ResponseHandler, TAO::ARH_Refcount_Functor> safe_rd_(_tao_rh_ptr);
  
  _tao_impl->an_object_attribute (
      safe_rd_.get ()
    );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::AMH_ex4::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:OldDif2/ex1:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/ex2:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/ex3:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/ex4:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::AMH_ex4::_interface_repository_id () const
{
  return "IDL:OldDif2/ex4:1.0";
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_ss.cpp:106

void
POA_OldDif2::AMH_ex4::_dispatch (
    TAO_ServerRequest &req,
    TAO::Portable_Server::Servant_Upcall *context)
{
  this->asynchronous_upcall_dispatch (req,context,this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_ss.cpp:64

OldDif2::ex4*
POA_OldDif2::AMH_ex4::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::ex4>::unchecked_narrow (obj.in ());
      
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_ex4_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_ex4_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_ex4_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35,  5, 30,
      0,  8, 13, 23, 28, 10, 20,  3, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
     35, 35, 35, 35, 35,  0, 35,  0, 35, 35,
      0,  0, 35, 35, 35, 35, 35, 35, 35, 35,
     35,  0, 35, 35, 35, 35,  5, 35, 35, 35,
     35, 35, 35, 35, 35, 35, 35, 35,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_ex4_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 35,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 29,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 34,
      HASH_VALUE_RANGE = 32,
      DUPLICATES = 11,
      WORDLIST_SIZE = 38
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op2", std::addressof(POA_OldDif2::ex1::op2_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op2)},
      {"op12", std::addressof(POA_OldDif2::ex2::op12_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op12)},
      {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
      {"op9", std::addressof(POA_OldDif2::ex2::op9_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op9)},
      {"op0", std::addressof(POA_OldDif2::ex1::op0_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op0)},
      {"op10", std::addressof(POA_OldDif2::ex2::op10_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op10)},
      {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
      {"op3", std::addressof(POA_OldDif2::ex1::op3_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op3)},
      {"op7", std::addressof(POA_OldDif2::ex2::op7_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op7)},
      {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr},
      {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
      {"op4", std::addressof(POA_OldDif2::ex1::op4_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op4)},
      {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
      {"_get_long_attribute", std::addressof(POA_OldDif2::ex3::_get_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_long_attribute)},
      {"_get_char_attribute", std::addressof(POA_OldDif2::ex4::_get_char_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_char_attribute)},
      {"_get_float_attribute", std::addressof(POA_OldDif2::ex3::_get_float_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_float_attribute)},
      {"_get_octet_attribute", std::addressof(POA_OldDif2::ex4::_get_octet_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_octet_attribute)},
      {"_set_short_attribute", std::addressof(POA_OldDif2::ex3::_set_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_set_short_attribute)},
      {"_get_short_attribute", std::addressof(POA_OldDif2::ex3::_get_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_short_attribute)},
      {"_get_double_attribute", std::addressof(POA_OldDif2::ex3::_get_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_double_attribute)},
      {"_set_string_attribute", std::addressof(POA_OldDif2::ex4::_set_string_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_set_string_attribute)},
      {"_get_string_attribute", std::addressof(POA_OldDif2::ex4::_get_string_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_string_attribute)},
      {"_set_double_attribute", std::addressof(POA_OldDif2::ex3::_set_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_set_double_attribute)},
      {"_get_boolean_attribute", std::addressof(POA_OldDif2::ex4::_get_boolean_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_boolean_attribute)},
      {"_set_boolean_attribute", std::addressof(POA_OldDif2::ex4::_set_boolean_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_set_boolean_attribute)},
      {"op8", std::addressof(POA_OldDif2::ex2::op8_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op8)},
      {"_get_an_object_attribute", std::addressof(POA_OldDif2::ex4::_get_an_object_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_an_object_attribute)},
      {"op5", std::addressof(POA_OldDif2::ex1::op5_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op5)},
      {"_get_unsigned_long_attribute", std::addressof(POA_OldDif2::ex3::_get_unsigned_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex3_Direct_Proxy_Impl::_get_unsigned_long_attribute)},
      {"_get_unsigned_short_attribute", std::addressof(POA_OldDif2::ex4::_get_unsigned_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_unsigned_short_attribute)},
      {"_get_limited_string_attribute", std::addressof(POA_OldDif2::ex4::_get_limited_string_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_limited_string_attribute)},
      {"_set_unsigned_short_attribute", std::addressof(POA_OldDif2::ex4::_set_unsigned_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_set_unsigned_short_attribute)},
      {"op6", std::addressof(POA_OldDif2::ex1::op6_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op6)},
      {"op1", std::addressof(POA_OldDif2::ex1::op1_skel), std::addressof(POA_OldDif2::_TAO_ex1_Direct_Proxy_Impl::op1)},
      {"op11", std::addressof(POA_OldDif2::ex2::op11_skel), std::addressof(POA_OldDif2::_TAO_ex2_Direct_Proxy_Impl::op11)},
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
            {
              const TAO_operation_db_entry  *resword; 

              switch (key)
                {
                case   3:
                  resword = &wordlist[3]; break;
                case   4:
                  resword = &wordlist[4]; break;
                case   5:
                  resword = &wordlist[5]; break;
                case   6:
                  resword = &wordlist[6]; break;
                case   8:
                  resword = &wordlist[7]; break;
                case   9:
                  resword = &wordlist[8]; break;
                case  10:
                  resword = &wordlist[9]; break;
                case  11:
                  resword = &wordlist[10]; break;
                case  13:
                  resword = &wordlist[11]; break;
                case  14:
                  resword = &wordlist[12]; break;
                case  15:
                  resword = &wordlist[13]; break;
                case  16:
                  resword = &wordlist[14]; break;
                case  18:
                  resword = &wordlist[15]; break;
                case  19:
                  resword = &wordlist[16];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[17];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  20:
                  resword = &wordlist[18];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[19];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[20];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[21];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  21:
                  resword = &wordlist[22];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[23];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[24];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[25];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  22:
                  resword = &wordlist[26];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[27];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  23:
                  resword = &wordlist[28]; break;
                case  24:
                  resword = &wordlist[29]; break;
                case  26:
                  resword = &wordlist[30]; break;
                case  28:
                  resword = &wordlist[31]; break;
                case  29:
                  resword = &wordlist[32];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[33];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[34];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  31:
                  resword = &wordlist[35]; break;
                case  33:
                  resword = &wordlist[36]; break;
                case  34:
                  resword = &wordlist[37]; break;
                default: return 0;
                }
              if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1))
                return resword;
              return 0;
            }
        }
    }
  return 0;
}

static TAO_OldDif2_ex4_Perfect_Hash_OpTable tao_OldDif2_ex4_optable;

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::~_TAO_ex4_Direct_Proxy_Impl ()
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_unsigned_short_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex4_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex4_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::CORBA::UShort>::ret_val *) args[0])->arg () =
    _tao_ptr->unsigned_short_attribute (
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_set_unsigned_short_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex4_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex4_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->unsigned_short_attribute (
        ((TAO::Arg_Traits< ::CORBA::UShort>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_char_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex4_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex4_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::ACE_InputCDR::to_char>::ret_val *) args[0])->arg () =
    _tao_ptr->char_attribute (
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_boolean_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex4_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex4_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val *) args[0])->arg () =
    _tao_ptr->boolean_attribute (
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_set_boolean_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex4_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex4_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->boolean_attribute (
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_octet_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex4_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex4_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::ACE_InputCDR::to_octet>::ret_val *) args[0])->arg () =
    _tao_ptr->octet_attribute (
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_string_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex4_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex4_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< char *>::ret_val *) args[0])->arg () =
    _tao_ptr->string_attribute (
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_set_string_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex4_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex4_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->string_attribute (
        ((TAO::Arg_Traits< char *>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_limited_string_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex4_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex4_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::TAO::OldDif2_ex4_limited_string_attribute>::ret_val *) args[0])->arg () =
    _tao_ptr->limited_string_attribute (
        );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_ex4_Direct_Proxy_Impl::_get_an_object_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::ex4_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::ex4_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  ((TAO::Arg_Traits< ::OldDif2::ex4>::ret_val *) args[0])->arg () =
    _tao_ptr->an_object_attribute (
        );
}



//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::ex4::ex4 ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_ex4_optable);
}

POA_OldDif2::ex4::ex4 (const ex4& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    POA_OldDif2::ex1 (rhs),
    POA_OldDif2::ex2 (rhs),
    POA_OldDif2::ex3 (rhs)
{
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_unsigned_short_attribute_ex4
    : public TAO::Upcall_Command
  {
  public:
    inline _get_unsigned_short_attribute_ex4 (
      POA_OldDif2::ex4 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::UShort>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::CORBA::UShort> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->unsigned_short_attribute ();
    }
  
  private:
    POA_OldDif2::ex4 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex4::_get_unsigned_short_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::CORBA::UShort>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex4 * const impl =
    dynamic_cast<POA_OldDif2::ex4 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_unsigned_short_attribute_ex4 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _set_unsigned_short_attribute_ex4
    : public TAO::Upcall_Command
  {
  public:
    inline _set_unsigned_short_attribute_ex4 (
      POA_OldDif2::ex4 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::UShort>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::UShort> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->unsigned_short_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::ex4 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex4::_set_unsigned_short_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::UShort>::in_arg_val _tao_unsigned_short_attribute;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_unsigned_short_attribute)
    };
  
  POA_OldDif2::ex4 * const impl =
    dynamic_cast<POA_OldDif2::ex4 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_unsigned_short_attribute_ex4 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_char_attribute_ex4
    : public TAO::Upcall_Command
  {
  public:
    inline _get_char_attribute_ex4 (
      POA_OldDif2::ex4 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_char>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::ACE_InputCDR::to_char> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->char_attribute ();
    }
  
  private:
    POA_OldDif2::ex4 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex4::_get_char_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::ACE_InputCDR::to_char>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex4 * const impl =
    dynamic_cast<POA_OldDif2::ex4 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_char_attribute_ex4 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_boolean_attribute_ex4
    : public TAO::Upcall_Command
  {
  public:
    inline _get_boolean_attribute_ex4 (
      POA_OldDif2::ex4 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::ACE_InputCDR::to_boolean> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->boolean_attribute ();
    }
  
  private:
    POA_OldDif2::ex4 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex4::_get_boolean_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex4 * const impl =
    dynamic_cast<POA_OldDif2::ex4 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_boolean_attribute_ex4 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _set_boolean_attribute_ex4
    : public TAO::Upcall_Command
  {
  public:
    inline _set_boolean_attribute_ex4 (
      POA_OldDif2::ex4 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->boolean_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::ex4 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex4::_set_boolean_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_boolean_attribute;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_boolean_attribute)
    };
  
  POA_OldDif2::ex4 * const impl =
    dynamic_cast<POA_OldDif2::ex4 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_boolean_attribute_ex4 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_octet_attribute_ex4
    : public TAO::Upcall_Command
  {
  public:
    inline _get_octet_attribute_ex4 (
      POA_OldDif2::ex4 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::ACE_InputCDR::to_octet> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->octet_attribute ();
    }
  
  private:
    POA_OldDif2::ex4 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex4::_get_octet_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex4 * const impl =
    dynamic_cast<POA_OldDif2::ex4 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_octet_attribute_ex4 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_string_attribute_ex4
    : public TAO::Upcall_Command
  {
  public:
    inline _get_string_attribute_ex4 (
      POA_OldDif2::ex4 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< char *>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< char *> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->string_attribute ();
    }
  
  private:
    POA_OldDif2::ex4 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex4::_get_string_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< char *>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex4 * const impl =
    dynamic_cast<POA_OldDif2::ex4 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_string_attribute_ex4 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _set_string_attribute_ex4
    : public TAO::Upcall_Command
  {
  public:
    inline _set_string_attribute_ex4 (
      POA_OldDif2::ex4 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< char *>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< char *> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->string_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::ex4 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex4::_set_string_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_string_attribute;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_string_attribute)
    };
  
  POA_OldDif2::ex4 * const impl =
    dynamic_cast<POA_OldDif2::ex4 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _set_string_attribute_ex4 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_limited_string_attribute_ex4
    : public TAO::Upcall_Command
  {
  public:
    inline _get_limited_string_attribute_ex4 (
      POA_OldDif2::ex4 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::TAO::OldDif2_ex4_limited_string_attribute>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::TAO::OldDif2_ex4_limited_string_attribute> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->limited_string_attribute ();
    }
  
  private:
    POA_OldDif2::ex4 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex4::_get_limited_string_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::TAO::OldDif2_ex4_limited_string_attribute>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex4 * const impl =
    dynamic_cast<POA_OldDif2::ex4 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_limited_string_attribute_ex4 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class _get_an_object_attribute_ex4
    : public TAO::Upcall_Command
  {
  public:
    inline _get_an_object_attribute_ex4 (
      POA_OldDif2::ex4 * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::OldDif2::ex4>::ret_arg_type retval =
        TAO::Portable_Server::get_ret_arg< ::OldDif2::ex4> (
          this->operation_details_,
          this->args_);
      
      retval =
        this->servant_->an_object_attribute ();
    }
  
  private:
    POA_OldDif2::ex4 * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::ex4::_get_an_object_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< ::OldDif2::ex4>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::ex4 * const impl =
    dynamic_cast<POA_OldDif2::ex4 *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  _get_an_object_attribute_ex4 command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::ex4::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:OldDif2/ex1:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/ex2:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/ex3:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/ex4:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::ex4::_interface_repository_id () const
{
  return "IDL:OldDif2/ex4:1.0";
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:394



void POA_OldDif2::ex4::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:354



OldDif2::ex4 *
POA_OldDif2::ex4::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean const _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::ex4>::unchecked_narrow (obj.in ());
    }
  return {};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_ss.cpp:67


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_unsigned_short_attribute (
  ::CORBA::UShort return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_unsigned_short_attribute_excep (
  ::OldDif2::AMH_ex4ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_unsigned_short_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::set_unsigned_short_attribute ()
{
  this->_tao_rh_init_reply ();

  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::set_unsigned_short_attribute_excep (
  ::OldDif2::AMH_ex4ExceptionHolder * holder)
{
  try
  {
    holder->raise_set_unsigned_short_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_char_attribute (
  ::CORBA::Char return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << ::ACE_OutputCDR::from_char (return_value))
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_char_attribute_excep (
  ::OldDif2::AMH_ex4ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_char_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_boolean_attribute (
  ::CORBA::Boolean return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << ::ACE_OutputCDR::from_boolean (return_value))
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_boolean_attribute_excep (
  ::OldDif2::AMH_ex4ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_boolean_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::set_boolean_attribute ()
{
  this->_tao_rh_init_reply ();

  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::set_boolean_attribute_excep (
  ::OldDif2::AMH_ex4ExceptionHolder * holder)
{
  try
  {
    holder->raise_set_boolean_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_octet_attribute (
  ::CORBA::Octet return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << ::ACE_OutputCDR::from_octet (return_value))
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_octet_attribute_excep (
  ::OldDif2::AMH_ex4ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_octet_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_string_attribute (
  const char * return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_string_attribute_excep (
  ::OldDif2::AMH_ex4ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_string_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::set_string_attribute ()
{
  this->_tao_rh_init_reply ();

  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::set_string_attribute_excep (
  ::OldDif2::AMH_ex4ExceptionHolder * holder)
{
  try
  {
    holder->raise_set_string_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_limited_string_attribute (
  const char * return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_limited_string_attribute_excep (
  ::OldDif2::AMH_ex4ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_limited_string_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_an_object_attribute (
  ::OldDif2::ex4_ptr return_value)
{
  this->_tao_rh_init_reply ();

  if (!(
      (_tao_out << return_value)
    ))
    {
      throw ::CORBA::MARSHAL();
    }
  
  this->_tao_rh_send_reply ();
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:76

void
POA_OldDif2::TAO_AMH_ex4ResponseHandler::get_an_object_attribute_excep (
  ::OldDif2::AMH_ex4ExceptionHolder * holder)
{
  try
  {
    holder->raise_get_an_object_attribute ();
  }
  catch (const ::CORBA::Exception& ex)
  {
    this->_tao_rh_send_exception (ex);
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:1853

class TAO_OldDif2_AMI_ex4Handler_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len) override;

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len) override;
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: ace_gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0 -a -o -t -p -K opname -L C++ -Z TAO_OldDif2_AMI_ex4Handler_Perfect_Hash_OpTable -N lookup */

unsigned int
TAO_OldDif2_AMI_ex4Handler_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static constexpr unsigned char asso_values[] =
    {
     69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
     69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
     69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
     69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
     69, 69, 69, 69, 69, 69, 69, 69, 11, 15,
      0,  5, 20, 25, 50, 60, 51, 56, 69, 69,
     69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
     69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
     69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
     69, 69, 69, 69, 69,  0, 69,  0, 69, 69,
     50, 20, 69,  0, 69, 69, 69, 69, 69, 69,
     69,  0,  0, 69, 69, 10, 55, 69, 69, 69,
     69, 69, 69, 69, 69, 69, 69, 69,
    };
  return len + asso_values[static_cast<int>(str[len - 1])] + asso_values[static_cast<int>(str[0])];
}

const TAO_operation_db_entry *
TAO_OldDif2_AMI_ex4Handler_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 65,
      MIN_WORD_LENGTH = 3,
      MAX_WORD_LENGTH = 34,
      MIN_HASH_VALUE = 3,
      MAX_HASH_VALUE = 68,
      HASH_VALUE_RANGE = 66,
      DUPLICATES = 24,
      WORDLIST_SIZE = 68
    };

  static const TAO_operation_db_entry wordlist[] =
    {
      {"",0,0},{"",0,0},{"",0,0},
      {"op2", std::addressof(POA_OldDif2::AMI_ex1Handler::op2_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op2)},
      {"op12", std::addressof(POA_OldDif2::AMI_ex2Handler::op12_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op12)},
      {"_is_a", std::addressof(TAO_ServantBase::_is_a_thru_poa_skel), nullptr},
      {"op3", std::addressof(POA_OldDif2::AMI_ex1Handler::op3_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op3)},
      {"op0_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op0_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op0_excep)},
      {"op9_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op9_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op9_excep)},
      {"op8_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op8_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op8_excep)},
      {"op7_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op7_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op7_excep)},
      {"op6_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op6_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op6_excep)},
      {"op5_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op5_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op5_excep)},
      {"op4_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op4_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op4_excep)},
      {"op3_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op3_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op3_excep)},
      {"op2_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op2_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op2_excep)},
      {"op1_excep", std::addressof(POA_OldDif2::AMI_ex1Handler::op1_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op1_excep)},
      {"op10_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op10_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op10_excep)},
      {"op12_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op12_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op12_excep)},
      {"op11_excep", std::addressof(POA_OldDif2::AMI_ex2Handler::op11_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op11_excep)},
      {"op0", std::addressof(POA_OldDif2::AMI_ex1Handler::op0_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op0)},
      {"op10", std::addressof(POA_OldDif2::AMI_ex2Handler::op10_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op10)},
      {"op1", std::addressof(POA_OldDif2::AMI_ex1Handler::op1_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op1)},
      {"op11", std::addressof(POA_OldDif2::AMI_ex2Handler::op11_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op11)},
      {"op4", std::addressof(POA_OldDif2::AMI_ex1Handler::op4_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op4)},
      {"get_long_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::get_long_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_long_attribute_excep)},
      {"get_char_attribute_excep", std::addressof(POA_OldDif2::AMI_ex4Handler::get_char_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_char_attribute_excep)},
      {"get_float_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::get_float_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_float_attribute_excep)},
      {"get_octet_attribute_excep", std::addressof(POA_OldDif2::AMI_ex4Handler::get_octet_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_octet_attribute_excep)},
      {"get_short_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::get_short_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_short_attribute_excep)},
      {"get_double_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::get_double_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_double_attribute_excep)},
      {"get_string_attribute_excep", std::addressof(POA_OldDif2::AMI_ex4Handler::get_string_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_string_attribute_excep)},
      {"get_boolean_attribute_excep", std::addressof(POA_OldDif2::AMI_ex4Handler::get_boolean_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_boolean_attribute_excep)},
      {"op5", std::addressof(POA_OldDif2::AMI_ex1Handler::op5_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op5)},
      {"get_an_object_attribute_excep", std::addressof(POA_OldDif2::AMI_ex4Handler::get_an_object_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_an_object_attribute_excep)},
      {"_interface", std::addressof(TAO_ServantBase::_interface_skel), nullptr},
      {"get_unsigned_long_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::get_unsigned_long_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_unsigned_long_attribute_excep)},
      {"get_unsigned_short_attribute_excep", std::addressof(POA_OldDif2::AMI_ex4Handler::get_unsigned_short_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_unsigned_short_attribute_excep)},
      {"get_limited_string_attribute_excep", std::addressof(POA_OldDif2::AMI_ex4Handler::get_limited_string_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_limited_string_attribute_excep)},
      {"set_short_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::set_short_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_short_attribute_excep)},
      {"set_double_attribute_excep", std::addressof(POA_OldDif2::AMI_ex3Handler::set_double_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_double_attribute_excep)},
      {"set_string_attribute_excep", std::addressof(POA_OldDif2::AMI_ex4Handler::set_string_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_string_attribute_excep)},
      {"set_boolean_attribute_excep", std::addressof(POA_OldDif2::AMI_ex4Handler::set_boolean_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_boolean_attribute_excep)},
      {"get_long_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::get_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_long_attribute)},
      {"get_char_attribute", std::addressof(POA_OldDif2::AMI_ex4Handler::get_char_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_char_attribute)},
      {"get_float_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::get_float_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_float_attribute)},
      {"get_octet_attribute", std::addressof(POA_OldDif2::AMI_ex4Handler::get_octet_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_octet_attribute)},
      {"get_short_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::get_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_short_attribute)},
      {"get_double_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::get_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_double_attribute)},
      {"get_string_attribute", std::addressof(POA_OldDif2::AMI_ex4Handler::get_string_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_string_attribute)},
      {"get_boolean_attribute", std::addressof(POA_OldDif2::AMI_ex4Handler::get_boolean_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_boolean_attribute)},
      {"get_an_object_attribute", std::addressof(POA_OldDif2::AMI_ex4Handler::get_an_object_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_an_object_attribute)},
      {"set_unsigned_short_attribute_excep", std::addressof(POA_OldDif2::AMI_ex4Handler::set_unsigned_short_attribute_excep_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_unsigned_short_attribute_excep)},
      {"get_unsigned_long_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::get_unsigned_long_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::get_unsigned_long_attribute)},
      {"get_unsigned_short_attribute", std::addressof(POA_OldDif2::AMI_ex4Handler::get_unsigned_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_unsigned_short_attribute)},
      {"get_limited_string_attribute", std::addressof(POA_OldDif2::AMI_ex4Handler::get_limited_string_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_limited_string_attribute)},
      {"set_short_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::set_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_short_attribute)},
      {"set_double_attribute", std::addressof(POA_OldDif2::AMI_ex3Handler::set_double_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex3Handler_Direct_Proxy_Impl::set_double_attribute)},
      {"set_string_attribute", std::addressof(POA_OldDif2::AMI_ex4Handler::set_string_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_string_attribute)},
      {"set_boolean_attribute", std::addressof(POA_OldDif2::AMI_ex4Handler::set_boolean_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_boolean_attribute)},
      {"op6", std::addressof(POA_OldDif2::AMI_ex1Handler::op6_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex1Handler_Direct_Proxy_Impl::op6)},
      {"op8", std::addressof(POA_OldDif2::AMI_ex2Handler::op8_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op8)},
      {"set_unsigned_short_attribute", std::addressof(POA_OldDif2::AMI_ex4Handler::set_unsigned_short_attribute_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_unsigned_short_attribute)},
      {"op9", std::addressof(POA_OldDif2::AMI_ex2Handler::op9_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op9)},
      {"op7", std::addressof(POA_OldDif2::AMI_ex2Handler::op7_skel), std::addressof(POA_OldDif2::_TAO_AMI_ex2Handler_Direct_Proxy_Impl::op7)},
      {"_repository_id", std::addressof(TAO_ServantBase::_repository_id_thru_poa_skel), nullptr},
      {"_component", std::addressof(TAO_ServantBase::_component_thru_poa_skel), nullptr},
      {"_non_existent", std::addressof(TAO_ServantBase::_non_existent_thru_poa_skel), nullptr},
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int const key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
            {
              const TAO_operation_db_entry  *resword; 

              switch (key)
                {
                case   3:
                  resword = &wordlist[3]; break;
                case   4:
                  resword = &wordlist[4]; break;
                case   5:
                  resword = &wordlist[5]; break;
                case   8:
                  resword = &wordlist[6]; break;
                case   9:
                  resword = &wordlist[7];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[8];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[9];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[10];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[11];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[12];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[13];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[14];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[15];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[16];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  10:
                  resword = &wordlist[17];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[18];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[19];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  14:
                  resword = &wordlist[20]; break;
                case  15:
                  resword = &wordlist[21]; break;
                case  18:
                  resword = &wordlist[22]; break;
                case  19:
                  resword = &wordlist[23]; break;
                case  23:
                  resword = &wordlist[24]; break;
                case  24:
                  resword = &wordlist[25];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[26];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  25:
                  resword = &wordlist[27];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[28];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[29];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  26:
                  resword = &wordlist[30];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[31];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  27:
                  resword = &wordlist[32]; break;
                case  28:
                  resword = &wordlist[33]; break;
                case  29:
                  resword = &wordlist[34]; break;
                case  30:
                  resword = &wordlist[35]; break;
                case  33:
                  resword = &wordlist[36]; break;
                case  34:
                  resword = &wordlist[37];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[38];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  35:
                  resword = &wordlist[39]; break;
                case  36:
                  resword = &wordlist[40];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[41];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  37:
                  resword = &wordlist[42]; break;
                case  38:
                  resword = &wordlist[43];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[44];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  39:
                  resword = &wordlist[45];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[46];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[47];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  40:
                  resword = &wordlist[48];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[49];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  41:
                  resword = &wordlist[50]; break;
                case  43:
                  resword = &wordlist[51]; break;
                case  44:
                  resword = &wordlist[52]; break;
                case  47:
                  resword = &wordlist[53]; break;
                case  48:
                  resword = &wordlist[54];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[55];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  49:
                  resword = &wordlist[56]; break;
                case  50:
                  resword = &wordlist[57];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  resword = &wordlist[58];
                  if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1)) return resword;
                  return 0;
                case  51:
                  resword = &wordlist[59]; break;
                case  53:
                  resword = &wordlist[60]; break;
                case  54:
                  resword = &wordlist[61]; break;
                case  58:
                  resword = &wordlist[62]; break;
                case  59:
                  resword = &wordlist[63]; break;
                case  63:
                  resword = &wordlist[64]; break;
                case  64:
                  resword = &wordlist[65]; break;
                case  65:
                  resword = &wordlist[66]; break;
                case  68:
                  resword = &wordlist[67]; break;
                default: return 0;
                }
              if (*str == *resword->opname && !ACE_OS::strncmp (str + 1, resword->opname + 1, len - 1))
                return resword;
              return 0;
            }
        }
    }
  return 0;
}

static TAO_OldDif2_AMI_ex4Handler_Perfect_Hash_OpTable tao_OldDif2_AMI_ex4Handler_optable;

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::~_TAO_AMI_ex4Handler_Direct_Proxy_Impl ()
{
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_unsigned_short_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_unsigned_short_attribute (
        ((TAO::Arg_Traits< ::CORBA::UShort>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_unsigned_short_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_unsigned_short_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_unsigned_short_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->set_unsigned_short_attribute (
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_unsigned_short_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->set_unsigned_short_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_char_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_char_attribute (
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_char>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_char_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_char_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_boolean_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_boolean_attribute (
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_boolean_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_boolean_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_boolean_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->set_boolean_attribute (
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_boolean_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->set_boolean_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_octet_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_octet_attribute (
        ((TAO::Arg_Traits< ::ACE_InputCDR::to_octet>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_octet_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_octet_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_string_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_string_attribute (
        ((TAO::Arg_Traits< char *>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_string_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_string_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_string_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->set_string_attribute (
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::set_string_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->set_string_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_limited_string_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_limited_string_attribute (
        ((TAO::Arg_Traits< ::TAO::OldDif2_AMI_ex4Handler_get_limited_string_attribute_ami_return_val>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_limited_string_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_limited_string_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_an_object_attribute (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_an_object_attribute (
        ((TAO::Arg_Traits< ::OldDif2::ex4>::in_arg_val *) args[1])->arg ()
      );
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:56

void
POA_OldDif2::_TAO_AMI_ex4Handler_Direct_Proxy_Impl::get_an_object_attribute_excep (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args)
  
{
  POA_OldDif2::AMI_ex4Handler_ptr _tao_ptr = 
    dynamic_cast<POA_OldDif2::AMI_ex4Handler_ptr> (servant);
  if (!_tao_ptr)
    {
      throw ::CORBA::INTERNAL ();
    }
  
  _tao_ptr->get_an_object_attribute_excep (
        ((TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val *) args[1])->arg ()
      );
}



//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:89



POA_OldDif2::AMI_ex4Handler::AMI_ex4Handler ()
  : TAO_ServantBase ()
{
  this->optable_ = std::addressof(tao_OldDif2_AMI_ex4Handler_optable);
}

POA_OldDif2::AMI_ex4Handler::AMI_ex4Handler (const AMI_ex4Handler& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs),
    ::POA_Messaging::ReplyHandler (rhs),
    POA_OldDif2::AMI_ex1Handler (rhs),
    POA_OldDif2::AMI_ex2Handler (rhs),
    POA_OldDif2::AMI_ex3Handler (rhs)
{
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_unsigned_short_attribute_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_unsigned_short_attribute_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::CORBA::UShort>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::CORBA::UShort> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_unsigned_short_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_unsigned_short_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::CORBA::UShort>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_unsigned_short_attribute_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_unsigned_short_attribute_excep_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_unsigned_short_attribute_excep_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_unsigned_short_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_unsigned_short_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_unsigned_short_attribute_excep_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class set_unsigned_short_attribute_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline set_unsigned_short_attribute_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant)
      : servant_ (servant)
    {
    }

    void execute () override
    {
      this->servant_->set_unsigned_short_attribute ();
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::set_unsigned_short_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  set_unsigned_short_attribute_AMI_ex4Handler command (
    impl);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class set_unsigned_short_attribute_excep_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline set_unsigned_short_attribute_excep_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->set_unsigned_short_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::set_unsigned_short_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  set_unsigned_short_attribute_excep_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_char_attribute_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_char_attribute_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_char>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_char> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_char_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_char_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_char>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_char_attribute_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_char_attribute_excep_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_char_attribute_excep_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_char_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_char_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_char_attribute_excep_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_boolean_attribute_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_boolean_attribute_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_boolean> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_boolean_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_boolean_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_boolean_attribute_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_boolean_attribute_excep_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_boolean_attribute_excep_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_boolean_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_boolean_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_boolean_attribute_excep_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class set_boolean_attribute_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline set_boolean_attribute_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant)
      : servant_ (servant)
    {
    }

    void execute () override
    {
      this->servant_->set_boolean_attribute ();
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::set_boolean_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  set_boolean_attribute_AMI_ex4Handler command (
    impl);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class set_boolean_attribute_excep_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline set_boolean_attribute_excep_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->set_boolean_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::set_boolean_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  set_boolean_attribute_excep_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_octet_attribute_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_octet_attribute_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::ACE_InputCDR::to_octet> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_octet_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_octet_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::ACE_InputCDR::to_octet>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_octet_attribute_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_octet_attribute_excep_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_octet_attribute_excep_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_octet_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_octet_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_octet_attribute_excep_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_string_attribute_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_string_attribute_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< char *>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< char *> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_string_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_string_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< char *>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_string_attribute_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_string_attribute_excep_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_string_attribute_excep_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_string_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_string_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_string_attribute_excep_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class set_string_attribute_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline set_string_attribute_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant)
      : servant_ (servant)
    {
    }

    void execute () override
    {
      this->servant_->set_string_attribute ();
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::set_string_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;

  TAO::Argument * const args[] =
    {
      std::addressof(retval)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  set_string_attribute_AMI_ex4Handler command (
    impl);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 1
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class set_string_attribute_excep_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline set_string_attribute_excep_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->set_string_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::set_string_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  set_string_attribute_excep_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_limited_string_attribute_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_limited_string_attribute_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::TAO::OldDif2_AMI_ex4Handler_get_limited_string_attribute_ami_return_val>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::TAO::OldDif2_AMI_ex4Handler_get_limited_string_attribute_ami_return_val> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_limited_string_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_limited_string_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::TAO::OldDif2_AMI_ex4Handler_get_limited_string_attribute_ami_return_val>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_limited_string_attribute_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_limited_string_attribute_excep_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_limited_string_attribute_excep_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_limited_string_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_limited_string_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_limited_string_attribute_excep_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_an_object_attribute_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_an_object_attribute_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::OldDif2::ex4>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::OldDif2::ex4> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_an_object_attribute (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_an_object_attribute_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::OldDif2::ex4>::in_arg_val _tao_ami_return_val;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_ami_return_val)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_an_object_attribute_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}


namespace POA_OldDif2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:79

  class get_an_object_attribute_excep_AMI_ex4Handler
    : public TAO::Upcall_Command
  {
  public:
    inline get_an_object_attribute_excep_AMI_ex4Handler (
      POA_OldDif2::AMI_ex4Handler * servant,
      TAO_Operation_Details const * operation_details,
      TAO::Argument * const args[])
      : servant_ (servant)
        , operation_details_ (operation_details)
        , args_ (args)
    {
    }

    void execute () override
    {
      TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_type arg_1 =
        TAO::Portable_Server::get_in_arg< ::Messaging::ExceptionHolder> (
          this->operation_details_,
          this->args_,
          1);
        
      this->servant_->get_an_object_attribute_excep (
        arg_1);
    }
  
  private:
    POA_OldDif2::AMI_ex4Handler * const servant_;
    TAO_Operation_Details const * const operation_details_;
    TAO::Argument * const * const args_;
  };
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_ss.cpp:167

void POA_OldDif2::AMI_ex4Handler::get_an_object_attribute_excep_skel (
  TAO_ServerRequest & server_request,
  TAO::Portable_Server::Servant_Upcall *TAO_INTERCEPTOR (servant_upcall),
  TAO_ServantBase *servant)
{TAO::SArg_Traits< void>::ret_val retval;
  TAO::SArg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder;

  TAO::Argument * const args[] =
    {
      std::addressof(retval),
      std::addressof(_tao_excep_holder)
    };
  
  POA_OldDif2::AMI_ex4Handler * const impl =
    dynamic_cast<POA_OldDif2::AMI_ex4Handler *> (servant);

  if (!impl)
    {
      throw ::CORBA::INTERNAL ();
    }

  get_an_object_attribute_excep_AMI_ex4Handler command (
    impl,
    server_request.operation_details (),
    args);
  
  TAO::Upcall_Wrapper upcall_wrapper;
  upcall_wrapper.upcall (server_request
                         , args
                         , 2
                         , command
#if TAO_HAS_INTERCEPTORS == 1
                         , servant_upcall
                         , nullptr
                         , 0
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
                         );
}




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:155





::CORBA::Boolean POA_OldDif2::AMI_ex4Handler::_is_a (const char* value)
{
  return
    (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/AMI_ex1Handler:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/AMI_ex2Handler:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/AMI_ex3Handler:1.0") == 0 ||
      std::strcmp (value, "IDL:OldDif2/AMI_ex4Handler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
    );
}

const char* POA_OldDif2::AMI_ex4Handler::_interface_repository_id () const
{
  return "IDL:OldDif2/AMI_ex4Handler:1.0";
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:394



void POA_OldDif2::AMI_ex4Handler::_dispatch (
  TAO_ServerRequest & req,
  TAO::Portable_Server::Servant_Upcall* servant_upcall)
{
  this->synchronous_upcall_dispatch (req, servant_upcall, this);
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ss.cpp:354



OldDif2::AMI_ex4Handler *
POA_OldDif2::AMI_ex4Handler::_this ()
{
  TAO_Stub_Auto_Ptr stub (this->_create_stub ());
  ::CORBA::Boolean const _tao_opt_colloc = stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ();
  ::CORBA::Object_var obj = new (std::nothrow) ::CORBA::Object (stub.get (), _tao_opt_colloc, this);
  if (obj.ptr ())
    {
      (void) stub.release ();
      return TAO::Narrow_Utils<::OldDif2::AMI_ex4Handler>::unchecked_narrow (obj.in ());
    }
  return {};
}

#endif /* ifndef */

