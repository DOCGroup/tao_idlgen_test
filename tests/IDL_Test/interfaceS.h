// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:454

#ifndef _TAO_IDL_INTERFACES_FQKJMG_H_
#define _TAO_IDL_INTERFACES_FQKJMG_H_

#include /**/ "ace/pre.h"

#include "interfaceC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Fixed_Array_SArgument_T.h"
#include "tao/PortableServer/Var_Array_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Messaging/MessagingS.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
#include "tao/Messaging/AMH_Response_Handler.h"

#include /**/ "TAO_IDL_TEST_stub_export.h"
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_BASE__SARG_TRAITS_)
#define _BASE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Base>
    : public Object_SArg_Traits_T<
        ::Base_ptr,
        ::Base_var,
        ::Base_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_BASEEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_BASEEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_BaseExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_BaseExceptionHolder *,
            ::AMH_BaseExceptionHolder_var,
            ::AMH_BaseExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_BASEHANDLER__SARG_TRAITS_)
#define _AMI_BASEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_BaseHandler>
    : public Object_SArg_Traits_T<
        ::AMI_BaseHandler_ptr,
        ::AMI_BaseHandler_var,
        ::AMI_BaseHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_DERIVED__SARG_TRAITS_)
#define _DERIVED__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Derived>
    : public Object_SArg_Traits_T<
        ::Derived_ptr,
        ::Derived_var,
        ::Derived_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_DERIVEDEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_DERIVEDEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_DerivedExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_DerivedExceptionHolder *,
            ::AMH_DerivedExceptionHolder_var,
            ::AMH_DerivedExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_DERIVEDHANDLER__SARG_TRAITS_)
#define _AMI_DERIVEDHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_DerivedHandler>
    : public Object_SArg_Traits_T<
        ::AMI_DerivedHandler_ptr,
        ::AMI_DerivedHandler_var,
        ::AMI_DerivedHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::foo_mod::date>
    : public
        Fixed_Size_SArg_Traits_T<
            ::foo_mod::date,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_FOOSTEP__SARG_TRAITS_)
#define _FOOSTEP__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::foostep>
    : public Object_SArg_Traits_T<
        ::foostep_ptr,
        ::foostep_var,
        ::foostep_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_FOOSTEPEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_FOOSTEPEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_foostepExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_foostepExceptionHolder *,
            ::AMH_foostepExceptionHolder_var,
            ::AMH_foostepExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_FOOSTEPHANDLER__SARG_TRAITS_)
#define _AMI_FOOSTEPHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_foostepHandler>
    : public Object_SArg_Traits_T<
        ::AMI_foostepHandler_ptr,
        ::AMI_foostepHandler_var,
        ::AMI_foostepHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_MOTHER__SARG_TRAITS_)
#define _MOTHER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::mother>
    : public Object_SArg_Traits_T<
        ::mother_ptr,
        ::mother_var,
        ::mother_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::mother::member>
    : public
        Fixed_Size_SArg_Traits_T<
            ::mother::member,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_MOTHEREXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_MOTHEREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_motherExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_motherExceptionHolder *,
            ::AMH_motherExceptionHolder_var,
            ::AMH_motherExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_MOTHERHANDLER__SARG_TRAITS_)
#define _AMI_MOTHERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_motherHandler>
    : public Object_SArg_Traits_T<
        ::AMI_motherHandler_ptr,
        ::AMI_motherHandler_var,
        ::AMI_motherHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_FATHER__SARG_TRAITS_)
#define _FATHER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::father>
    : public Object_SArg_Traits_T<
        ::father_ptr,
        ::father_var,
        ::father_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::father::member>
    : public
        Fixed_Size_SArg_Traits_T<
            ::father::member,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_FATHEREXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_FATHEREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_fatherExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_fatherExceptionHolder *,
            ::AMH_fatherExceptionHolder_var,
            ::AMH_fatherExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_FATHERHANDLER__SARG_TRAITS_)
#define _AMI_FATHERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_fatherHandler>
    : public Object_SArg_Traits_T<
        ::AMI_fatherHandler_ptr,
        ::AMI_fatherHandler_var,
        ::AMI_fatherHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_CHILD__SARG_TRAITS_)
#define _CHILD__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::child>
    : public Object_SArg_Traits_T<
        ::child_ptr,
        ::child_var,
        ::child_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_CHILDEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_CHILDEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_childExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_childExceptionHolder *,
            ::AMH_childExceptionHolder_var,
            ::AMH_childExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_CHILDHANDLER__SARG_TRAITS_)
#define _AMI_CHILDHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_childHandler>
    : public Object_SArg_Traits_T<
        ::AMI_childHandler_ptr,
        ::AMI_childHandler_var,
        ::AMI_childHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_TRY__SARG_TRAITS_)
#define _TRY__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::_cxx_try>
    : public Object_SArg_Traits_T<
        ::_cxx_try_ptr,
        ::_cxx_try_var,
        ::_cxx_try_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH__CXX_TRYEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH__CXX_TRYEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH__cxx_tryExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH__cxx_tryExceptionHolder *,
            ::AMH__cxx_tryExceptionHolder_var,
            ::AMH__cxx_tryExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI__CXX_TRYHANDLER__SARG_TRAITS_)
#define _AMI__CXX_TRYHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI__cxx_tryHandler>
    : public Object_SArg_Traits_T<
        ::AMI__cxx_tryHandler_ptr,
        ::AMI__cxx_tryHandler_var,
        ::AMI__cxx_tryHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_LATER__SARG_TRAITS_)
#define _LATER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::later>
    : public Object_SArg_Traits_T<
        ::later_ptr,
        ::later_var,
        ::later_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_LATER_USER__SARG_TRAITS_)
#define _LATER_USER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::later_user>
    : public Object_SArg_Traits_T<
        ::later_user_ptr,
        ::later_user_var,
        ::later_user_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_LATER_USEREXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_LATER_USEREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_later_userExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_later_userExceptionHolder *,
            ::AMH_later_userExceptionHolder_var,
            ::AMH_later_userExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_LATER_USERHANDLER__SARG_TRAITS_)
#define _AMI_LATER_USERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_later_userHandler>
    : public Object_SArg_Traits_T<
        ::AMI_later_userHandler_ptr,
        ::AMI_later_userHandler_var,
        ::AMI_later_userHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::later_holder>
    : public
        Var_Size_SArg_Traits_T<
            ::later_holder,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_LATEREXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_LATEREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_laterExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_laterExceptionHolder *,
            ::AMH_laterExceptionHolder_var,
            ::AMH_laterExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_LATERHANDLER__SARG_TRAITS_)
#define _AMI_LATERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_laterHandler>
    : public Object_SArg_Traits_T<
        ::AMI_laterHandler_ptr,
        ::AMI_laterHandler_var,
        ::AMI_laterHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_BEGIN__SARG_TRAITS_)
#define _BEGIN__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Begin>
    : public Object_SArg_Traits_T<
        ::Begin_ptr,
        ::Begin_var,
        ::Begin_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_BEGINEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_BEGINEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_BeginExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_BeginExceptionHolder *,
            ::AMH_BeginExceptionHolder_var,
            ::AMH_BeginExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_BEGINHANDLER__SARG_TRAITS_)
#define _AMI_BEGINHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_BeginHandler>
    : public Object_SArg_Traits_T<
        ::AMI_BeginHandler_ptr,
        ::AMI_BeginHandler_var,
        ::AMI_BeginHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_MIDDLE__SARG_TRAITS_)
#define _MIDDLE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Middle>
    : public Object_SArg_Traits_T<
        ::Middle_ptr,
        ::Middle_var,
        ::Middle_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_MIDDLEEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_MIDDLEEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_MiddleExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_MiddleExceptionHolder *,
            ::AMH_MiddleExceptionHolder_var,
            ::AMH_MiddleExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_MIDDLEHANDLER__SARG_TRAITS_)
#define _AMI_MIDDLEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_MiddleHandler>
    : public Object_SArg_Traits_T<
        ::AMI_MiddleHandler_ptr,
        ::AMI_MiddleHandler_var,
        ::AMI_MiddleHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_END__SARG_TRAITS_)
#define _END__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::End>
    : public Object_SArg_Traits_T<
        ::End_ptr,
        ::End_var,
        ::End_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_ENDEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_ENDEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_EndExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_EndExceptionHolder *,
            ::AMH_EndExceptionHolder_var,
            ::AMH_EndExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_ENDHANDLER__SARG_TRAITS_)
#define _AMI_ENDHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_EndHandler>
    : public Object_SArg_Traits_T<
        ::AMI_EndHandler_ptr,
        ::AMI_EndHandler_var,
        ::AMI_EndHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_CLIENT__SARG_TRAITS_)
#define _CLIENT__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Client>
    : public Object_SArg_Traits_T<
        ::Client_ptr,
        ::Client_var,
        ::Client_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_CLIENTEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_CLIENTEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_ClientExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_ClientExceptionHolder *,
            ::AMH_ClientExceptionHolder_var,
            ::AMH_ClientExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_CLIENTHANDLER__SARG_TRAITS_)
#define _AMI_CLIENTHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_ClientHandler>
    : public Object_SArg_Traits_T<
        ::AMI_ClientHandler_ptr,
        ::AMI_ClientHandler_var,
        ::AMI_ClientHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_ATTRIBUTETESTER__SARG_TRAITS_)
#define _ATTRIBUTETESTER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AttributeTester>
    : public Object_SArg_Traits_T<
        ::AttributeTester_ptr,
        ::AttributeTester_var,
        ::AttributeTester_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */

  template<>
  class SArg_Traits< ::AttributeTester::string_1_tag>
    : public
        Var_Array_SArg_Traits_T<
            ::AttributeTester::string_1_out,
            ::AttributeTester::string_1_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_ATTRIBUTETESTEREXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_ATTRIBUTETESTEREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_AttributeTesterExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_AttributeTesterExceptionHolder *,
            ::AMH_AttributeTesterExceptionHolder_var,
            ::AMH_AttributeTesterExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_ATTRIBUTETESTERHANDLER__SARG_TRAITS_)
#define _AMI_ATTRIBUTETESTERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_AttributeTesterHandler>
    : public Object_SArg_Traits_T<
        ::AMI_AttributeTesterHandler_ptr,
        ::AMI_AttributeTesterHandler_var,
        ::AMI_AttributeTesterHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_PARAMMOD_PARAMETERTESTER__SARG_TRAITS_)
#define _PARAMMOD_PARAMETERTESTER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::ParamMod::ParameterTester>
    : public Object_SArg_Traits_T<
        ::ParamMod::ParameterTester_ptr,
        ::ParamMod::ParameterTester_var,
        ::ParamMod::ParameterTester_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class SArg_Traits< ::ParamMod::ParameterTester::object_seq_type>
    : public
        Var_Size_SArg_Traits_T<
            ::ParamMod::ParameterTester::object_seq_type,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class SArg_Traits< ::ParamMod::ParameterTester::object_array_type_tag>
    : public
        Var_Array_SArg_Traits_T<
            ::ParamMod::ParameterTester::object_array_type_out,
            ::ParamMod::ParameterTester::object_array_type_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::ParamMod::ParameterTester::object_struct_type>
    : public
        Var_Size_SArg_Traits_T<
            ::ParamMod::ParameterTester::object_struct_type,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:1041

  

  template<>
  class SArg_Traits< ::ParamMod::ParameterTester::object_union_type>
    : public
        Var_Size_SArg_Traits_T<
            ::ParamMod::ParameterTester::object_union_type,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_PARAMMOD_AMH_PARAMETERTESTEREXCEPTIONHOLDER__SARG_TRAITS_)
#define _PARAMMOD_AMH_PARAMETERTESTEREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::ParamMod::AMH_ParameterTesterExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::ParamMod::AMH_ParameterTesterExceptionHolder *,
            ::ParamMod::AMH_ParameterTesterExceptionHolder_var,
            ::ParamMod::AMH_ParameterTesterExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_PARAMMOD_AMI_PARAMETERTESTERHANDLER__SARG_TRAITS_)
#define _PARAMMOD_AMI_PARAMETERTESTERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::ParamMod::AMI_ParameterTesterHandler>
    : public Object_SArg_Traits_T<
        ::ParamMod::AMI_ParameterTesterHandler_ptr,
        ::ParamMod::AMI_ParameterTesterHandler_var,
        ::ParamMod::AMI_ParameterTesterHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A__SARG_TRAITS_)
#define _A__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A>
    : public Object_SArg_Traits_T<
        ::A_ptr,
        ::A_var,
        ::A_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:1041

  

  template<>
  class SArg_Traits< ::A::U>
    : public
        Var_Size_SArg_Traits_T<
            ::A::U,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_AEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_AEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_AExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_AExceptionHolder *,
            ::AMH_AExceptionHolder_var,
            ::AMH_AExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_AHANDLER__SARG_TRAITS_)
#define _AMI_AHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_AHandler>
    : public Object_SArg_Traits_T<
        ::AMI_AHandler_ptr,
        ::AMI_AHandler_var,
        ::AMI_AHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_M_A__SARG_TRAITS_)
#define _M_A__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::M::A>
    : public Object_SArg_Traits_T<
        ::M::A_ptr,
        ::M::A_var,
        ::M::A_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_M_A__SARG_TRAITS_)
#define _M_A__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::M::A>
    : public Object_SArg_Traits_T<
        ::M::A_ptr,
        ::M::A_var,
        ::M::A_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_M_AMH_AEXCEPTIONHOLDER__SARG_TRAITS_)
#define _M_AMH_AEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::M::AMH_AExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::M::AMH_AExceptionHolder *,
            ::M::AMH_AExceptionHolder_var,
            ::M::AMH_AExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_M_AMI_AHANDLER__SARG_TRAITS_)
#define _M_AMI_AHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::M::AMI_AHandler>
    : public Object_SArg_Traits_T<
        ::M::AMI_AHandler_ptr,
        ::M::AMI_AHandler_var,
        ::M::AMI_AHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_I1_IF1__SARG_TRAITS_)
#define _I1_IF1__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::i1::if1>
    : public Object_SArg_Traits_T<
        ::i1::if1_ptr,
        ::i1::if1_var,
        ::i1::if1_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_I1_AMH_IF1EXCEPTIONHOLDER__SARG_TRAITS_)
#define _I1_AMH_IF1EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::i1::AMH_if1ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::i1::AMH_if1ExceptionHolder *,
            ::i1::AMH_if1ExceptionHolder_var,
            ::i1::AMH_if1ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_I1_AMI_IF1HANDLER__SARG_TRAITS_)
#define _I1_AMI_IF1HANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::i1::AMI_if1Handler>
    : public Object_SArg_Traits_T<
        ::i1::AMI_if1Handler_ptr,
        ::i1::AMI_if1Handler_var,
        ::i1::AMI_if1Handler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_I2_IF2__SARG_TRAITS_)
#define _I2_IF2__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::i2::if2>
    : public Object_SArg_Traits_T<
        ::i2::if2_ptr,
        ::i2::if2_var,
        ::i2::if2_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_I2_AMH_IF2EXCEPTIONHOLDER__SARG_TRAITS_)
#define _I2_AMH_IF2EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::i2::AMH_if2ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::i2::AMH_if2ExceptionHolder *,
            ::i2::AMH_if2ExceptionHolder_var,
            ::i2::AMH_if2ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_I2_AMI_IF2HANDLER__SARG_TRAITS_)
#define _I2_AMI_IF2HANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::i2::AMI_if2Handler>
    : public Object_SArg_Traits_T<
        ::i2::AMI_if2Handler_ptr,
        ::i2::AMI_if2Handler_var,
        ::i2::AMI_if2Handler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_I2_IF3__SARG_TRAITS_)
#define _I2_IF3__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::i2::if3>
    : public Object_SArg_Traits_T<
        ::i2::if3_ptr,
        ::i2::if3_var,
        ::i2::if3_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_I2_AMH_IF3EXCEPTIONHOLDER__SARG_TRAITS_)
#define _I2_AMH_IF3EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::i2::AMH_if3ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::i2::AMH_if3ExceptionHolder *,
            ::i2::AMH_if3ExceptionHolder_var,
            ::i2::AMH_if3ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_I2_AMI_IF3HANDLER__SARG_TRAITS_)
#define _I2_AMI_IF3HANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::i2::AMI_if3Handler>
    : public Object_SArg_Traits_T<
        ::i2::AMI_if3Handler_ptr,
        ::i2::AMI_if3Handler_var,
        ::i2::AMI_if3Handler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_REDEFS_BASE__SARG_TRAITS_)
#define _REDEFS_BASE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::redefs::base>
    : public Object_SArg_Traits_T<
        ::redefs::base_ptr,
        ::redefs::base_var,
        ::redefs::base_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::redefs::base::foo>
    : public
        Fixed_Size_SArg_Traits_T<
            ::redefs::base::foo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_REDEFS_AMH_BASEEXCEPTIONHOLDER__SARG_TRAITS_)
#define _REDEFS_AMH_BASEEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::redefs::AMH_baseExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::redefs::AMH_baseExceptionHolder *,
            ::redefs::AMH_baseExceptionHolder_var,
            ::redefs::AMH_baseExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_REDEFS_AMI_BASEHANDLER__SARG_TRAITS_)
#define _REDEFS_AMI_BASEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::redefs::AMI_baseHandler>
    : public Object_SArg_Traits_T<
        ::redefs::AMI_baseHandler_ptr,
        ::redefs::AMI_baseHandler_var,
        ::redefs::AMI_baseHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_REDEFS_DERIVED__SARG_TRAITS_)
#define _REDEFS_DERIVED__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::redefs::derived>
    : public Object_SArg_Traits_T<
        ::redefs::derived_ptr,
        ::redefs::derived_var,
        ::redefs::derived_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::redefs::derived::foo>
    : public
        Var_Size_SArg_Traits_T<
            ::redefs::derived::foo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_REDEFS_AMH_DERIVEDEXCEPTIONHOLDER__SARG_TRAITS_)
#define _REDEFS_AMH_DERIVEDEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::redefs::AMH_derivedExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::redefs::AMH_derivedExceptionHolder *,
            ::redefs::AMH_derivedExceptionHolder_var,
            ::redefs::AMH_derivedExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_REDEFS_AMI_DERIVEDHANDLER__SARG_TRAITS_)
#define _REDEFS_AMI_DERIVEDHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::redefs::AMI_derivedHandler>
    : public Object_SArg_Traits_T<
        ::redefs::AMI_derivedHandler_ptr,
        ::redefs::AMI_derivedHandler_var,
        ::redefs::AMI_derivedHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_REC_ARG_TRAITS_BASE__SARG_TRAITS_)
#define _REC_ARG_TRAITS_BASE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Rec_Arg_Traits::base>
    : public Object_SArg_Traits_T<
        ::Rec_Arg_Traits::base_ptr,
        ::Rec_Arg_Traits::base_var,
        ::Rec_Arg_Traits::base_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_REC_ARG_TRAITS_AMH_BASEEXCEPTIONHOLDER__SARG_TRAITS_)
#define _REC_ARG_TRAITS_AMH_BASEEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Rec_Arg_Traits::AMH_baseExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Rec_Arg_Traits::AMH_baseExceptionHolder *,
            ::Rec_Arg_Traits::AMH_baseExceptionHolder_var,
            ::Rec_Arg_Traits::AMH_baseExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_REC_ARG_TRAITS_AMI_BASEHANDLER__SARG_TRAITS_)
#define _REC_ARG_TRAITS_AMI_BASEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Rec_Arg_Traits::AMI_baseHandler>
    : public Object_SArg_Traits_T<
        ::Rec_Arg_Traits::AMI_baseHandler_ptr,
        ::Rec_Arg_Traits::AMI_baseHandler_var,
        ::Rec_Arg_Traits::AMI_baseHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_REC_ARG_TRAITS_DERIVED__SARG_TRAITS_)
#define _REC_ARG_TRAITS_DERIVED__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Rec_Arg_Traits::derived>
    : public Object_SArg_Traits_T<
        ::Rec_Arg_Traits::derived_ptr,
        ::Rec_Arg_Traits::derived_var,
        ::Rec_Arg_Traits::derived_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_REC_ARG_TRAITS_AMH_DERIVEDEXCEPTIONHOLDER__SARG_TRAITS_)
#define _REC_ARG_TRAITS_AMH_DERIVEDEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Rec_Arg_Traits::AMH_derivedExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Rec_Arg_Traits::AMH_derivedExceptionHolder *,
            ::Rec_Arg_Traits::AMH_derivedExceptionHolder_var,
            ::Rec_Arg_Traits::AMH_derivedExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_REC_ARG_TRAITS_AMI_DERIVEDHANDLER__SARG_TRAITS_)
#define _REC_ARG_TRAITS_AMI_DERIVEDHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Rec_Arg_Traits::AMI_derivedHandler>
    : public Object_SArg_Traits_T<
        ::Rec_Arg_Traits::AMI_derivedHandler_ptr,
        ::Rec_Arg_Traits::AMI_derivedHandler_var,
        ::Rec_Arg_Traits::AMI_derivedHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_CALL_TEST_ITEST__SARG_TRAITS_)
#define _CALL_TEST_ITEST__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::call_test::iTest>
    : public Object_SArg_Traits_T<
        ::call_test::iTest_ptr,
        ::call_test::iTest_var,
        ::call_test::iTest_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_CALL_TEST_AMH_ITESTEXCEPTIONHOLDER__SARG_TRAITS_)
#define _CALL_TEST_AMH_ITESTEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::call_test::AMH_iTestExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::call_test::AMH_iTestExceptionHolder *,
            ::call_test::AMH_iTestExceptionHolder_var,
            ::call_test::AMH_iTestExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_CALL_TEST_AMI_ITESTHANDLER__SARG_TRAITS_)
#define _CALL_TEST_AMI_ITESTHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::call_test::AMI_iTestHandler>
    : public Object_SArg_Traits_T<
        ::call_test::AMI_iTestHandler_ptr,
        ::call_test::AMI_iTestHandler_var,
        ::call_test::AMI_iTestHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_CALL_ATTRIBUTE_IBAR__SARG_TRAITS_)
#define _CALL_ATTRIBUTE_IBAR__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::call_attribute::iBar>
    : public Object_SArg_Traits_T<
        ::call_attribute::iBar_ptr,
        ::call_attribute::iBar_var,
        ::call_attribute::iBar_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_CALL_ATTRIBUTE_AMH_IBAREXCEPTIONHOLDER__SARG_TRAITS_)
#define _CALL_ATTRIBUTE_AMH_IBAREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::call_attribute::AMH_iBarExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::call_attribute::AMH_iBarExceptionHolder *,
            ::call_attribute::AMH_iBarExceptionHolder_var,
            ::call_attribute::AMH_iBarExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_CALL_ATTRIBUTE_AMI_IBARHANDLER__SARG_TRAITS_)
#define _CALL_ATTRIBUTE_AMI_IBARHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::call_attribute::AMI_iBarHandler>
    : public Object_SArg_Traits_T<
        ::call_attribute::AMI_iBarHandler_ptr,
        ::call_attribute::AMI_iBarHandler_var,
        ::call_attribute::AMI_iBarHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_Base;
typedef POA_AMH_Base *POA_AMH_Base_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_Base
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_Base ();

public:
  POA_AMH_Base (const POA_AMH_Base& rhs);
  virtual ~POA_AMH_Base () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  Base *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void _get_value_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void value (
    AMH_BaseResponseHandler_ptr _tao_rh
  ) = 0;

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void _set_value_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void value (
    AMH_BaseResponseHandler_ptr _tao_rh,
    ::CORBA::Long value
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_Base;
typedef POA_Base *POA_Base_ptr;

class _TAO_Base_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_Base
  : public virtual PortableServer::ServantBase
{
protected:
  POA_Base ();

public:
  /// Useful for template programming.
  typedef ::Base _stub_type;
  typedef ::Base_ptr _stub_ptr_type;
  typedef ::Base_var _stub_var_type;

  POA_Base (const POA_Base& rhs);
  virtual ~POA_Base () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Base *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::CORBA::Long value () = 0;

  static void _get_value_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void value (
    ::CORBA::Long value) = 0;

  static void _set_value_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_Base_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_Base_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _get_value (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _set_value (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_BaseResponseHandler;
typedef POA_TAO_AMH_BaseResponseHandler *POA_TAO_AMH_BaseResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_BaseResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_BaseResponseHandler
{
public:
  POA_TAO_AMH_BaseResponseHandler () = default;
  virtual ~POA_TAO_AMH_BaseResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_value (
    ::CORBA::Long return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_value_excep (
    ::AMH_BaseExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_value () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_value_excep (
    ::AMH_BaseExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_BaseHandler;
typedef POA_AMI_BaseHandler *POA_AMI_BaseHandler_ptr;

class _TAO_AMI_BaseHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_BaseHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_BaseHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_BaseHandler _stub_type;
  typedef ::AMI_BaseHandler_ptr _stub_ptr_type;
  typedef ::AMI_BaseHandler_var _stub_var_type;

  POA_AMI_BaseHandler (const POA_AMI_BaseHandler& rhs);
  virtual ~POA_AMI_BaseHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_BaseHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_value (
    ::CORBA::Long ami_return_val) = 0;

  static void get_value_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_value_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void get_value_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_value () = 0;

  static void set_value_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_value_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void set_value_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_BaseHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_BaseHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_value (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_value_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_value (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_value_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_Derived;
typedef POA_AMH_Derived *POA_AMH_Derived_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_Derived
  : public virtual POA_AMH_Base
    
{
protected:
  POA_AMH_Derived ();

public:
  POA_AMH_Derived (const POA_AMH_Derived& rhs);
  virtual ~POA_AMH_Derived () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  Derived *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_Derived;
typedef POA_Derived *POA_Derived_ptr;

class _TAO_Derived_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_Derived
  : public virtual POA_Base
{
protected:
  POA_Derived ();

public:
  /// Useful for template programming.
  typedef ::Derived _stub_type;
  typedef ::Derived_ptr _stub_ptr_type;
  typedef ::Derived_var _stub_var_type;

  POA_Derived (const POA_Derived& rhs);
  virtual ~POA_Derived () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Derived *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_Derived_Direct_Proxy_Impl
  : public virtual ::_TAO_Base_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_Derived_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_DerivedResponseHandler;
typedef POA_TAO_AMH_DerivedResponseHandler *POA_TAO_AMH_DerivedResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_DerivedResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_DerivedResponseHandler
{
public:
  POA_TAO_AMH_DerivedResponseHandler () = default;
  virtual ~POA_TAO_AMH_DerivedResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_DerivedHandler;
typedef POA_AMI_DerivedHandler *POA_AMI_DerivedHandler_ptr;

class _TAO_AMI_DerivedHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_DerivedHandler
  : public virtual POA_AMI_BaseHandler
{
protected:
  POA_AMI_DerivedHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_DerivedHandler _stub_type;
  typedef ::AMI_DerivedHandler_ptr _stub_ptr_type;
  typedef ::AMI_DerivedHandler_var _stub_var_type;

  POA_AMI_DerivedHandler (const POA_AMI_DerivedHandler& rhs);
  virtual ~POA_AMI_DerivedHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_DerivedHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_DerivedHandler_Direct_Proxy_Impl
  : public virtual ::_TAO_AMI_BaseHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_DerivedHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_foo_mod
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module foo_mod
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_foostep;
typedef POA_AMH_foostep *POA_AMH_foostep_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_foostep
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_foostep ();

public:
  POA_AMH_foostep (const POA_AMH_foostep& rhs);
  virtual ~POA_AMH_foostep () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  foostep *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void getDate_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void getDate (
    AMH_foostepResponseHandler_ptr _tao_rh
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_foostep;
typedef POA_foostep *POA_foostep_ptr;

class _TAO_foostep_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_foostep
  : public virtual PortableServer::ServantBase
{
protected:
  POA_foostep ();

public:
  /// Useful for template programming.
  typedef ::foostep _stub_type;
  typedef ::foostep_ptr _stub_ptr_type;
  typedef ::foostep_var _stub_var_type;

  POA_foostep (const POA_foostep& rhs);
  virtual ~POA_foostep () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::foostep *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::foo_mod::date getDate () = 0;

  static void getDate_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_foostep_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_foostep_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getDate (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_foostepResponseHandler;
typedef POA_TAO_AMH_foostepResponseHandler *POA_TAO_AMH_foostepResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_foostepResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_foostepResponseHandler
{
public:
  POA_TAO_AMH_foostepResponseHandler () = default;
  virtual ~POA_TAO_AMH_foostepResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void getDate (
    const ::foo_mod::date & return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void getDate_excep (
    ::AMH_foostepExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_foostepHandler;
typedef POA_AMI_foostepHandler *POA_AMI_foostepHandler_ptr;

class _TAO_AMI_foostepHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_foostepHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_foostepHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_foostepHandler _stub_type;
  typedef ::AMI_foostepHandler_ptr _stub_ptr_type;
  typedef ::AMI_foostepHandler_var _stub_var_type;

  POA_AMI_foostepHandler (const POA_AMI_foostepHandler& rhs);
  virtual ~POA_AMI_foostepHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_foostepHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void getDate (
    const ::foo_mod::date & ami_return_val) = 0;

  static void getDate_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void getDate_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void getDate_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_foostepHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_foostepHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getDate (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getDate_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_mother;
typedef POA_AMH_mother *POA_AMH_mother_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_mother
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_mother ();

public:
  POA_AMH_mother (const POA_AMH_mother& rhs);
  virtual ~POA_AMH_mother () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  mother *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_mother;
typedef POA_mother *POA_mother_ptr;

class _TAO_mother_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_mother
  : public virtual PortableServer::ServantBase
{
protected:
  POA_mother ();

public:
  /// Useful for template programming.
  typedef ::mother _stub_type;
  typedef ::mother_ptr _stub_ptr_type;
  typedef ::mother_var _stub_var_type;

  POA_mother (const POA_mother& rhs);
  virtual ~POA_mother () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::mother *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_mother_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_mother_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_motherResponseHandler;
typedef POA_TAO_AMH_motherResponseHandler *POA_TAO_AMH_motherResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_motherResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_motherResponseHandler
{
public:
  POA_TAO_AMH_motherResponseHandler () = default;
  virtual ~POA_TAO_AMH_motherResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_motherHandler;
typedef POA_AMI_motherHandler *POA_AMI_motherHandler_ptr;

class _TAO_AMI_motherHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_motherHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_motherHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_motherHandler _stub_type;
  typedef ::AMI_motherHandler_ptr _stub_ptr_type;
  typedef ::AMI_motherHandler_var _stub_var_type;

  POA_AMI_motherHandler (const POA_AMI_motherHandler& rhs);
  virtual ~POA_AMI_motherHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_motherHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_motherHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_motherHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_father;
typedef POA_AMH_father *POA_AMH_father_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_father
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_father ();

public:
  POA_AMH_father (const POA_AMH_father& rhs);
  virtual ~POA_AMH_father () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  father *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_father;
typedef POA_father *POA_father_ptr;

class _TAO_father_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_father
  : public virtual PortableServer::ServantBase
{
protected:
  POA_father ();

public:
  /// Useful for template programming.
  typedef ::father _stub_type;
  typedef ::father_ptr _stub_ptr_type;
  typedef ::father_var _stub_var_type;

  POA_father (const POA_father& rhs);
  virtual ~POA_father () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::father *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_father_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_father_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_fatherResponseHandler;
typedef POA_TAO_AMH_fatherResponseHandler *POA_TAO_AMH_fatherResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_fatherResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_fatherResponseHandler
{
public:
  POA_TAO_AMH_fatherResponseHandler () = default;
  virtual ~POA_TAO_AMH_fatherResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_fatherHandler;
typedef POA_AMI_fatherHandler *POA_AMI_fatherHandler_ptr;

class _TAO_AMI_fatherHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_fatherHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_fatherHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_fatherHandler _stub_type;
  typedef ::AMI_fatherHandler_ptr _stub_ptr_type;
  typedef ::AMI_fatherHandler_var _stub_var_type;

  POA_AMI_fatherHandler (const POA_AMI_fatherHandler& rhs);
  virtual ~POA_AMI_fatherHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_fatherHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_fatherHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_fatherHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_child;
typedef POA_AMH_child *POA_AMH_child_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_child
  : public virtual POA_AMH_mother
    , public virtual POA_AMH_father
    
{
protected:
  POA_AMH_child ();

public:
  POA_AMH_child (const POA_AMH_child& rhs);
  virtual ~POA_AMH_child () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  child *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_child;
typedef POA_child *POA_child_ptr;

class _TAO_child_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_child
  : public virtual POA_mother,
    public virtual POA_father
{
protected:
  POA_child ();

public:
  /// Useful for template programming.
  typedef ::child _stub_type;
  typedef ::child_ptr _stub_ptr_type;
  typedef ::child_var _stub_var_type;

  POA_child (const POA_child& rhs);
  virtual ~POA_child () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::child *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_child_Direct_Proxy_Impl
  : public virtual ::_TAO_mother_Direct_Proxy_Impl,
    public virtual ::_TAO_father_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_child_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_childResponseHandler;
typedef POA_TAO_AMH_childResponseHandler *POA_TAO_AMH_childResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_childResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_childResponseHandler
{
public:
  POA_TAO_AMH_childResponseHandler () = default;
  virtual ~POA_TAO_AMH_childResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_childHandler;
typedef POA_AMI_childHandler *POA_AMI_childHandler_ptr;

class _TAO_AMI_childHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_childHandler
  : public virtual POA_AMI_motherHandler,
    public virtual POA_AMI_fatherHandler
{
protected:
  POA_AMI_childHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_childHandler _stub_type;
  typedef ::AMI_childHandler_ptr _stub_ptr_type;
  typedef ::AMI_childHandler_var _stub_var_type;

  POA_AMI_childHandler (const POA_AMI_childHandler& rhs);
  virtual ~POA_AMI_childHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_childHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_childHandler_Direct_Proxy_Impl
  : public virtual ::_TAO_AMI_motherHandler_Direct_Proxy_Impl,
    public virtual ::_TAO_AMI_fatherHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_childHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH__cxx_try;
typedef POA_AMH__cxx_try *POA_AMH__cxx_try_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH__cxx_try
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH__cxx_try ();

public:
  POA_AMH__cxx_try (const POA_AMH__cxx_try& rhs);
  virtual ~POA_AMH__cxx_try () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  _cxx_try *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA__cxx_try;
typedef POA__cxx_try *POA__cxx_try_ptr;

class _TAO__cxx_try_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA__cxx_try
  : public virtual PortableServer::ServantBase
{
protected:
  POA__cxx_try ();

public:
  /// Useful for template programming.
  typedef ::_cxx_try _stub_type;
  typedef ::_cxx_try_ptr _stub_ptr_type;
  typedef ::_cxx_try_var _stub_var_type;

  POA__cxx_try (const POA__cxx_try& rhs);
  virtual ~POA__cxx_try () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::_cxx_try *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO__cxx_try_Direct_Proxy_Impl
{
public:
  virtual ~_TAO__cxx_try_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH__cxx_tryResponseHandler;
typedef POA_TAO_AMH__cxx_tryResponseHandler *POA_TAO_AMH__cxx_tryResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH__cxx_tryResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH__cxx_tryResponseHandler
{
public:
  POA_TAO_AMH__cxx_tryResponseHandler () = default;
  virtual ~POA_TAO_AMH__cxx_tryResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI__cxx_tryHandler;
typedef POA_AMI__cxx_tryHandler *POA_AMI__cxx_tryHandler_ptr;

class _TAO_AMI__cxx_tryHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI__cxx_tryHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI__cxx_tryHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI__cxx_tryHandler _stub_type;
  typedef ::AMI__cxx_tryHandler_ptr _stub_ptr_type;
  typedef ::AMI__cxx_tryHandler_var _stub_var_type;

  POA_AMI__cxx_tryHandler (const POA_AMI__cxx_tryHandler& rhs);
  virtual ~POA_AMI__cxx_tryHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI__cxx_tryHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI__cxx_tryHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI__cxx_tryHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_later_user;
typedef POA_AMH_later_user *POA_AMH_later_user_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_later_user
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_later_user ();

public:
  POA_AMH_later_user (const POA_AMH_later_user& rhs);
  virtual ~POA_AMH_later_user () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  later_user *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void op_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void op (
    AMH_later_userResponseHandler_ptr _tao_rh,
    ::later_ptr inarg,
    ::later_ptr inoutarg
  ) = 0;

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void op2_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void op2 (
    AMH_later_userResponseHandler_ptr _tao_rh,
    ::Bool inarg2
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_later_user;
typedef POA_later_user *POA_later_user_ptr;

class _TAO_later_user_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_later_user
  : public virtual PortableServer::ServantBase
{
protected:
  POA_later_user ();

public:
  /// Useful for template programming.
  typedef ::later_user _stub_type;
  typedef ::later_user_ptr _stub_ptr_type;
  typedef ::later_user_var _stub_var_type;

  POA_later_user (const POA_later_user& rhs);
  virtual ~POA_later_user () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::later_user *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::later_ptr op (
    ::later_ptr inarg,
    ::later_ptr & inoutarg,
    ::later_out outarg) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op2 (
    ::Bool inarg2) = 0;

  static void op2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_later_user_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_later_user_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op2 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_later_userResponseHandler;
typedef POA_TAO_AMH_later_userResponseHandler *POA_TAO_AMH_later_userResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_later_userResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_later_userResponseHandler
{
public:
  POA_TAO_AMH_later_userResponseHandler () = default;
  virtual ~POA_TAO_AMH_later_userResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op (
    ::later_ptr return_value,
    ::later_ptr inoutarg,
    ::later_ptr outarg) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op_excep (
    ::AMH_later_userExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op2 () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op2_excep (
    ::AMH_later_userExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_later_userHandler;
typedef POA_AMI_later_userHandler *POA_AMI_later_userHandler_ptr;

class _TAO_AMI_later_userHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_later_userHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_later_userHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_later_userHandler _stub_type;
  typedef ::AMI_later_userHandler_ptr _stub_ptr_type;
  typedef ::AMI_later_userHandler_var _stub_var_type;

  POA_AMI_later_userHandler (const POA_AMI_later_userHandler& rhs);
  virtual ~POA_AMI_later_userHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_later_userHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op (
    ::later_ptr ami_return_val,
    ::later_ptr inoutarg,
    ::later_ptr outarg) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void op_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op2 () = 0;

  static void op2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op2_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void op2_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_later_userHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_later_userHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op2 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op2_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_later;
typedef POA_AMH_later *POA_AMH_later_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_later
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_later ();

public:
  POA_AMH_later (const POA_AMH_later& rhs);
  virtual ~POA_AMH_later () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  later *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_later;
typedef POA_later *POA_later_ptr;

class _TAO_later_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_later
  : public virtual PortableServer::ServantBase
{
protected:
  POA_later ();

public:
  /// Useful for template programming.
  typedef ::later _stub_type;
  typedef ::later_ptr _stub_ptr_type;
  typedef ::later_var _stub_var_type;

  POA_later (const POA_later& rhs);
  virtual ~POA_later () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::later *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_later_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_later_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_laterResponseHandler;
typedef POA_TAO_AMH_laterResponseHandler *POA_TAO_AMH_laterResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_laterResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_laterResponseHandler
{
public:
  POA_TAO_AMH_laterResponseHandler () = default;
  virtual ~POA_TAO_AMH_laterResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_laterHandler;
typedef POA_AMI_laterHandler *POA_AMI_laterHandler_ptr;

class _TAO_AMI_laterHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_laterHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_laterHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_laterHandler _stub_type;
  typedef ::AMI_laterHandler_ptr _stub_ptr_type;
  typedef ::AMI_laterHandler_var _stub_var_type;

  POA_AMI_laterHandler (const POA_AMI_laterHandler& rhs);
  virtual ~POA_AMI_laterHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_laterHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_laterHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_laterHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_Begin;
typedef POA_AMH_Begin *POA_AMH_Begin_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_Begin
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_Begin ();

public:
  POA_AMH_Begin (const POA_AMH_Begin& rhs);
  virtual ~POA_AMH_Begin () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  Begin *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_Begin;
typedef POA_Begin *POA_Begin_ptr;

class _TAO_Begin_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_Begin
  : public virtual PortableServer::ServantBase
{
protected:
  POA_Begin ();

public:
  /// Useful for template programming.
  typedef ::Begin _stub_type;
  typedef ::Begin_ptr _stub_ptr_type;
  typedef ::Begin_var _stub_var_type;

  POA_Begin (const POA_Begin& rhs);
  virtual ~POA_Begin () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Begin *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_Begin_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_Begin_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_BeginResponseHandler;
typedef POA_TAO_AMH_BeginResponseHandler *POA_TAO_AMH_BeginResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_BeginResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_BeginResponseHandler
{
public:
  POA_TAO_AMH_BeginResponseHandler () = default;
  virtual ~POA_TAO_AMH_BeginResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_BeginHandler;
typedef POA_AMI_BeginHandler *POA_AMI_BeginHandler_ptr;

class _TAO_AMI_BeginHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_BeginHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_BeginHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_BeginHandler _stub_type;
  typedef ::AMI_BeginHandler_ptr _stub_ptr_type;
  typedef ::AMI_BeginHandler_var _stub_var_type;

  POA_AMI_BeginHandler (const POA_AMI_BeginHandler& rhs);
  virtual ~POA_AMI_BeginHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_BeginHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_BeginHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_BeginHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_Middle;
typedef POA_AMH_Middle *POA_AMH_Middle_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_Middle
  : public virtual POA_AMH_Begin
    
{
protected:
  POA_AMH_Middle ();

public:
  POA_AMH_Middle (const POA_AMH_Middle& rhs);
  virtual ~POA_AMH_Middle () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  Middle *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_Middle;
typedef POA_Middle *POA_Middle_ptr;

class _TAO_Middle_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_Middle
  : public virtual POA_Begin
{
protected:
  POA_Middle ();

public:
  /// Useful for template programming.
  typedef ::Middle _stub_type;
  typedef ::Middle_ptr _stub_ptr_type;
  typedef ::Middle_var _stub_var_type;

  POA_Middle (const POA_Middle& rhs);
  virtual ~POA_Middle () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Middle *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_Middle_Direct_Proxy_Impl
  : public virtual ::_TAO_Begin_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_Middle_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_MiddleResponseHandler;
typedef POA_TAO_AMH_MiddleResponseHandler *POA_TAO_AMH_MiddleResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_MiddleResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_MiddleResponseHandler
{
public:
  POA_TAO_AMH_MiddleResponseHandler () = default;
  virtual ~POA_TAO_AMH_MiddleResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_MiddleHandler;
typedef POA_AMI_MiddleHandler *POA_AMI_MiddleHandler_ptr;

class _TAO_AMI_MiddleHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_MiddleHandler
  : public virtual POA_AMI_BeginHandler
{
protected:
  POA_AMI_MiddleHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_MiddleHandler _stub_type;
  typedef ::AMI_MiddleHandler_ptr _stub_ptr_type;
  typedef ::AMI_MiddleHandler_var _stub_var_type;

  POA_AMI_MiddleHandler (const POA_AMI_MiddleHandler& rhs);
  virtual ~POA_AMI_MiddleHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_MiddleHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_MiddleHandler_Direct_Proxy_Impl
  : public virtual ::_TAO_AMI_BeginHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_MiddleHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_End;
typedef POA_AMH_End *POA_AMH_End_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_End
  : public virtual POA_AMH_Middle
    
{
protected:
  POA_AMH_End ();

public:
  POA_AMH_End (const POA_AMH_End& rhs);
  virtual ~POA_AMH_End () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  End *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_End;
typedef POA_End *POA_End_ptr;

class _TAO_End_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_End
  : public virtual POA_Middle
{
protected:
  POA_End ();

public:
  /// Useful for template programming.
  typedef ::End _stub_type;
  typedef ::End_ptr _stub_ptr_type;
  typedef ::End_var _stub_var_type;

  POA_End (const POA_End& rhs);
  virtual ~POA_End () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::End *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_End_Direct_Proxy_Impl
  : public virtual ::_TAO_Middle_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_End_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_EndResponseHandler;
typedef POA_TAO_AMH_EndResponseHandler *POA_TAO_AMH_EndResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_EndResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_EndResponseHandler
{
public:
  POA_TAO_AMH_EndResponseHandler () = default;
  virtual ~POA_TAO_AMH_EndResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_EndHandler;
typedef POA_AMI_EndHandler *POA_AMI_EndHandler_ptr;

class _TAO_AMI_EndHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_EndHandler
  : public virtual POA_AMI_MiddleHandler
{
protected:
  POA_AMI_EndHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_EndHandler _stub_type;
  typedef ::AMI_EndHandler_ptr _stub_ptr_type;
  typedef ::AMI_EndHandler_var _stub_var_type;

  POA_AMI_EndHandler (const POA_AMI_EndHandler& rhs);
  virtual ~POA_AMI_EndHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_EndHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_EndHandler_Direct_Proxy_Impl
  : public virtual ::_TAO_AMI_MiddleHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_EndHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_Client;
typedef POA_AMH_Client *POA_AMH_Client_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_Client
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_Client ();

public:
  POA_AMH_Client (const POA_AMH_Client& rhs);
  virtual ~POA_AMH_Client () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  Client *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void _get_v_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void v (
    AMH_ClientResponseHandler_ptr _tao_rh
  ) = 0;

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void _set_v_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void v (
    AMH_ClientResponseHandler_ptr _tao_rh,
    ::Begin::Value v
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_Client;
typedef POA_Client *POA_Client_ptr;

class _TAO_Client_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_Client
  : public virtual PortableServer::ServantBase
{
protected:
  POA_Client ();

public:
  /// Useful for template programming.
  typedef ::Client _stub_type;
  typedef ::Client_ptr _stub_ptr_type;
  typedef ::Client_var _stub_var_type;

  POA_Client (const POA_Client& rhs);
  virtual ~POA_Client () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Client *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::Begin::Value v () = 0;

  static void _get_v_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void v (
    ::Begin::Value v) = 0;

  static void _set_v_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_Client_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_Client_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _get_v (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _set_v (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_ClientResponseHandler;
typedef POA_TAO_AMH_ClientResponseHandler *POA_TAO_AMH_ClientResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_ClientResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_ClientResponseHandler
{
public:
  POA_TAO_AMH_ClientResponseHandler () = default;
  virtual ~POA_TAO_AMH_ClientResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_v (
    ::Begin::Value return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_v_excep (
    ::AMH_ClientExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_v () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_v_excep (
    ::AMH_ClientExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_ClientHandler;
typedef POA_AMI_ClientHandler *POA_AMI_ClientHandler_ptr;

class _TAO_AMI_ClientHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_ClientHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_ClientHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_ClientHandler _stub_type;
  typedef ::AMI_ClientHandler_ptr _stub_ptr_type;
  typedef ::AMI_ClientHandler_var _stub_var_type;

  POA_AMI_ClientHandler (const POA_AMI_ClientHandler& rhs);
  virtual ~POA_AMI_ClientHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_ClientHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_v (
    ::Begin::Value ami_return_val) = 0;

  static void get_v_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_v_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void get_v_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_v () = 0;

  static void set_v_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_v_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void set_v_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_ClientHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_ClientHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_v (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_v_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_v (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_v_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_AttributeTester;
typedef POA_AMH_AttributeTester *POA_AMH_AttributeTester_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_AttributeTester
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_AttributeTester ();

public:
  POA_AMH_AttributeTester (const POA_AMH_AttributeTester& rhs);
  virtual ~POA_AMH_AttributeTester () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  AttributeTester *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void _get_a_su_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void a_su (
    AMH_AttributeTesterResponseHandler_ptr _tao_rh
  ) = 0;

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void _set_a_su_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void a_su (
    AMH_AttributeTesterResponseHandler_ptr _tao_rh,
    const char * a_su
  ) = 0;

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void _get_a_sb_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void a_sb (
    AMH_AttributeTesterResponseHandler_ptr _tao_rh
  ) = 0;

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void _set_a_sb_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void a_sb (
    AMH_AttributeTesterResponseHandler_ptr _tao_rh,
    const ::AttributeTester::string_1 a_sb
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AttributeTester;
typedef POA_AttributeTester *POA_AttributeTester_ptr;

class _TAO_AttributeTester_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AttributeTester
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AttributeTester ();

public:
  /// Useful for template programming.
  typedef ::AttributeTester _stub_type;
  typedef ::AttributeTester_ptr _stub_ptr_type;
  typedef ::AttributeTester_var _stub_var_type;

  POA_AttributeTester (const POA_AttributeTester& rhs);
  virtual ~POA_AttributeTester () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AttributeTester *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual char * a_su () = 0;

  static void _get_a_su_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void a_su (
    const char * a_su) = 0;

  static void _set_a_su_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::AttributeTester::string_1_slice * a_sb () = 0;

  static void _get_a_sb_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void a_sb (
    const ::AttributeTester::string_1 a_sb) = 0;

  static void _set_a_sb_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AttributeTester_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AttributeTester_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _get_a_su (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _set_a_su (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _get_a_sb (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _set_a_sb (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_AttributeTesterResponseHandler;
typedef POA_TAO_AMH_AttributeTesterResponseHandler *POA_TAO_AMH_AttributeTesterResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_AttributeTesterResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_AttributeTesterResponseHandler
{
public:
  POA_TAO_AMH_AttributeTesterResponseHandler () = default;
  virtual ~POA_TAO_AMH_AttributeTesterResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_a_su (
    const char * return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_a_su_excep (
    ::AMH_AttributeTesterExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_a_su () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_a_su_excep (
    ::AMH_AttributeTesterExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_a_sb (
    const ::AttributeTester::string_1 return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_a_sb_excep (
    ::AMH_AttributeTesterExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_a_sb () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_a_sb_excep (
    ::AMH_AttributeTesterExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_AttributeTesterHandler;
typedef POA_AMI_AttributeTesterHandler *POA_AMI_AttributeTesterHandler_ptr;

class _TAO_AMI_AttributeTesterHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_AttributeTesterHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_AttributeTesterHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_AttributeTesterHandler _stub_type;
  typedef ::AMI_AttributeTesterHandler_ptr _stub_ptr_type;
  typedef ::AMI_AttributeTesterHandler_var _stub_var_type;

  POA_AMI_AttributeTesterHandler (const POA_AMI_AttributeTesterHandler& rhs);
  virtual ~POA_AMI_AttributeTesterHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_AttributeTesterHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_a_su (
    const char * ami_return_val) = 0;

  static void get_a_su_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_a_su_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void get_a_su_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_a_su () = 0;

  static void set_a_su_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_a_su_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void set_a_su_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_a_sb (
    const ::AttributeTester::string_1 ami_return_val) = 0;

  static void get_a_sb_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_a_sb_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void get_a_sb_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_a_sb () = 0;

  static void set_a_sb_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_a_sb_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void set_a_sb_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_AttributeTesterHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_AttributeTesterHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_a_su (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_a_su_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_a_su (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_a_su_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_a_sb (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_a_sb_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_a_sb (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_a_sb_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_ParamMod
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_ParameterTester;
  typedef AMH_ParameterTester *AMH_ParameterTester_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_ParameterTester
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_ParameterTester ();
  
  public:
    AMH_ParameterTester (const AMH_ParameterTester& rhs);
    virtual ~AMH_ParameterTester () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    ParamMod::ParameterTester *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void parameter_tester_op_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void parameter_tester_op (
      ParamMod::AMH_ParameterTesterResponseHandler_ptr _tao_rh,
      const ::ParamMod::ParameterTester::object_struct_type & inarg,
      const ::ParamMod::ParameterTester::object_array_type inoutarg
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class ParameterTester;
typedef ParameterTester *ParameterTester_ptr;

class _TAO_ParameterTester_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export ParameterTester
  : public virtual PortableServer::ServantBase
{
protected:
  ParameterTester ();

public:
  /// Useful for template programming.
  typedef ::ParamMod::ParameterTester _stub_type;
  typedef ::ParamMod::ParameterTester_ptr _stub_ptr_type;
  typedef ::ParamMod::ParameterTester_var _stub_var_type;

  ParameterTester (const ParameterTester& rhs);
  virtual ~ParameterTester () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::ParamMod::ParameterTester *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::ParamMod::ParameterTester::object_seq_type * parameter_tester_op (
    const ::ParamMod::ParameterTester::object_struct_type & inarg,
    ::ParamMod::ParameterTester::object_array_type inoutarg,
    ::ParamMod::ParameterTester::object_union_type_out outarg) = 0;

  static void parameter_tester_op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_ParameterTester_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_ParameterTester_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  parameter_tester_op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_ParameterTesterResponseHandler;
typedef TAO_AMH_ParameterTesterResponseHandler *TAO_AMH_ParameterTesterResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_ParameterTesterResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::ParamMod::AMH_ParameterTesterResponseHandler
{
public:
  TAO_AMH_ParameterTesterResponseHandler () = default;
  virtual ~TAO_AMH_ParameterTesterResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void parameter_tester_op (
    const ::ParamMod::ParameterTester::object_seq_type & return_value,
    const ::ParamMod::ParameterTester::object_array_type inoutarg,
    const ::ParamMod::ParameterTester::object_union_type & outarg) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void parameter_tester_op_excep (
    ::ParamMod::AMH_ParameterTesterExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_ParameterTesterHandler;
typedef AMI_ParameterTesterHandler *AMI_ParameterTesterHandler_ptr;

class _TAO_AMI_ParameterTesterHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_ParameterTesterHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_ParameterTesterHandler ();

public:
  /// Useful for template programming.
  typedef ::ParamMod::AMI_ParameterTesterHandler _stub_type;
  typedef ::ParamMod::AMI_ParameterTesterHandler_ptr _stub_ptr_type;
  typedef ::ParamMod::AMI_ParameterTesterHandler_var _stub_var_type;

  AMI_ParameterTesterHandler (const AMI_ParameterTesterHandler& rhs);
  virtual ~AMI_ParameterTesterHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::ParamMod::AMI_ParameterTesterHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void parameter_tester_op (
    const ::ParamMod::ParameterTester::object_seq_type & ami_return_val,
    const ::ParamMod::ParameterTester::object_array_type inoutarg,
    const ::ParamMod::ParameterTester::object_union_type & outarg) = 0;

  static void parameter_tester_op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void parameter_tester_op_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void parameter_tester_op_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_ParameterTesterHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_ParameterTesterHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  parameter_tester_op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  parameter_tester_op_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module ParamMod
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_A;
typedef POA_AMH_A *POA_AMH_A_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_A
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_A ();

public:
  POA_AMH_A (const POA_AMH_A& rhs);
  virtual ~POA_AMH_A () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  A *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_A;
typedef POA_A *POA_A_ptr;

class _TAO_A_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_A
  : public virtual PortableServer::ServantBase
{
protected:
  POA_A ();

public:
  /// Useful for template programming.
  typedef ::A _stub_type;
  typedef ::A_ptr _stub_ptr_type;
  typedef ::A_var _stub_var_type;

  POA_A (const POA_A& rhs);
  virtual ~POA_A () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::A *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_A_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_A_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_AResponseHandler;
typedef POA_TAO_AMH_AResponseHandler *POA_TAO_AMH_AResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_AResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_AResponseHandler
{
public:
  POA_TAO_AMH_AResponseHandler () = default;
  virtual ~POA_TAO_AMH_AResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_AHandler;
typedef POA_AMI_AHandler *POA_AMI_AHandler_ptr;

class _TAO_AMI_AHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_AHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_AHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_AHandler _stub_type;
  typedef ::AMI_AHandler_ptr _stub_ptr_type;
  typedef ::AMI_AHandler_var _stub_var_type;

  POA_AMI_AHandler (const POA_AMI_AHandler& rhs);
  virtual ~POA_AMI_AHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_AHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_AHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_AHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_M
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module M
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_M
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_A;
  typedef AMH_A *AMH_A_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_A
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_A ();
  
  public:
    AMH_A (const AMH_A& rhs);
    virtual ~AMH_A () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    M::A *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class A;
typedef A *A_ptr;

class _TAO_A_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export A
  : public virtual PortableServer::ServantBase
{
protected:
  A ();

public:
  /// Useful for template programming.
  typedef ::M::A _stub_type;
  typedef ::M::A_ptr _stub_ptr_type;
  typedef ::M::A_var _stub_var_type;

  A (const A& rhs);
  virtual ~A () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::M::A *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_A_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_A_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_AResponseHandler;
typedef TAO_AMH_AResponseHandler *TAO_AMH_AResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_AResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::M::AMH_AResponseHandler
{
public:
  TAO_AMH_AResponseHandler () = default;
  virtual ~TAO_AMH_AResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_AHandler;
typedef AMI_AHandler *AMI_AHandler_ptr;

class _TAO_AMI_AHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_AHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_AHandler ();

public:
  /// Useful for template programming.
  typedef ::M::AMI_AHandler _stub_type;
  typedef ::M::AMI_AHandler_ptr _stub_ptr_type;
  typedef ::M::AMI_AHandler_var _stub_var_type;

  AMI_AHandler (const AMI_AHandler& rhs);
  virtual ~AMI_AHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::M::AMI_AHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_AHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_AHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module M
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_i1
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_if1;
  typedef AMH_if1 *AMH_if1_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_if1
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_if1 ();
  
  public:
    AMH_if1 (const AMH_if1& rhs);
    virtual ~AMH_if1 () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    i1::if1 *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void getStr_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void getStr (
      i1::AMH_if1ResponseHandler_ptr _tao_rh
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class if1;
typedef if1 *if1_ptr;

class _TAO_if1_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export if1
  : public virtual PortableServer::ServantBase
{
protected:
  if1 ();

public:
  /// Useful for template programming.
  typedef ::i1::if1 _stub_type;
  typedef ::i1::if1_ptr _stub_ptr_type;
  typedef ::i1::if1_var _stub_var_type;

  if1 (const if1& rhs);
  virtual ~if1 () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::i1::if1 *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual char * getStr () = 0;

  static void getStr_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_if1_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_if1_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getStr (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_if1ResponseHandler;
typedef TAO_AMH_if1ResponseHandler *TAO_AMH_if1ResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_if1ResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::i1::AMH_if1ResponseHandler
{
public:
  TAO_AMH_if1ResponseHandler () = default;
  virtual ~TAO_AMH_if1ResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void getStr (
    const char * return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void getStr_excep (
    ::i1::AMH_if1ExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_if1Handler;
typedef AMI_if1Handler *AMI_if1Handler_ptr;

class _TAO_AMI_if1Handler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_if1Handler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_if1Handler ();

public:
  /// Useful for template programming.
  typedef ::i1::AMI_if1Handler _stub_type;
  typedef ::i1::AMI_if1Handler_ptr _stub_ptr_type;
  typedef ::i1::AMI_if1Handler_var _stub_var_type;

  AMI_if1Handler (const AMI_if1Handler& rhs);
  virtual ~AMI_if1Handler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::i1::AMI_if1Handler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void getStr (
    const char * ami_return_val) = 0;

  static void getStr_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void getStr_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void getStr_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_if1Handler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_if1Handler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getStr (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getStr_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module i1
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_i2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_if2;
  typedef AMH_if2 *AMH_if2_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_if2
    : public virtual POA_i1::AMH_if1
      
  {
  protected:
    AMH_if2 ();
  
  public:
    AMH_if2 (const AMH_if2& rhs);
    virtual ~AMH_if2 () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    i2::if2 *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void getstr2_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void getstr2 (
      i2::AMH_if2ResponseHandler_ptr _tao_rh
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class if2;
typedef if2 *if2_ptr;

class _TAO_if2_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export if2
  : public virtual POA_i1::if1
{
protected:
  if2 ();

public:
  /// Useful for template programming.
  typedef ::i2::if2 _stub_type;
  typedef ::i2::if2_ptr _stub_ptr_type;
  typedef ::i2::if2_var _stub_var_type;

  if2 (const if2& rhs);
  virtual ~if2 () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::i2::if2 *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual char * getstr2 () = 0;

  static void getstr2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_if2_Direct_Proxy_Impl
  : public virtual ::POA_i1::_TAO_if1_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_if2_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getstr2 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_if2ResponseHandler;
typedef TAO_AMH_if2ResponseHandler *TAO_AMH_if2ResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_if2ResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::i2::AMH_if2ResponseHandler
{
public:
  TAO_AMH_if2ResponseHandler () = default;
  virtual ~TAO_AMH_if2ResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void getstr2 (
    const char * return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void getstr2_excep (
    ::i2::AMH_if2ExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_if2Handler;
typedef AMI_if2Handler *AMI_if2Handler_ptr;

class _TAO_AMI_if2Handler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_if2Handler
  : public virtual POA_i1::AMI_if1Handler
{
protected:
  AMI_if2Handler ();

public:
  /// Useful for template programming.
  typedef ::i2::AMI_if2Handler _stub_type;
  typedef ::i2::AMI_if2Handler_ptr _stub_ptr_type;
  typedef ::i2::AMI_if2Handler_var _stub_var_type;

  AMI_if2Handler (const AMI_if2Handler& rhs);
  virtual ~AMI_if2Handler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::i2::AMI_if2Handler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void getstr2 (
    const char * ami_return_val) = 0;

  static void getstr2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void getstr2_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void getstr2_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_if2Handler_Direct_Proxy_Impl
  : public virtual ::POA_i1::_TAO_AMI_if1Handler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_if2Handler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getstr2 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getstr2_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class AMH_if3;
typedef AMH_if3 *AMH_if3_ptr;

class TAO_IDL_TEST_STUB_Export AMH_if3
  : public virtual POA_i2::AMH_if2
    
{
protected:
  AMH_if3 ();

public:
  AMH_if3 (const AMH_if3& rhs);
  virtual ~AMH_if3 () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  i2::if3 *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void getstr3_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void getstr3 (
    i2::AMH_if3ResponseHandler_ptr _tao_rh
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class if3;
typedef if3 *if3_ptr;

class _TAO_if3_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export if3
  : public virtual POA_i2::if2
{
protected:
  if3 ();

public:
  /// Useful for template programming.
  typedef ::i2::if3 _stub_type;
  typedef ::i2::if3_ptr _stub_ptr_type;
  typedef ::i2::if3_var _stub_var_type;

  if3 (const if3& rhs);
  virtual ~if3 () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::i2::if3 *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual char * getstr3 () = 0;

  static void getstr3_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_if3_Direct_Proxy_Impl
  : public virtual ::POA_i2::_TAO_if2_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_if3_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getstr3 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_if3ResponseHandler;
typedef TAO_AMH_if3ResponseHandler *TAO_AMH_if3ResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_if3ResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::i2::AMH_if3ResponseHandler
{
public:
  TAO_AMH_if3ResponseHandler () = default;
  virtual ~TAO_AMH_if3ResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void getstr3 (
    const char * return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void getstr3_excep (
    ::i2::AMH_if3ExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_if3Handler;
typedef AMI_if3Handler *AMI_if3Handler_ptr;

class _TAO_AMI_if3Handler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_if3Handler
  : public virtual POA_i2::AMI_if2Handler
{
protected:
  AMI_if3Handler ();

public:
  /// Useful for template programming.
  typedef ::i2::AMI_if3Handler _stub_type;
  typedef ::i2::AMI_if3Handler_ptr _stub_ptr_type;
  typedef ::i2::AMI_if3Handler_var _stub_var_type;

  AMI_if3Handler (const AMI_if3Handler& rhs);
  virtual ~AMI_if3Handler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::i2::AMI_if3Handler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void getstr3 (
    const char * ami_return_val) = 0;

  static void getstr3_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void getstr3_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void getstr3_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_if3Handler_Direct_Proxy_Impl
  : public virtual ::POA_i2::_TAO_AMI_if2Handler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_if3Handler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getstr3 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getstr3_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module i2
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_redefs
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_base;
  typedef AMH_base *AMH_base_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_base
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_base ();
  
  public:
    AMH_base (const AMH_base& rhs);
    virtual ~AMH_base () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    redefs::base *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class base;
typedef base *base_ptr;

class _TAO_base_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export base
  : public virtual PortableServer::ServantBase
{
protected:
  base ();

public:
  /// Useful for template programming.
  typedef ::redefs::base _stub_type;
  typedef ::redefs::base_ptr _stub_ptr_type;
  typedef ::redefs::base_var _stub_var_type;

  base (const base& rhs);
  virtual ~base () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::redefs::base *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_base_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_base_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_baseResponseHandler;
typedef TAO_AMH_baseResponseHandler *TAO_AMH_baseResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_baseResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::redefs::AMH_baseResponseHandler
{
public:
  TAO_AMH_baseResponseHandler () = default;
  virtual ~TAO_AMH_baseResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_baseHandler;
typedef AMI_baseHandler *AMI_baseHandler_ptr;

class _TAO_AMI_baseHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_baseHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_baseHandler ();

public:
  /// Useful for template programming.
  typedef ::redefs::AMI_baseHandler _stub_type;
  typedef ::redefs::AMI_baseHandler_ptr _stub_ptr_type;
  typedef ::redefs::AMI_baseHandler_var _stub_var_type;

  AMI_baseHandler (const AMI_baseHandler& rhs);
  virtual ~AMI_baseHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::redefs::AMI_baseHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_baseHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_baseHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class AMH_derived;
typedef AMH_derived *AMH_derived_ptr;

class TAO_IDL_TEST_STUB_Export AMH_derived
  : public virtual POA_redefs::AMH_base
    
{
protected:
  AMH_derived ();

public:
  AMH_derived (const AMH_derived& rhs);
  virtual ~AMH_derived () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  redefs::derived *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class derived;
typedef derived *derived_ptr;

class _TAO_derived_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export derived
  : public virtual POA_redefs::base
{
protected:
  derived ();

public:
  /// Useful for template programming.
  typedef ::redefs::derived _stub_type;
  typedef ::redefs::derived_ptr _stub_ptr_type;
  typedef ::redefs::derived_var _stub_var_type;

  derived (const derived& rhs);
  virtual ~derived () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::redefs::derived *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_derived_Direct_Proxy_Impl
  : public virtual ::POA_redefs::_TAO_base_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_derived_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_derivedResponseHandler;
typedef TAO_AMH_derivedResponseHandler *TAO_AMH_derivedResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_derivedResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::redefs::AMH_derivedResponseHandler
{
public:
  TAO_AMH_derivedResponseHandler () = default;
  virtual ~TAO_AMH_derivedResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_derivedHandler;
typedef AMI_derivedHandler *AMI_derivedHandler_ptr;

class _TAO_AMI_derivedHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_derivedHandler
  : public virtual POA_redefs::AMI_baseHandler
{
protected:
  AMI_derivedHandler ();

public:
  /// Useful for template programming.
  typedef ::redefs::AMI_derivedHandler _stub_type;
  typedef ::redefs::AMI_derivedHandler_ptr _stub_ptr_type;
  typedef ::redefs::AMI_derivedHandler_var _stub_var_type;

  AMI_derivedHandler (const AMI_derivedHandler& rhs);
  virtual ~AMI_derivedHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::redefs::AMI_derivedHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_derivedHandler_Direct_Proxy_Impl
  : public virtual ::POA_redefs::_TAO_AMI_baseHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_derivedHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module redefs
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_Rec_Arg_Traits
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_base;
  typedef AMH_base *AMH_base_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_base
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_base ();
  
  public:
    AMH_base (const AMH_base& rhs);
    virtual ~AMH_base () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    Rec_Arg_Traits::base *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class base;
typedef base *base_ptr;

class _TAO_base_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export base
  : public virtual PortableServer::ServantBase
{
protected:
  base ();

public:
  /// Useful for template programming.
  typedef ::Rec_Arg_Traits::base _stub_type;
  typedef ::Rec_Arg_Traits::base_ptr _stub_ptr_type;
  typedef ::Rec_Arg_Traits::base_var _stub_var_type;

  base (const base& rhs);
  virtual ~base () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Rec_Arg_Traits::base *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_base_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_base_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_baseResponseHandler;
typedef TAO_AMH_baseResponseHandler *TAO_AMH_baseResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_baseResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::Rec_Arg_Traits::AMH_baseResponseHandler
{
public:
  TAO_AMH_baseResponseHandler () = default;
  virtual ~TAO_AMH_baseResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_baseHandler;
typedef AMI_baseHandler *AMI_baseHandler_ptr;

class _TAO_AMI_baseHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_baseHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_baseHandler ();

public:
  /// Useful for template programming.
  typedef ::Rec_Arg_Traits::AMI_baseHandler _stub_type;
  typedef ::Rec_Arg_Traits::AMI_baseHandler_ptr _stub_ptr_type;
  typedef ::Rec_Arg_Traits::AMI_baseHandler_var _stub_var_type;

  AMI_baseHandler (const AMI_baseHandler& rhs);
  virtual ~AMI_baseHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Rec_Arg_Traits::AMI_baseHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_baseHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_baseHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class AMH_derived;
typedef AMH_derived *AMH_derived_ptr;

class TAO_IDL_TEST_STUB_Export AMH_derived
  : public virtual POA_Rec_Arg_Traits::AMH_base
    
{
protected:
  AMH_derived ();

public:
  AMH_derived (const AMH_derived& rhs);
  virtual ~AMH_derived () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  Rec_Arg_Traits::derived *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void remove_task_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void remove_task (
    Rec_Arg_Traits::AMH_derivedResponseHandler_ptr _tao_rh,
    ::Rec_Arg_Traits::base::plan_stub_type_ptr listener
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class derived;
typedef derived *derived_ptr;

class _TAO_derived_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export derived
  : public virtual POA_Rec_Arg_Traits::base
{
protected:
  derived ();

public:
  /// Useful for template programming.
  typedef ::Rec_Arg_Traits::derived _stub_type;
  typedef ::Rec_Arg_Traits::derived_ptr _stub_ptr_type;
  typedef ::Rec_Arg_Traits::derived_var _stub_var_type;

  derived (const derived& rhs);
  virtual ~derived () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Rec_Arg_Traits::derived *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void remove_task (
    ::Rec_Arg_Traits::base::plan_stub_type_ptr listener) = 0;

  static void remove_task_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_derived_Direct_Proxy_Impl
  : public virtual ::POA_Rec_Arg_Traits::_TAO_base_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_derived_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  remove_task (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_derivedResponseHandler;
typedef TAO_AMH_derivedResponseHandler *TAO_AMH_derivedResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_derivedResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::Rec_Arg_Traits::AMH_derivedResponseHandler
{
public:
  TAO_AMH_derivedResponseHandler () = default;
  virtual ~TAO_AMH_derivedResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void remove_task () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void remove_task_excep (
    ::Rec_Arg_Traits::AMH_derivedExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_derivedHandler;
typedef AMI_derivedHandler *AMI_derivedHandler_ptr;

class _TAO_AMI_derivedHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_derivedHandler
  : public virtual POA_Rec_Arg_Traits::AMI_baseHandler
{
protected:
  AMI_derivedHandler ();

public:
  /// Useful for template programming.
  typedef ::Rec_Arg_Traits::AMI_derivedHandler _stub_type;
  typedef ::Rec_Arg_Traits::AMI_derivedHandler_ptr _stub_ptr_type;
  typedef ::Rec_Arg_Traits::AMI_derivedHandler_var _stub_var_type;

  AMI_derivedHandler (const AMI_derivedHandler& rhs);
  virtual ~AMI_derivedHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Rec_Arg_Traits::AMI_derivedHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void remove_task () = 0;

  static void remove_task_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void remove_task_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void remove_task_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_derivedHandler_Direct_Proxy_Impl
  : public virtual ::POA_Rec_Arg_Traits::_TAO_AMI_baseHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_derivedHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  remove_task (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  remove_task_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Rec_Arg_Traits
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_call_test
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_iTest;
  typedef AMH_iTest *AMH_iTest_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_iTest
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_iTest ();
  
  public:
    AMH_iTest (const AMH_iTest& rhs);
    virtual ~AMH_iTest () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    call_test::iTest *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void do_op_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void do_op (
      call_test::AMH_iTestResponseHandler_ptr _tao_rh,
      const char * call
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class iTest;
typedef iTest *iTest_ptr;

class _TAO_iTest_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export iTest
  : public virtual PortableServer::ServantBase
{
protected:
  iTest ();

public:
  /// Useful for template programming.
  typedef ::call_test::iTest _stub_type;
  typedef ::call_test::iTest_ptr _stub_ptr_type;
  typedef ::call_test::iTest_var _stub_var_type;

  iTest (const iTest& rhs);
  virtual ~iTest () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::call_test::iTest *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void do_op (
    const char * call) = 0;

  static void do_op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_iTest_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_iTest_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  do_op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_iTestResponseHandler;
typedef TAO_AMH_iTestResponseHandler *TAO_AMH_iTestResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_iTestResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::call_test::AMH_iTestResponseHandler
{
public:
  TAO_AMH_iTestResponseHandler () = default;
  virtual ~TAO_AMH_iTestResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void do_op () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void do_op_excep (
    ::call_test::AMH_iTestExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_iTestHandler;
typedef AMI_iTestHandler *AMI_iTestHandler_ptr;

class _TAO_AMI_iTestHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_iTestHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_iTestHandler ();

public:
  /// Useful for template programming.
  typedef ::call_test::AMI_iTestHandler _stub_type;
  typedef ::call_test::AMI_iTestHandler_ptr _stub_ptr_type;
  typedef ::call_test::AMI_iTestHandler_var _stub_var_type;

  AMI_iTestHandler (const AMI_iTestHandler& rhs);
  virtual ~AMI_iTestHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::call_test::AMI_iTestHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void do_op () = 0;

  static void do_op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void do_op_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void do_op_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_iTestHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_iTestHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  do_op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  do_op_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module call_test
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_call_attribute
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_iBar;
  typedef AMH_iBar *AMH_iBar_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_iBar
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_iBar ();
  
  public:
    AMH_iBar (const AMH_iBar& rhs);
    virtual ~AMH_iBar () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    call_attribute::iBar *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void _get_call_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void call (
      call_attribute::AMH_iBarResponseHandler_ptr _tao_rh
    ) = 0;
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void _set_call_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void call (
      call_attribute::AMH_iBarResponseHandler_ptr _tao_rh,
      const char * call
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class iBar;
typedef iBar *iBar_ptr;

class _TAO_iBar_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export iBar
  : public virtual PortableServer::ServantBase
{
protected:
  iBar ();

public:
  /// Useful for template programming.
  typedef ::call_attribute::iBar _stub_type;
  typedef ::call_attribute::iBar_ptr _stub_ptr_type;
  typedef ::call_attribute::iBar_var _stub_var_type;

  iBar (const iBar& rhs);
  virtual ~iBar () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::call_attribute::iBar *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual char * call () = 0;

  static void _get_call_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void call (
    const char * call) = 0;

  static void _set_call_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_iBar_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_iBar_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _get_call (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _set_call (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_iBarResponseHandler;
typedef TAO_AMH_iBarResponseHandler *TAO_AMH_iBarResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_iBarResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::call_attribute::AMH_iBarResponseHandler
{
public:
  TAO_AMH_iBarResponseHandler () = default;
  virtual ~TAO_AMH_iBarResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_call (
    const char * return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_call_excep (
    ::call_attribute::AMH_iBarExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_call () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_call_excep (
    ::call_attribute::AMH_iBarExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_iBarHandler;
typedef AMI_iBarHandler *AMI_iBarHandler_ptr;

class _TAO_AMI_iBarHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_iBarHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_iBarHandler ();

public:
  /// Useful for template programming.
  typedef ::call_attribute::AMI_iBarHandler _stub_type;
  typedef ::call_attribute::AMI_iBarHandler_ptr _stub_ptr_type;
  typedef ::call_attribute::AMI_iBarHandler_var _stub_var_type;

  AMI_iBarHandler (const AMI_iBarHandler& rhs);
  virtual ~AMI_iBarHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::call_attribute::AMI_iBarHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_call (
    const char * ami_return_val) = 0;

  static void get_call_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_call_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void get_call_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_call () = 0;

  static void set_call_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_call_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void set_call_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_iBarHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_iBarHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_call (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_call_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_call (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_call_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module call_attribute

#include "interfaceS_T.h"


#include /**/ "ace/post.h"

#endif /* ifndef */

