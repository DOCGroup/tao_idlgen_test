// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:148

#ifndef _TAO_IDL_DIF2C_LZDTHM_H_
#define _TAO_IDL_DIF2C_LZDTHM_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "TAO_IDL_TEST_stub_export.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Messaging/Messaging.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/BD_String_Argument_T.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 4 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_root/root_ch.cpp:155


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace OldDif2
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

  

#if !defined (_OLDDIF2_EX1__VAR_OUT_CH_)
#define _OLDDIF2_EX1__VAR_OUT_CH_

  class AMI_ex1Handler;
  typedef AMI_ex1Handler *AMI_ex1Handler_ptr;

  class ex1;
  using ex1_ptr = ex1*;
  using ex1_var = TAO_Objref_Var_T<ex1>;
  using ex1_out = TAO_Objref_Out_T<ex1>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

  

  class TAO_IDL_TEST_STUB_Export ex1
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ex1>;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = ex1_ptr;
    using _var_type = ex1_var;
    using _out_type = ex1_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ex1_ptr _duplicate (ex1_ptr obj);

    static void _tao_release (ex1_ptr obj);

    static ex1_ptr _narrow (::CORBA::Object_ptr obj);
    static ex1_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ex1_ptr _nil ();

    virtual void op0 ();

    virtual ::CORBA::Float op1 (
      ::CORBA::Float f,
      ::CORBA::Double_out d,
      ::CORBA::Long & l);

    virtual ::CORBA::Double op2 (
      ::CORBA::Double d,
      ::CORBA::Long_out l,
      ::CORBA::Short & s);

    virtual ::CORBA::Long op3 (
      ::CORBA::Long l,
      ::CORBA::Short_out s,
      ::CORBA::ULong & ul);

    virtual ::CORBA::Short op4 (
      ::CORBA::Short s,
      ::CORBA::ULong_out ul,
      ::CORBA::UShort & us);

    virtual ::CORBA::ULong op5 (
      ::CORBA::ULong & ul,
      ::CORBA::UShort us,
      ::CORBA::Char_out c,
      ::CORBA::Boolean b);

    virtual ::CORBA::UShort op6 (
      ::CORBA::UShort_out us,
      ::CORBA::Char & c);

    virtual void sendc_op0 (
      ::OldDif2::AMI_ex1Handler_ptr ami_handler);

    virtual void sendc_op1 (
      ::OldDif2::AMI_ex1Handler_ptr ami_handler,
      ::CORBA::Float f,
      ::CORBA::Long l);

    virtual void sendc_op2 (
      ::OldDif2::AMI_ex1Handler_ptr ami_handler,
      ::CORBA::Double d,
      ::CORBA::Short s);

    virtual void sendc_op3 (
      ::OldDif2::AMI_ex1Handler_ptr ami_handler,
      ::CORBA::Long l,
      ::CORBA::ULong ul);

    virtual void sendc_op4 (
      ::OldDif2::AMI_ex1Handler_ptr ami_handler,
      ::CORBA::Short s,
      ::CORBA::UShort us);

    virtual void sendc_op5 (
      ::OldDif2::AMI_ex1Handler_ptr ami_handler,
      ::CORBA::ULong ul,
      ::CORBA::UShort us,
      ::CORBA::Boolean b);

    virtual void sendc_op6 (
      ::OldDif2::AMI_ex1Handler_ptr ami_handler,
      ::CORBA::Char c);

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    static const char* _desc_repository_id ();
    static const char* _desc_interface_name ();
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ex1 ();

    // Concrete non-local interface only.
    ex1 (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ex1 (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~ex1 () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    ex1 (const ex1 &) = delete;
    ex1 (ex1 &&) = delete;
    ex1 &operator= (const ex1 &) = delete;
    ex1 &operator= (ex1 &&) = delete;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

  

#if !defined (_OLDDIF2_AMH_EX1EXCEPTIONHOLDER__VAR_OUT_CH_)
#define _OLDDIF2_AMH_EX1EXCEPTIONHOLDER__VAR_OUT_CH_

  class AMH_ex1ExceptionHolder;
  using AMH_ex1ExceptionHolder_var = TAO_Value_Var_T<AMH_ex1ExceptionHolder>;
  using AMH_ex1ExceptionHolder_out = TAO_Value_Out_T<AMH_ex1ExceptionHolder>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

  

  class TAO_IDL_TEST_STUB_Export AMH_ex1ExceptionHolder
    : public virtual ::CORBA::DefaultValueRefCountBase
  {
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = AMH_ex1ExceptionHolder*;
    using _var_type = AMH_ex1ExceptionHolder_var;
    using _out_type = AMH_ex1ExceptionHolder_out;

    static void _tao_any_destructor (void *);

    AMH_ex1ExceptionHolder (::CORBA::Exception *ex)
      : exception (ex)
    {}

    virtual ~AMH_ex1ExceptionHolder ();
    virtual ::CORBA::ValueBase *_copy_value ();

    static AMH_ex1ExceptionHolder* _downcast (::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        AMH_ex1ExceptionHolder *&new_object);
    
    virtual const char* _tao_obv_repository_id () const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id ();

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

    
  public:
    virtual void raise_op0 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op1 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op2 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op3 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op4 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op5 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op6 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op0 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op1 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op2 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op3 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op4 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op5 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op6 ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_ex1ExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_ex1ExceptionHolder (const AMH_ex1ExceptionHolder &);
  void operator= (const AMH_ex1ExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldDif2_AMH_ex1ExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldDif2_AMH_ex1ExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_AMH_EX1RESPONSEHANDLER__VAR_OUT_CH_)
#define _OLDDIF2_AMH_EX1RESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_ex1ResponseHandlerHandler;
typedef AMI_AMH_ex1ResponseHandlerHandler *AMI_AMH_ex1ResponseHandlerHandler_ptr;

class AMH_ex1ResponseHandler;
using AMH_ex1ResponseHandler_ptr = AMH_ex1ResponseHandler*;
using AMH_ex1ResponseHandler_var = TAO_Objref_Var_T<AMH_ex1ResponseHandler>;
using AMH_ex1ResponseHandler_out = TAO_Objref_Out_T<AMH_ex1ResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_ex1ResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_ex1ResponseHandler_ptr;
  using _var_type = AMH_ex1ResponseHandler_var;
  using _out_type = AMH_ex1ResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_ex1ResponseHandler_ptr _duplicate (AMH_ex1ResponseHandler_ptr obj);

  static void _tao_release (AMH_ex1ResponseHandler_ptr obj);

  static AMH_ex1ResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_ex1ResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_ex1ResponseHandler_ptr _nil ();

  virtual void op0 () = 0;

  virtual void op0_excep (
    ::OldDif2::AMH_ex1ExceptionHolder * holder) = 0;

  virtual void op1 (
    ::CORBA::Float return_value,
    ::CORBA::Double d,
    ::CORBA::Long l) = 0;

  virtual void op1_excep (
    ::OldDif2::AMH_ex1ExceptionHolder * holder) = 0;

  virtual void op2 (
    ::CORBA::Double return_value,
    ::CORBA::Long l,
    ::CORBA::Short s) = 0;

  virtual void op2_excep (
    ::OldDif2::AMH_ex1ExceptionHolder * holder) = 0;

  virtual void op3 (
    ::CORBA::Long return_value,
    ::CORBA::Short s,
    ::CORBA::ULong ul) = 0;

  virtual void op3_excep (
    ::OldDif2::AMH_ex1ExceptionHolder * holder) = 0;

  virtual void op4 (
    ::CORBA::Short return_value,
    ::CORBA::ULong ul,
    ::CORBA::UShort us) = 0;

  virtual void op4_excep (
    ::OldDif2::AMH_ex1ExceptionHolder * holder) = 0;

  virtual void op5 (
    ::CORBA::ULong return_value,
    ::CORBA::ULong ul,
    ::CORBA::Char c) = 0;

  virtual void op5_excep (
    ::OldDif2::AMH_ex1ExceptionHolder * holder) = 0;

  virtual void op6 (
    ::CORBA::UShort return_value,
    ::CORBA::UShort us,
    ::CORBA::Char c) = 0;

  virtual void op6_excep (
    ::OldDif2::AMH_ex1ExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_ex1ResponseHandler ();

  

  virtual ~AMH_ex1ResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_ex1ResponseHandler (const AMH_ex1ResponseHandler &) = delete;
  AMH_ex1ResponseHandler (AMH_ex1ResponseHandler &&) = delete;
  AMH_ex1ResponseHandler &operator= (const AMH_ex1ResponseHandler &) = delete;
  AMH_ex1ResponseHandler &operator= (AMH_ex1ResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_AMI_EX1HANDLER__VAR_OUT_CH_)
#define _OLDDIF2_AMI_EX1HANDLER__VAR_OUT_CH_

class AMI_ex1Handler;
using AMI_ex1Handler_ptr = AMI_ex1Handler*;
using AMI_ex1Handler_var = TAO_Objref_Var_T<AMI_ex1Handler>;
using AMI_ex1Handler_out = TAO_Objref_Out_T<AMI_ex1Handler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_ex1Handler
  : public virtual ::Messaging::ReplyHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_ex1Handler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_ex1Handler_ptr;
  using _var_type = AMI_ex1Handler_var;
  using _out_type = AMI_ex1Handler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_ex1Handler_ptr _duplicate (AMI_ex1Handler_ptr obj);

  static void _tao_release (AMI_ex1Handler_ptr obj);

  static AMI_ex1Handler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_ex1Handler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_ex1Handler_ptr _nil ();

  virtual void op0 ();

  static void
  op0_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op0_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op1 (
    ::CORBA::Float ami_return_val,
    ::CORBA::Double d,
    ::CORBA::Long l);

  static void
  op1_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op1_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op2 (
    ::CORBA::Double ami_return_val,
    ::CORBA::Long l,
    ::CORBA::Short s);

  static void
  op2_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op2_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op3 (
    ::CORBA::Long ami_return_val,
    ::CORBA::Short s,
    ::CORBA::ULong ul);

  static void
  op3_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op3_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op4 (
    ::CORBA::Short ami_return_val,
    ::CORBA::ULong ul,
    ::CORBA::UShort us);

  static void
  op4_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op4_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op5 (
    ::CORBA::ULong ami_return_val,
    ::CORBA::ULong ul,
    ::CORBA::Char c);

  static void
  op5_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op5_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op6 (
    ::CORBA::UShort ami_return_val,
    ::CORBA::UShort us,
    ::CORBA::Char c);

  static void
  op6_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op6_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_ex1Handler ();

  // Concrete non-local interface only.
  AMI_ex1Handler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_ex1Handler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_ex1Handler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_ex1Handler (const AMI_ex1Handler &) = delete;
  AMI_ex1Handler (AMI_ex1Handler &&) = delete;
  AMI_ex1Handler &operator= (const AMI_ex1Handler &) = delete;
  AMI_ex1Handler &operator= (AMI_ex1Handler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_EX2__VAR_OUT_CH_)
#define _OLDDIF2_EX2__VAR_OUT_CH_

class AMI_ex2Handler;
typedef AMI_ex2Handler *AMI_ex2Handler_ptr;

class ex2;
using ex2_ptr = ex2*;
using ex2_var = TAO_Objref_Var_T<ex2>;
using ex2_out = TAO_Objref_Out_T<ex2>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export ex2
  : public virtual ::OldDif2::ex1

{
public:
  friend class TAO::Narrow_Utils<ex2>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = ex2_ptr;
  using _var_type = ex2_var;
  using _out_type = ex2_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static ex2_ptr _duplicate (ex2_ptr obj);

  static void _tao_release (ex2_ptr obj);

  static ex2_ptr _narrow (::CORBA::Object_ptr obj);
  static ex2_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static ex2_ptr _nil ();

  virtual ::CORBA::Char op7 (
    ::CORBA::Char c,
    ::CORBA::Boolean_out b,
    ::CORBA::Octet & o);

  virtual ::CORBA::Boolean op8 (
    ::CORBA::Boolean_out b,
    ::CORBA::Octet o);

  virtual ::CORBA::Octet op9 (
    ::CORBA::Octet & o,
    ::CORBA::String_out s,
    const char * ls,
    ::CORBA::Long & l);

  virtual char * op10 (
    const char * s,
    ::CORBA::String_out ls);

  virtual char * op11 (
    char *& ls,
    ::CORBA::Long_out l);

  virtual ::CORBA::Long op12 (
    ::CORBA::Long l);

  virtual void sendc_op7 (
    ::OldDif2::AMI_ex2Handler_ptr ami_handler,
    ::CORBA::Char c,
    ::CORBA::Octet o);

  virtual void sendc_op8 (
    ::OldDif2::AMI_ex2Handler_ptr ami_handler,
    ::CORBA::Octet o);

  virtual void sendc_op9 (
    ::OldDif2::AMI_ex2Handler_ptr ami_handler,
    ::CORBA::Octet o,
    const char * ls,
    ::CORBA::Long l);

  virtual void sendc_op10 (
    ::OldDif2::AMI_ex2Handler_ptr ami_handler,
    const char * s);

  virtual void sendc_op11 (
    ::OldDif2::AMI_ex2Handler_ptr ami_handler,
    const char * ls);

  virtual void sendc_op12 (
    ::OldDif2::AMI_ex2Handler_ptr ami_handler,
    ::CORBA::Long l);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  ex2 ();

  // Concrete non-local interface only.
  ex2 (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  ex2 (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~ex2 () = default;

private:
  // Private and unimplemented for concrete interfaces.
  ex2 (const ex2 &) = delete;
  ex2 (ex2 &&) = delete;
  ex2 &operator= (const ex2 &) = delete;
  ex2 &operator= (ex2 &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_OLDDIF2_AMH_EX2EXCEPTIONHOLDER__VAR_OUT_CH_)
#define _OLDDIF2_AMH_EX2EXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_ex2ExceptionHolder;
using AMH_ex2ExceptionHolder_var = TAO_Value_Var_T<AMH_ex2ExceptionHolder>;
using AMH_ex2ExceptionHolder_out = TAO_Value_Out_T<AMH_ex2ExceptionHolder>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export AMH_ex2ExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_ex2ExceptionHolder*;
  using _var_type = AMH_ex2ExceptionHolder_var;
  using _out_type = AMH_ex2ExceptionHolder_out;

  static void _tao_any_destructor (void *);

  AMH_ex2ExceptionHolder (::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_ex2ExceptionHolder ();
  virtual ::CORBA::ValueBase *_copy_value ();

  static AMH_ex2ExceptionHolder* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_ex2ExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op7 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op8 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op9 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op10 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op11 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op12 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op7 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op8 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op9 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op10 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op11 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op12 ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_ex2ExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_ex2ExceptionHolder (const AMH_ex2ExceptionHolder &);
  void operator= (const AMH_ex2ExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldDif2_AMH_ex2ExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldDif2_AMH_ex2ExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_AMH_EX2RESPONSEHANDLER__VAR_OUT_CH_)
#define _OLDDIF2_AMH_EX2RESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_ex2ResponseHandlerHandler;
typedef AMI_AMH_ex2ResponseHandlerHandler *AMI_AMH_ex2ResponseHandlerHandler_ptr;

class AMH_ex2ResponseHandler;
using AMH_ex2ResponseHandler_ptr = AMH_ex2ResponseHandler*;
using AMH_ex2ResponseHandler_var = TAO_Objref_Var_T<AMH_ex2ResponseHandler>;
using AMH_ex2ResponseHandler_out = TAO_Objref_Out_T<AMH_ex2ResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_ex2ResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_ex2ResponseHandler_ptr;
  using _var_type = AMH_ex2ResponseHandler_var;
  using _out_type = AMH_ex2ResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_ex2ResponseHandler_ptr _duplicate (AMH_ex2ResponseHandler_ptr obj);

  static void _tao_release (AMH_ex2ResponseHandler_ptr obj);

  static AMH_ex2ResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_ex2ResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_ex2ResponseHandler_ptr _nil ();

  virtual void op7 (
    ::CORBA::Char return_value,
    ::CORBA::Boolean b,
    ::CORBA::Octet o) = 0;

  virtual void op7_excep (
    ::OldDif2::AMH_ex2ExceptionHolder * holder) = 0;

  virtual void op8 (
    ::CORBA::Boolean return_value,
    ::CORBA::Boolean b) = 0;

  virtual void op8_excep (
    ::OldDif2::AMH_ex2ExceptionHolder * holder) = 0;

  virtual void op9 (
    ::CORBA::Octet return_value,
    ::CORBA::Octet o,
    const char * s,
    ::CORBA::Long l) = 0;

  virtual void op9_excep (
    ::OldDif2::AMH_ex2ExceptionHolder * holder) = 0;

  virtual void op10 (
    const char * return_value,
    const char * ls) = 0;

  virtual void op10_excep (
    ::OldDif2::AMH_ex2ExceptionHolder * holder) = 0;

  virtual void op11 (
    const char * return_value,
    const char * ls,
    ::CORBA::Long l) = 0;

  virtual void op11_excep (
    ::OldDif2::AMH_ex2ExceptionHolder * holder) = 0;

  virtual void op12 (
    ::CORBA::Long return_value) = 0;

  virtual void op12_excep (
    ::OldDif2::AMH_ex2ExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_ex2ResponseHandler ();

  

  virtual ~AMH_ex2ResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_ex2ResponseHandler (const AMH_ex2ResponseHandler &) = delete;
  AMH_ex2ResponseHandler (AMH_ex2ResponseHandler &&) = delete;
  AMH_ex2ResponseHandler &operator= (const AMH_ex2ResponseHandler &) = delete;
  AMH_ex2ResponseHandler &operator= (AMH_ex2ResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_AMI_EX2HANDLER__VAR_OUT_CH_)
#define _OLDDIF2_AMI_EX2HANDLER__VAR_OUT_CH_

class AMI_ex2Handler;
using AMI_ex2Handler_ptr = AMI_ex2Handler*;
using AMI_ex2Handler_var = TAO_Objref_Var_T<AMI_ex2Handler>;
using AMI_ex2Handler_out = TAO_Objref_Out_T<AMI_ex2Handler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_ex2Handler
  : public virtual ::OldDif2::AMI_ex1Handler

{
public:
  friend class TAO::Narrow_Utils<AMI_ex2Handler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_ex2Handler_ptr;
  using _var_type = AMI_ex2Handler_var;
  using _out_type = AMI_ex2Handler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_ex2Handler_ptr _duplicate (AMI_ex2Handler_ptr obj);

  static void _tao_release (AMI_ex2Handler_ptr obj);

  static AMI_ex2Handler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_ex2Handler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_ex2Handler_ptr _nil ();

  virtual void op7 (
    ::CORBA::Char ami_return_val,
    ::CORBA::Boolean b,
    ::CORBA::Octet o);

  static void
  op7_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op7_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op8 (
    ::CORBA::Boolean ami_return_val,
    ::CORBA::Boolean b);

  static void
  op8_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op8_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op9 (
    ::CORBA::Octet ami_return_val,
    ::CORBA::Octet o,
    const char * s,
    ::CORBA::Long l);

  static void
  op9_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op9_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op10 (
    const char * ami_return_val,
    const char * ls);

  static void
  op10_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op10_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op11 (
    const char * ami_return_val,
    const char * ls,
    ::CORBA::Long l);

  static void
  op11_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op11_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op12 (
    ::CORBA::Long ami_return_val);

  static void
  op12_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op12_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_ex2Handler ();

  // Concrete non-local interface only.
  AMI_ex2Handler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_ex2Handler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_ex2Handler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_ex2Handler (const AMI_ex2Handler &) = delete;
  AMI_ex2Handler (AMI_ex2Handler &&) = delete;
  AMI_ex2Handler &operator= (const AMI_ex2Handler &) = delete;
  AMI_ex2Handler &operator= (AMI_ex2Handler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_EX3__VAR_OUT_CH_)
#define _OLDDIF2_EX3__VAR_OUT_CH_

class AMI_ex3Handler;
typedef AMI_ex3Handler *AMI_ex3Handler_ptr;

class ex3;
using ex3_ptr = ex3*;
using ex3_var = TAO_Objref_Var_T<ex3>;
using ex3_out = TAO_Objref_Out_T<ex3>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export ex3
  : public virtual ::OldDif2::ex1

{
public:
  friend class TAO::Narrow_Utils<ex3>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = ex3_ptr;
  using _var_type = ex3_var;
  using _out_type = ex3_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static ex3_ptr _duplicate (ex3_ptr obj);

  static void _tao_release (ex3_ptr obj);

  static ex3_ptr _narrow (::CORBA::Object_ptr obj);
  static ex3_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static ex3_ptr _nil ();

  virtual ::CORBA::Float float_attribute ();

  virtual ::CORBA::Double double_attribute ();

  virtual void double_attribute (
    ::CORBA::Double double_attribute);

  virtual ::CORBA::Long long_attribute ();

  virtual ::CORBA::Short short_attribute ();

  virtual void short_attribute (
    ::CORBA::Short short_attribute);

  virtual ::CORBA::ULong unsigned_long_attribute ();

  virtual void sendc_get_float_attribute (
    ::OldDif2::AMI_ex3Handler_ptr ami_handler);

  virtual void sendc_set_double_attribute (
    ::OldDif2::AMI_ex3Handler_ptr ami_handler,
    ::CORBA::Double double_attribute);

  virtual void sendc_get_double_attribute (
    ::OldDif2::AMI_ex3Handler_ptr ami_handler);

  virtual void sendc_get_long_attribute (
    ::OldDif2::AMI_ex3Handler_ptr ami_handler);

  virtual void sendc_set_short_attribute (
    ::OldDif2::AMI_ex3Handler_ptr ami_handler,
    ::CORBA::Short short_attribute);

  virtual void sendc_get_short_attribute (
    ::OldDif2::AMI_ex3Handler_ptr ami_handler);

  virtual void sendc_get_unsigned_long_attribute (
    ::OldDif2::AMI_ex3Handler_ptr ami_handler);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  ex3 ();

  // Concrete non-local interface only.
  ex3 (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  ex3 (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~ex3 () = default;

private:
  // Private and unimplemented for concrete interfaces.
  ex3 (const ex3 &) = delete;
  ex3 (ex3 &&) = delete;
  ex3 &operator= (const ex3 &) = delete;
  ex3 &operator= (ex3 &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_OLDDIF2_AMH_EX3EXCEPTIONHOLDER__VAR_OUT_CH_)
#define _OLDDIF2_AMH_EX3EXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_ex3ExceptionHolder;
using AMH_ex3ExceptionHolder_var = TAO_Value_Var_T<AMH_ex3ExceptionHolder>;
using AMH_ex3ExceptionHolder_out = TAO_Value_Out_T<AMH_ex3ExceptionHolder>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export AMH_ex3ExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_ex3ExceptionHolder*;
  using _var_type = AMH_ex3ExceptionHolder_var;
  using _out_type = AMH_ex3ExceptionHolder_out;

  static void _tao_any_destructor (void *);

  AMH_ex3ExceptionHolder (::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_ex3ExceptionHolder ();
  virtual ::CORBA::ValueBase *_copy_value ();

  static AMH_ex3ExceptionHolder* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_ex3ExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_float_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_double_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_set_double_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_long_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_short_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_set_short_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_unsigned_long_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_float_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_set_double_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_double_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_long_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_set_short_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_short_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_unsigned_long_attribute ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_ex3ExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_ex3ExceptionHolder (const AMH_ex3ExceptionHolder &);
  void operator= (const AMH_ex3ExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldDif2_AMH_ex3ExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldDif2_AMH_ex3ExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_AMH_EX3RESPONSEHANDLER__VAR_OUT_CH_)
#define _OLDDIF2_AMH_EX3RESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_ex3ResponseHandlerHandler;
typedef AMI_AMH_ex3ResponseHandlerHandler *AMI_AMH_ex3ResponseHandlerHandler_ptr;

class AMH_ex3ResponseHandler;
using AMH_ex3ResponseHandler_ptr = AMH_ex3ResponseHandler*;
using AMH_ex3ResponseHandler_var = TAO_Objref_Var_T<AMH_ex3ResponseHandler>;
using AMH_ex3ResponseHandler_out = TAO_Objref_Out_T<AMH_ex3ResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_ex3ResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_ex3ResponseHandler_ptr;
  using _var_type = AMH_ex3ResponseHandler_var;
  using _out_type = AMH_ex3ResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_ex3ResponseHandler_ptr _duplicate (AMH_ex3ResponseHandler_ptr obj);

  static void _tao_release (AMH_ex3ResponseHandler_ptr obj);

  static AMH_ex3ResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_ex3ResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_ex3ResponseHandler_ptr _nil ();

  virtual void get_float_attribute (
    ::CORBA::Float return_value) = 0;

  virtual void get_float_attribute_excep (
    ::OldDif2::AMH_ex3ExceptionHolder * holder) = 0;

  virtual void get_double_attribute (
    ::CORBA::Double return_value) = 0;

  virtual void get_double_attribute_excep (
    ::OldDif2::AMH_ex3ExceptionHolder * holder) = 0;

  virtual void set_double_attribute () = 0;

  virtual void set_double_attribute_excep (
    ::OldDif2::AMH_ex3ExceptionHolder * holder) = 0;

  virtual void get_long_attribute (
    ::CORBA::Long return_value) = 0;

  virtual void get_long_attribute_excep (
    ::OldDif2::AMH_ex3ExceptionHolder * holder) = 0;

  virtual void get_short_attribute (
    ::CORBA::Short return_value) = 0;

  virtual void get_short_attribute_excep (
    ::OldDif2::AMH_ex3ExceptionHolder * holder) = 0;

  virtual void set_short_attribute () = 0;

  virtual void set_short_attribute_excep (
    ::OldDif2::AMH_ex3ExceptionHolder * holder) = 0;

  virtual void get_unsigned_long_attribute (
    ::CORBA::ULong return_value) = 0;

  virtual void get_unsigned_long_attribute_excep (
    ::OldDif2::AMH_ex3ExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_ex3ResponseHandler ();

  

  virtual ~AMH_ex3ResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_ex3ResponseHandler (const AMH_ex3ResponseHandler &) = delete;
  AMH_ex3ResponseHandler (AMH_ex3ResponseHandler &&) = delete;
  AMH_ex3ResponseHandler &operator= (const AMH_ex3ResponseHandler &) = delete;
  AMH_ex3ResponseHandler &operator= (AMH_ex3ResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_AMI_EX3HANDLER__VAR_OUT_CH_)
#define _OLDDIF2_AMI_EX3HANDLER__VAR_OUT_CH_

class AMI_ex3Handler;
using AMI_ex3Handler_ptr = AMI_ex3Handler*;
using AMI_ex3Handler_var = TAO_Objref_Var_T<AMI_ex3Handler>;
using AMI_ex3Handler_out = TAO_Objref_Out_T<AMI_ex3Handler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_ex3Handler
  : public virtual ::OldDif2::AMI_ex1Handler

{
public:
  friend class TAO::Narrow_Utils<AMI_ex3Handler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_ex3Handler_ptr;
  using _var_type = AMI_ex3Handler_var;
  using _out_type = AMI_ex3Handler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_ex3Handler_ptr _duplicate (AMI_ex3Handler_ptr obj);

  static void _tao_release (AMI_ex3Handler_ptr obj);

  static AMI_ex3Handler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_ex3Handler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_ex3Handler_ptr _nil ();

  virtual void get_float_attribute (
    ::CORBA::Float ami_return_val);

  static void
  get_float_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_float_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_double_attribute (
    ::CORBA::Double ami_return_val);

  static void
  get_double_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_double_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void set_double_attribute ();

  static void
  set_double_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void set_double_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_long_attribute (
    ::CORBA::Long ami_return_val);

  static void
  get_long_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_long_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_short_attribute (
    ::CORBA::Short ami_return_val);

  static void
  get_short_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_short_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void set_short_attribute ();

  static void
  set_short_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void set_short_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_unsigned_long_attribute (
    ::CORBA::ULong ami_return_val);

  static void
  get_unsigned_long_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_unsigned_long_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_ex3Handler ();

  // Concrete non-local interface only.
  AMI_ex3Handler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_ex3Handler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_ex3Handler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_ex3Handler (const AMI_ex3Handler &) = delete;
  AMI_ex3Handler (AMI_ex3Handler &&) = delete;
  AMI_ex3Handler &operator= (const AMI_ex3Handler &) = delete;
  AMI_ex3Handler &operator= (AMI_ex3Handler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_EX4__VAR_OUT_CH_)
#define _OLDDIF2_EX4__VAR_OUT_CH_

class AMI_ex4Handler;
typedef AMI_ex4Handler *AMI_ex4Handler_ptr;

class ex4;
using ex4_ptr = ex4*;
using ex4_var = TAO_Objref_Var_T<ex4>;
using ex4_out = TAO_Objref_Out_T<ex4>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export ex4
  : public virtual ::OldDif2::ex2,
    public virtual ::OldDif2::ex3

{
public:
  friend class TAO::Narrow_Utils<ex4>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = ex4_ptr;
  using _var_type = ex4_var;
  using _out_type = ex4_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static ex4_ptr _duplicate (ex4_ptr obj);

  static void _tao_release (ex4_ptr obj);

  static ex4_ptr _narrow (::CORBA::Object_ptr obj);
  static ex4_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static ex4_ptr _nil ();

  virtual ::CORBA::UShort unsigned_short_attribute ();

  virtual void unsigned_short_attribute (
    ::CORBA::UShort unsigned_short_attribute);

  virtual ::CORBA::Char char_attribute ();

  virtual ::CORBA::Boolean boolean_attribute ();

  virtual void boolean_attribute (
    ::CORBA::Boolean boolean_attribute);

  virtual ::CORBA::Octet octet_attribute ();

  virtual char * string_attribute ();

  virtual void string_attribute (
    const char * string_attribute);

  virtual char * limited_string_attribute ();

  virtual ::OldDif2::ex4_ptr an_object_attribute ();

  virtual void sendc_set_unsigned_short_attribute (
    ::OldDif2::AMI_ex4Handler_ptr ami_handler,
    ::CORBA::UShort unsigned_short_attribute);

  virtual void sendc_get_unsigned_short_attribute (
    ::OldDif2::AMI_ex4Handler_ptr ami_handler);

  virtual void sendc_get_char_attribute (
    ::OldDif2::AMI_ex4Handler_ptr ami_handler);

  virtual void sendc_set_boolean_attribute (
    ::OldDif2::AMI_ex4Handler_ptr ami_handler,
    ::CORBA::Boolean boolean_attribute);

  virtual void sendc_get_boolean_attribute (
    ::OldDif2::AMI_ex4Handler_ptr ami_handler);

  virtual void sendc_get_octet_attribute (
    ::OldDif2::AMI_ex4Handler_ptr ami_handler);

  virtual void sendc_set_string_attribute (
    ::OldDif2::AMI_ex4Handler_ptr ami_handler,
    const char * string_attribute);

  virtual void sendc_get_string_attribute (
    ::OldDif2::AMI_ex4Handler_ptr ami_handler);

  virtual void sendc_get_limited_string_attribute (
    ::OldDif2::AMI_ex4Handler_ptr ami_handler);

  virtual void sendc_get_an_object_attribute (
    ::OldDif2::AMI_ex4Handler_ptr ami_handler);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  ex4 ();

  // Concrete non-local interface only.
  ex4 (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  ex4 (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~ex4 () = default;

private:
  // Private and unimplemented for concrete interfaces.
  ex4 (const ex4 &) = delete;
  ex4 (ex4 &&) = delete;
  ex4 &operator= (const ex4 &) = delete;
  ex4 &operator= (ex4 &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_OLDDIF2_AMH_EX4EXCEPTIONHOLDER__VAR_OUT_CH_)
#define _OLDDIF2_AMH_EX4EXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_ex4ExceptionHolder;
using AMH_ex4ExceptionHolder_var = TAO_Value_Var_T<AMH_ex4ExceptionHolder>;
using AMH_ex4ExceptionHolder_out = TAO_Value_Out_T<AMH_ex4ExceptionHolder>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export AMH_ex4ExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_ex4ExceptionHolder*;
  using _var_type = AMH_ex4ExceptionHolder_var;
  using _out_type = AMH_ex4ExceptionHolder_out;

  static void _tao_any_destructor (void *);

  AMH_ex4ExceptionHolder (::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_ex4ExceptionHolder ();
  virtual ::CORBA::ValueBase *_copy_value ();

  static AMH_ex4ExceptionHolder* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_ex4ExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_unsigned_short_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_set_unsigned_short_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_char_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_boolean_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_set_boolean_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_octet_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_string_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_set_string_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_limited_string_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_an_object_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_set_unsigned_short_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_unsigned_short_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_char_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_set_boolean_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_boolean_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_octet_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_set_string_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_string_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_limited_string_attribute ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_an_object_attribute ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_ex4ExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_ex4ExceptionHolder (const AMH_ex4ExceptionHolder &);
  void operator= (const AMH_ex4ExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldDif2_AMH_ex4ExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldDif2_AMH_ex4ExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_AMH_EX4RESPONSEHANDLER__VAR_OUT_CH_)
#define _OLDDIF2_AMH_EX4RESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_ex4ResponseHandlerHandler;
typedef AMI_AMH_ex4ResponseHandlerHandler *AMI_AMH_ex4ResponseHandlerHandler_ptr;

class AMH_ex4ResponseHandler;
using AMH_ex4ResponseHandler_ptr = AMH_ex4ResponseHandler*;
using AMH_ex4ResponseHandler_var = TAO_Objref_Var_T<AMH_ex4ResponseHandler>;
using AMH_ex4ResponseHandler_out = TAO_Objref_Out_T<AMH_ex4ResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_ex4ResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_ex4ResponseHandler_ptr;
  using _var_type = AMH_ex4ResponseHandler_var;
  using _out_type = AMH_ex4ResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_ex4ResponseHandler_ptr _duplicate (AMH_ex4ResponseHandler_ptr obj);

  static void _tao_release (AMH_ex4ResponseHandler_ptr obj);

  static AMH_ex4ResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_ex4ResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_ex4ResponseHandler_ptr _nil ();

  virtual void get_unsigned_short_attribute (
    ::CORBA::UShort return_value) = 0;

  virtual void get_unsigned_short_attribute_excep (
    ::OldDif2::AMH_ex4ExceptionHolder * holder) = 0;

  virtual void set_unsigned_short_attribute () = 0;

  virtual void set_unsigned_short_attribute_excep (
    ::OldDif2::AMH_ex4ExceptionHolder * holder) = 0;

  virtual void get_char_attribute (
    ::CORBA::Char return_value) = 0;

  virtual void get_char_attribute_excep (
    ::OldDif2::AMH_ex4ExceptionHolder * holder) = 0;

  virtual void get_boolean_attribute (
    ::CORBA::Boolean return_value) = 0;

  virtual void get_boolean_attribute_excep (
    ::OldDif2::AMH_ex4ExceptionHolder * holder) = 0;

  virtual void set_boolean_attribute () = 0;

  virtual void set_boolean_attribute_excep (
    ::OldDif2::AMH_ex4ExceptionHolder * holder) = 0;

  virtual void get_octet_attribute (
    ::CORBA::Octet return_value) = 0;

  virtual void get_octet_attribute_excep (
    ::OldDif2::AMH_ex4ExceptionHolder * holder) = 0;

  virtual void get_string_attribute (
    const char * return_value) = 0;

  virtual void get_string_attribute_excep (
    ::OldDif2::AMH_ex4ExceptionHolder * holder) = 0;

  virtual void set_string_attribute () = 0;

  virtual void set_string_attribute_excep (
    ::OldDif2::AMH_ex4ExceptionHolder * holder) = 0;

  virtual void get_limited_string_attribute (
    const char * return_value) = 0;

  virtual void get_limited_string_attribute_excep (
    ::OldDif2::AMH_ex4ExceptionHolder * holder) = 0;

  virtual void get_an_object_attribute (
    ::OldDif2::ex4_ptr return_value) = 0;

  virtual void get_an_object_attribute_excep (
    ::OldDif2::AMH_ex4ExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_ex4ResponseHandler ();

  

  virtual ~AMH_ex4ResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_ex4ResponseHandler (const AMH_ex4ResponseHandler &) = delete;
  AMH_ex4ResponseHandler (AMH_ex4ResponseHandler &&) = delete;
  AMH_ex4ResponseHandler &operator= (const AMH_ex4ResponseHandler &) = delete;
  AMH_ex4ResponseHandler &operator= (AMH_ex4ResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDDIF2_AMI_EX4HANDLER__VAR_OUT_CH_)
#define _OLDDIF2_AMI_EX4HANDLER__VAR_OUT_CH_

class AMI_ex4Handler;
using AMI_ex4Handler_ptr = AMI_ex4Handler*;
using AMI_ex4Handler_var = TAO_Objref_Var_T<AMI_ex4Handler>;
using AMI_ex4Handler_out = TAO_Objref_Out_T<AMI_ex4Handler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_ex4Handler
  : public virtual ::OldDif2::AMI_ex2Handler,
    public virtual ::OldDif2::AMI_ex3Handler

{
public:
  friend class TAO::Narrow_Utils<AMI_ex4Handler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_ex4Handler_ptr;
  using _var_type = AMI_ex4Handler_var;
  using _out_type = AMI_ex4Handler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_ex4Handler_ptr _duplicate (AMI_ex4Handler_ptr obj);

  static void _tao_release (AMI_ex4Handler_ptr obj);

  static AMI_ex4Handler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_ex4Handler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_ex4Handler_ptr _nil ();

  virtual void get_unsigned_short_attribute (
    ::CORBA::UShort ami_return_val);

  static void
  get_unsigned_short_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_unsigned_short_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void set_unsigned_short_attribute ();

  static void
  set_unsigned_short_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void set_unsigned_short_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_char_attribute (
    ::CORBA::Char ami_return_val);

  static void
  get_char_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_char_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_boolean_attribute (
    ::CORBA::Boolean ami_return_val);

  static void
  get_boolean_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_boolean_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void set_boolean_attribute ();

  static void
  set_boolean_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void set_boolean_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_octet_attribute (
    ::CORBA::Octet ami_return_val);

  static void
  get_octet_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_octet_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_string_attribute (
    const char * ami_return_val);

  static void
  get_string_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_string_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void set_string_attribute ();

  static void
  set_string_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void set_string_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_limited_string_attribute (
    const char * ami_return_val);

  static void
  get_limited_string_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_limited_string_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_an_object_attribute (
    ::OldDif2::ex4_ptr ami_return_val);

  static void
  get_an_object_attribute_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_an_object_attribute_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_ex4Handler ();

  // Concrete non-local interface only.
  AMI_ex4Handler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_ex4Handler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_ex4Handler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_ex4Handler (const AMI_ex4Handler &) = delete;
  AMI_ex4Handler (AMI_ex4Handler &&) = delete;
  AMI_ex4Handler &operator= (const AMI_ex4Handler &) = delete;
  AMI_ex4Handler &operator= (AMI_ex4Handler &&) = delete;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module OldDif2
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Value_Traits<Messaging::ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDDIF2_EX1__ARG_TRAITS_)
#define _OLDDIF2_EX1__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldDif2::ex1>
    : public Object_Arg_Traits_T<
        ::OldDif2::ex1_ptr,
        ::OldDif2::ex1_var,
        ::OldDif2::ex1_out,
        TAO::Objref_Traits<OldDif2::ex1>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_OLDDIF2_AMH_EX1EXCEPTIONHOLDER__ARG_TRAITS_)
#define _OLDDIF2_AMH_EX1EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OldDif2::AMH_ex1ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::OldDif2::AMH_ex1ExceptionHolder *,
            ::OldDif2::AMH_ex1ExceptionHolder_var,
            ::OldDif2::AMH_ex1ExceptionHolder_out,
            TAO::Value_Traits<OldDif2::AMH_ex1ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDDIF2_AMI_EX1HANDLER__ARG_TRAITS_)
#define _OLDDIF2_AMI_EX1HANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldDif2::AMI_ex1Handler>
    : public Object_Arg_Traits_T<
        ::OldDif2::AMI_ex1Handler_ptr,
        ::OldDif2::AMI_ex1Handler_var,
        ::OldDif2::AMI_ex1Handler_out,
        TAO::Objref_Traits<OldDif2::AMI_ex1Handler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDDIF2_EX2__ARG_TRAITS_)
#define _OLDDIF2_EX2__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldDif2::ex2>
    : public Object_Arg_Traits_T<
        ::OldDif2::ex2_ptr,
        ::OldDif2::ex2_var,
        ::OldDif2::ex2_out,
        TAO::Objref_Traits<OldDif2::ex2>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:578

  

#if !defined (_OLDDIF2_EX2_OP9_LS__ARG_TRAITS_)
#define _OLDDIF2_EX2_OP9_LS__ARG_TRAITS_

  struct OldDif2_ex2_op9_ls {};

  template<>
  class Arg_Traits<OldDif2_ex2_op9_ls>
    : public
        BD_String_Arg_Traits_T<
        CORBA::String_var,
        10,
        TAO::Any_Insert_Policy_Stream
      >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:578



#if !defined (_OLDDIF2_EX2_OP10_LS__ARG_TRAITS_)
#define _OLDDIF2_EX2_OP10_LS__ARG_TRAITS_

struct OldDif2_ex2_op10_ls {};

template<>
class Arg_Traits<OldDif2_ex2_op10_ls>
  : public
      BD_String_Arg_Traits_T<
      CORBA::String_var,
      10,
      TAO::Any_Insert_Policy_Stream
    >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:420



#if !defined (_OLDDIF2_EX2_OP11__ARG_TRAITS_)
#define _OLDDIF2_EX2_OP11__ARG_TRAITS_

struct OldDif2_ex2_op11 {};

template<>
class Arg_Traits<OldDif2_ex2_op11>
  : public
      BD_String_Arg_Traits_T<
      CORBA::String_var,
      10,
      TAO::Any_Insert_Policy_Stream>
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:578



#if !defined (_OLDDIF2_EX2_OP11_LS__ARG_TRAITS_)
#define _OLDDIF2_EX2_OP11_LS__ARG_TRAITS_

struct OldDif2_ex2_op11_ls {};

template<>
class Arg_Traits<OldDif2_ex2_op11_ls>
  : public
      BD_String_Arg_Traits_T<
      CORBA::String_var,
      10,
      TAO::Any_Insert_Policy_Stream
    >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:578



#if !defined (_OLDDIF2_EX2_OP9_LS__ARG_TRAITS_)
#define _OLDDIF2_EX2_OP9_LS__ARG_TRAITS_

struct OldDif2_ex2_sendc_op9_ls {};

template<>
class Arg_Traits<OldDif2_ex2_sendc_op9_ls>
  : public
      BD_String_Arg_Traits_T<
      CORBA::String_var,
      10,
      TAO::Any_Insert_Policy_Stream
    >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:578



#if !defined (_OLDDIF2_EX2_OP11_LS__ARG_TRAITS_)
#define _OLDDIF2_EX2_OP11_LS__ARG_TRAITS_

struct OldDif2_ex2_sendc_op11_ls {};

template<>
class Arg_Traits<OldDif2_ex2_sendc_op11_ls>
  : public
      BD_String_Arg_Traits_T<
      CORBA::String_var,
      10,
      TAO::Any_Insert_Policy_Stream
    >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298



#if !defined (_OLDDIF2_AMH_EX2EXCEPTIONHOLDER__ARG_TRAITS_)
#define _OLDDIF2_AMH_EX2EXCEPTIONHOLDER__ARG_TRAITS_

template<>
class Arg_Traits< ::OldDif2::AMH_ex2ExceptionHolder>
  : public
      Object_Arg_Traits_T<
          ::OldDif2::AMH_ex2ExceptionHolder *,
          ::OldDif2::AMH_ex2ExceptionHolder_var,
          ::OldDif2::AMH_ex2ExceptionHolder_out,
          TAO::Value_Traits<OldDif2::AMH_ex2ExceptionHolder>,
          TAO::Any_Insert_Policy_Stream
        >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142



#if !defined (_OLDDIF2_AMI_EX2HANDLER__ARG_TRAITS_)
#define _OLDDIF2_AMI_EX2HANDLER__ARG_TRAITS_

template<>
class  Arg_Traits< ::OldDif2::AMI_ex2Handler>
  : public Object_Arg_Traits_T<
      ::OldDif2::AMI_ex2Handler_ptr,
      ::OldDif2::AMI_ex2Handler_var,
      ::OldDif2::AMI_ex2Handler_out,
      TAO::Objref_Traits<OldDif2::AMI_ex2Handler>,
      TAO::Any_Insert_Policy_Stream>
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:578



#if !defined (_OLDDIF2_EX2_OP10_LS__ARG_TRAITS_)
#define _OLDDIF2_EX2_OP10_LS__ARG_TRAITS_

struct OldDif2_AMI_ex2Handler_op10_ls {};

template<>
class Arg_Traits<OldDif2_AMI_ex2Handler_op10_ls>
  : public
      BD_String_Arg_Traits_T<
      CORBA::String_var,
      10,
      TAO::Any_Insert_Policy_Stream
    >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:578



#if !defined (_OLDDIF2_AMI_EX2HANDLER_OP11_AMI_RETURN_VAL__ARG_TRAITS_)
#define _OLDDIF2_AMI_EX2HANDLER_OP11_AMI_RETURN_VAL__ARG_TRAITS_

struct OldDif2_AMI_ex2Handler_op11_ami_return_val {};

template<>
class Arg_Traits<OldDif2_AMI_ex2Handler_op11_ami_return_val>
  : public
      BD_String_Arg_Traits_T<
      CORBA::String_var,
      10,
      TAO::Any_Insert_Policy_Stream
    >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:578



#if !defined (_OLDDIF2_EX2_OP11_LS__ARG_TRAITS_)
#define _OLDDIF2_EX2_OP11_LS__ARG_TRAITS_

struct OldDif2_AMI_ex2Handler_op11_ls {};

template<>
class Arg_Traits<OldDif2_AMI_ex2Handler_op11_ls>
  : public
      BD_String_Arg_Traits_T<
      CORBA::String_var,
      10,
      TAO::Any_Insert_Policy_Stream
    >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142



#if !defined (_OLDDIF2_EX3__ARG_TRAITS_)
#define _OLDDIF2_EX3__ARG_TRAITS_

template<>
class  Arg_Traits< ::OldDif2::ex3>
  : public Object_Arg_Traits_T<
      ::OldDif2::ex3_ptr,
      ::OldDif2::ex3_var,
      ::OldDif2::ex3_out,
      TAO::Objref_Traits<OldDif2::ex3>,
      TAO::Any_Insert_Policy_Stream>
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298



#if !defined (_OLDDIF2_AMH_EX3EXCEPTIONHOLDER__ARG_TRAITS_)
#define _OLDDIF2_AMH_EX3EXCEPTIONHOLDER__ARG_TRAITS_

template<>
class Arg_Traits< ::OldDif2::AMH_ex3ExceptionHolder>
  : public
      Object_Arg_Traits_T<
          ::OldDif2::AMH_ex3ExceptionHolder *,
          ::OldDif2::AMH_ex3ExceptionHolder_var,
          ::OldDif2::AMH_ex3ExceptionHolder_out,
          TAO::Value_Traits<OldDif2::AMH_ex3ExceptionHolder>,
          TAO::Any_Insert_Policy_Stream
        >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142



#if !defined (_OLDDIF2_AMI_EX3HANDLER__ARG_TRAITS_)
#define _OLDDIF2_AMI_EX3HANDLER__ARG_TRAITS_

template<>
class  Arg_Traits< ::OldDif2::AMI_ex3Handler>
  : public Object_Arg_Traits_T<
      ::OldDif2::AMI_ex3Handler_ptr,
      ::OldDif2::AMI_ex3Handler_var,
      ::OldDif2::AMI_ex3Handler_out,
      TAO::Objref_Traits<OldDif2::AMI_ex3Handler>,
      TAO::Any_Insert_Policy_Stream>
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142



#if !defined (_OLDDIF2_EX4__ARG_TRAITS_)
#define _OLDDIF2_EX4__ARG_TRAITS_

template<>
class  Arg_Traits< ::OldDif2::ex4>
  : public Object_Arg_Traits_T<
      ::OldDif2::ex4_ptr,
      ::OldDif2::ex4_var,
      ::OldDif2::ex4_out,
      TAO::Objref_Traits<OldDif2::ex4>,
      TAO::Any_Insert_Policy_Stream>
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:499



#if !defined (_OLDDIF2_EX4_LIMITED_STRING_ATTRIBUTE__ARG_TRAITS_)
#define _OLDDIF2_EX4_LIMITED_STRING_ATTRIBUTE__ARG_TRAITS_
struct OldDif2_ex4_limited_string_attribute {};

template<>
class Arg_Traits<OldDif2_ex4_limited_string_attribute>
  : public
      BD_String_Arg_Traits_T<
      CORBA::String_var,
      10,
      TAO::Any_Insert_Policy_Stream>
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298



#if !defined (_OLDDIF2_AMH_EX4EXCEPTIONHOLDER__ARG_TRAITS_)
#define _OLDDIF2_AMH_EX4EXCEPTIONHOLDER__ARG_TRAITS_

template<>
class Arg_Traits< ::OldDif2::AMH_ex4ExceptionHolder>
  : public
      Object_Arg_Traits_T<
          ::OldDif2::AMH_ex4ExceptionHolder *,
          ::OldDif2::AMH_ex4ExceptionHolder_var,
          ::OldDif2::AMH_ex4ExceptionHolder_out,
          TAO::Value_Traits<OldDif2::AMH_ex4ExceptionHolder>,
          TAO::Any_Insert_Policy_Stream
        >
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142



#if !defined (_OLDDIF2_AMI_EX4HANDLER__ARG_TRAITS_)
#define _OLDDIF2_AMI_EX4HANDLER__ARG_TRAITS_

template<>
class  Arg_Traits< ::OldDif2::AMI_ex4Handler>
  : public Object_Arg_Traits_T<
      ::OldDif2::AMI_ex4Handler_ptr,
      ::OldDif2::AMI_ex4Handler_var,
      ::OldDif2::AMI_ex4Handler_out,
      TAO::Objref_Traits<OldDif2::AMI_ex4Handler>,
      TAO::Any_Insert_Policy_Stream>
{
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:578



#if !defined (_OLDDIF2_AMI_EX4HANDLER_GET_LIMITED_STRING_ATTRIBUTE_AMI_RETURN_VAL__ARG_TRAITS_)
#define _OLDDIF2_AMI_EX4HANDLER_GET_LIMITED_STRING_ATTRIBUTE_AMI_RETURN_VAL__ARG_TRAITS_

struct OldDif2_AMI_ex4Handler_get_limited_string_attribute_ami_return_val {};

template<>
class Arg_Traits<OldDif2_AMI_ex4Handler_get_limited_string_attribute_ami_return_val>
  : public
      BD_String_Arg_Traits_T<
      CORBA::String_var,
      10,
      TAO::Any_Insert_Policy_Stream
    >
{
};

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_OldDif2
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

  

  // OBV_ class
  class TAO_IDL_TEST_STUB_Export AMH_ex1ExceptionHolder
    : public virtual OldDif2::AMH_ex1ExceptionHolder
  {

protected:
  AMH_ex1ExceptionHolder () = default;
  virtual ~AMH_ex1ExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldDif2_AMH_ex1ExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldDif2_AMH_ex1ExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export AMH_ex2ExceptionHolder
  : public virtual OldDif2::AMH_ex2ExceptionHolder
{

protected:
  AMH_ex2ExceptionHolder () = default;
  virtual ~AMH_ex2ExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldDif2_AMH_ex2ExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldDif2_AMH_ex2ExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export AMH_ex3ExceptionHolder
  : public virtual OldDif2::AMH_ex3ExceptionHolder
{

protected:
  AMH_ex3ExceptionHolder () = default;
  virtual ~AMH_ex3ExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldDif2_AMH_ex3ExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldDif2_AMH_ex3ExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export AMH_ex4ExceptionHolder
  : public virtual OldDif2::AMH_ex4ExceptionHolder
{

protected:
  AMH_ex4ExceptionHolder () = default;
  virtual ~AMH_ex4ExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldDif2_AMH_ex4ExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldDif2_AMH_ex4ExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_OLDDIF2_EX1__TRAITS_)
#define _OLDDIF2_EX1__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::ex1>
  {
    static ::OldDif2::ex1_ptr duplicate (::OldDif2::ex1_ptr p);
    static void release (::OldDif2::ex1_ptr p);
    static ::OldDif2::ex1_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::ex1_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMH_EX1EXCEPTIONHOLDER__TRAITS_)
#define _OLDDIF2_AMH_EX1EXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<OldDif2::AMH_ex1ExceptionHolder>
  {
    static void add_ref (OldDif2::AMH_ex1ExceptionHolder *);
    static void remove_ref (OldDif2::AMH_ex1ExceptionHolder *);
    static void release (OldDif2::AMH_ex1ExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMH_EX1RESPONSEHANDLER__TRAITS_)
#define _OLDDIF2_AMH_EX1RESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::AMH_ex1ResponseHandler>
  {
    static ::OldDif2::AMH_ex1ResponseHandler_ptr duplicate (::OldDif2::AMH_ex1ResponseHandler_ptr p);
    static void release (::OldDif2::AMH_ex1ResponseHandler_ptr p);
    static ::OldDif2::AMH_ex1ResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::AMH_ex1ResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMI_EX1HANDLER__TRAITS_)
#define _OLDDIF2_AMI_EX1HANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::AMI_ex1Handler>
  {
    static ::OldDif2::AMI_ex1Handler_ptr duplicate (::OldDif2::AMI_ex1Handler_ptr p);
    static void release (::OldDif2::AMI_ex1Handler_ptr p);
    static ::OldDif2::AMI_ex1Handler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::AMI_ex1Handler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_EX2__TRAITS_)
#define _OLDDIF2_EX2__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::ex2>
  {
    static ::OldDif2::ex2_ptr duplicate (::OldDif2::ex2_ptr p);
    static void release (::OldDif2::ex2_ptr p);
    static ::OldDif2::ex2_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::ex2_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMH_EX2EXCEPTIONHOLDER__TRAITS_)
#define _OLDDIF2_AMH_EX2EXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<OldDif2::AMH_ex2ExceptionHolder>
  {
    static void add_ref (OldDif2::AMH_ex2ExceptionHolder *);
    static void remove_ref (OldDif2::AMH_ex2ExceptionHolder *);
    static void release (OldDif2::AMH_ex2ExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMH_EX2RESPONSEHANDLER__TRAITS_)
#define _OLDDIF2_AMH_EX2RESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::AMH_ex2ResponseHandler>
  {
    static ::OldDif2::AMH_ex2ResponseHandler_ptr duplicate (::OldDif2::AMH_ex2ResponseHandler_ptr p);
    static void release (::OldDif2::AMH_ex2ResponseHandler_ptr p);
    static ::OldDif2::AMH_ex2ResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::AMH_ex2ResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMI_EX2HANDLER__TRAITS_)
#define _OLDDIF2_AMI_EX2HANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::AMI_ex2Handler>
  {
    static ::OldDif2::AMI_ex2Handler_ptr duplicate (::OldDif2::AMI_ex2Handler_ptr p);
    static void release (::OldDif2::AMI_ex2Handler_ptr p);
    static ::OldDif2::AMI_ex2Handler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::AMI_ex2Handler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_EX3__TRAITS_)
#define _OLDDIF2_EX3__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::ex3>
  {
    static ::OldDif2::ex3_ptr duplicate (::OldDif2::ex3_ptr p);
    static void release (::OldDif2::ex3_ptr p);
    static ::OldDif2::ex3_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::ex3_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMH_EX3EXCEPTIONHOLDER__TRAITS_)
#define _OLDDIF2_AMH_EX3EXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<OldDif2::AMH_ex3ExceptionHolder>
  {
    static void add_ref (OldDif2::AMH_ex3ExceptionHolder *);
    static void remove_ref (OldDif2::AMH_ex3ExceptionHolder *);
    static void release (OldDif2::AMH_ex3ExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMH_EX3RESPONSEHANDLER__TRAITS_)
#define _OLDDIF2_AMH_EX3RESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::AMH_ex3ResponseHandler>
  {
    static ::OldDif2::AMH_ex3ResponseHandler_ptr duplicate (::OldDif2::AMH_ex3ResponseHandler_ptr p);
    static void release (::OldDif2::AMH_ex3ResponseHandler_ptr p);
    static ::OldDif2::AMH_ex3ResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::AMH_ex3ResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMI_EX3HANDLER__TRAITS_)
#define _OLDDIF2_AMI_EX3HANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::AMI_ex3Handler>
  {
    static ::OldDif2::AMI_ex3Handler_ptr duplicate (::OldDif2::AMI_ex3Handler_ptr p);
    static void release (::OldDif2::AMI_ex3Handler_ptr p);
    static ::OldDif2::AMI_ex3Handler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::AMI_ex3Handler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_EX4__TRAITS_)
#define _OLDDIF2_EX4__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::ex4>
  {
    static ::OldDif2::ex4_ptr duplicate (::OldDif2::ex4_ptr p);
    static void release (::OldDif2::ex4_ptr p);
    static ::OldDif2::ex4_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::ex4_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMH_EX4EXCEPTIONHOLDER__TRAITS_)
#define _OLDDIF2_AMH_EX4EXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<OldDif2::AMH_ex4ExceptionHolder>
  {
    static void add_ref (OldDif2::AMH_ex4ExceptionHolder *);
    static void remove_ref (OldDif2::AMH_ex4ExceptionHolder *);
    static void release (OldDif2::AMH_ex4ExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMH_EX4RESPONSEHANDLER__TRAITS_)
#define _OLDDIF2_AMH_EX4RESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::AMH_ex4ResponseHandler>
  {
    static ::OldDif2::AMH_ex4ResponseHandler_ptr duplicate (::OldDif2::AMH_ex4ResponseHandler_ptr p);
    static void release (::OldDif2::AMH_ex4ResponseHandler_ptr p);
    static ::OldDif2::AMH_ex4ResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::AMH_ex4ResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDDIF2_AMI_EX4HANDLER__TRAITS_)
#define _OLDDIF2_AMI_EX4HANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldDif2::AMI_ex4Handler>
  {
    static ::OldDif2::AMI_ex4Handler_ptr duplicate (::OldDif2::AMI_ex4Handler_ptr p);
    static void release (::OldDif2::AMI_ex4Handler_ptr p);
    static ::OldDif2::AMI_ex4Handler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldDif2::AMI_ex4Handler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::ex1_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::ex1_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (OldDif2::AMH_ex1ExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (OldDif2::AMH_ex1ExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::AMH_ex1ExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::AMH_ex1ExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::AMI_ex1Handler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::AMI_ex1Handler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::ex2_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::ex2_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (OldDif2::AMH_ex2ExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (OldDif2::AMH_ex2ExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::AMH_ex2ExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::AMH_ex2ExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::AMI_ex2Handler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::AMI_ex2Handler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::ex3_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::ex3_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (OldDif2::AMH_ex3ExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (OldDif2::AMH_ex3ExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::AMH_ex3ExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::AMH_ex3ExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::AMI_ex3Handler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::AMI_ex3Handler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::ex4_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::ex4_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (OldDif2::AMH_ex4ExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (OldDif2::AMH_ex4ExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::AMH_ex4ExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::AMH_ex4ExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldDif2::AMI_ex4Handler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldDif2::AMI_ex4Handler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:1648

#if defined (__ACE_INLINE__)
#include "dif2C.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

