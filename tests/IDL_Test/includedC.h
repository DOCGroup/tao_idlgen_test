// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:148

#ifndef _TAO_IDL_INCLUDEDC_UW8LE0_H_
#define _TAO_IDL_INCLUDEDC_UW8LE0_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "TAO_IDL_TEST_stub_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Messaging/Messaging.h"
#include "tao/Sequence_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 4 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_root/root_ch.cpp:155


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace Aok
{

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

#if !defined (_AOK_SEQ1TYPE_CH_)
#define _AOK_SEQ1TYPE_CH_

  class Seq1Type;
  typedef ::TAO_FixedSeq_Var_T<Seq1Type> Seq1Type_var;
  typedef ::TAO_Seq_Out_T<Seq1Type> Seq1Type_out;
  

  class TAO_IDL_TEST_STUB_Export Seq1Type
    : public
        ::TAO::unbounded_value_sequence< ::CORBA::Double>
  {
  public:
    Seq1Type () = default;
    Seq1Type (::CORBA::ULong max);
    Seq1Type (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Double* buffer,
      ::CORBA::Boolean release = false);
    Seq1Type (const Seq1Type &) = default;
    Seq1Type (Seq1Type &&) = default;
    Seq1Type& operator= (const Seq1Type &) = default;
    Seq1Type& operator= (Seq1Type &&) = default;
    virtual ~Seq1Type () = default;
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = Seq1Type_var;
    using _out_type = Seq1Type_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_Seq1Type;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:366

  typedef ::CORBA::Long Me;
  typedef ::CORBA::Long_out Me_out;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_Me;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module Aok
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/enum_ch.cpp:39

enum Agog
{
  Agog1,
  Agog2,
  Agog3
};

typedef Agog &Agog_out;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_Agog;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace VT_Def
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

  

#if !defined (_VT_DEF_VT__VAR_OUT_CH_)
#define _VT_DEF_VT__VAR_OUT_CH_

  class VT;
  using VT_var = TAO_Value_Var_T<VT>;
  using VT_out = TAO_Value_Out_T<VT>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

  

  class TAO_IDL_TEST_STUB_Export VT
    : public virtual ::CORBA::ValueBase
  {
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = VT*;
    using _var_type = VT_var;
    using _out_type = VT_out;

    static void _tao_any_destructor (void *);

    static VT* _downcast (::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        VT *&new_object);
    
    virtual const char* _tao_obv_repository_id () const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id ();

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

    
  
  protected:
    VT ();
    virtual ~VT ();

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
    
  private:
    VT (const VT &);
    void operator= (const VT &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__VT_Def_VT (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__VT_Def_VT (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

  class TAO_IDL_TEST_STUB_Export VT_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    VT_init ();

    static VT_init* _downcast (::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *create_for_unmarshal ();

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id ();
  
  protected:
    virtual ~VT_init ();
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_VT;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module VT_Def
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_INCLUDEDBASE__VAR_OUT_CH_)
#define _INCLUDEDBASE__VAR_OUT_CH_

class IncludedBase;
using IncludedBase_var = TAO_Value_Var_T<IncludedBase>;
using IncludedBase_out = TAO_Value_Out_T<IncludedBase>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export IncludedBase
  : public virtual ::CORBA::ValueBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = IncludedBase*;
  using _var_type = IncludedBase_var;
  using _out_type = IncludedBase_out;

  static void _tao_any_destructor (void *);

  static IncludedBase* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      IncludedBase *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:524

  

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

#if !defined (_INCLUDEDBASE__TAO_SEQ_CORBA_LONG__CH_)
#define _INCLUDEDBASE__TAO_SEQ_CORBA_LONG__CH_

  

  class TAO_IDL_TEST_STUB_Export _tao_seq_CORBA_Long_
    : public
        ::TAO::unbounded_value_sequence< ::CORBA::Long>
  {
  public:
    _tao_seq_CORBA_Long_ () = default;
    _tao_seq_CORBA_Long_ (::CORBA::ULong max);
    _tao_seq_CORBA_Long_ (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Long* buffer,
      ::CORBA::Boolean release = false);
    _tao_seq_CORBA_Long_ (const _tao_seq_CORBA_Long_ &) = default;
    _tao_seq_CORBA_Long_ (_tao_seq_CORBA_Long_ &&) = default;
    _tao_seq_CORBA_Long_& operator= (const _tao_seq_CORBA_Long_ &) = default;
    _tao_seq_CORBA_Long_& operator= (_tao_seq_CORBA_Long_ &&) = default;
    virtual ~_tao_seq_CORBA_Long_ () = default;
    
  };

#endif /* end #if !defined */

  typedef _tao_seq_CORBA_Long_ _DeprecatedMember_seq;
  virtual void DeprecatedMember (const IncludedBase::_tao_seq_CORBA_Long_ &) = 0;
  virtual const IncludedBase::_tao_seq_CORBA_Long_ &DeprecatedMember () const = 0;
  virtual IncludedBase::_tao_seq_CORBA_Long_ &DeprecatedMember () = 0;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

  

protected:
  IncludedBase ();
  virtual ~IncludedBase ();

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  IncludedBase (const IncludedBase &);
  void operator= (const IncludedBase &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__IncludedBase (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__IncludedBase (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

class TAO_IDL_TEST_STUB_Export IncludedBase_init
  : public virtual ::CORBA::ValueFactoryBase
{
public:
  IncludedBase_init ();

  static IncludedBase_init* _downcast (::CORBA::ValueFactoryBase *);

  virtual ::CORBA::ValueBase *create_for_unmarshal ();

  // TAO-specific extensions
public:
  virtual const char* tao_repository_id ();

protected:
  virtual ~IncludedBase_init ();
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_IncludedBase;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace A
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

  

  struct MyStructA;
  using MyStructA_var = ::TAO_Var_Var_T<MyStructA>;
  using MyStructA_out = ::TAO_Out_T<MyStructA>;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

#if !defined (_A_MYSEQA_CH_)
#define _A_MYSEQA_CH_

  class MySeqA;
  typedef ::TAO_VarSeq_Var_T<MySeqA> MySeqA_var;
  typedef ::TAO_Seq_Out_T<MySeqA> MySeqA_out;
  

  class TAO_IDL_TEST_STUB_Export MySeqA
    : public
        ::TAO::unbounded_value_sequence< MyStructA>
  {
  public:
    MySeqA () = default;
    MySeqA (::CORBA::ULong max);
    MySeqA (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      MyStructA* buffer,
      ::CORBA::Boolean release = false);
    MySeqA (const MySeqA &) = default;
    MySeqA (MySeqA &&) = default;
    MySeqA& operator= (const MySeqA &) = default;
    MySeqA& operator= (MySeqA &&) = default;
    virtual ~MySeqA () = default;
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = MySeqA_var;
    using _out_type = MySeqA_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_MySeqA;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

  

  struct TAO_IDL_TEST_STUB_Export MyStructA
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = MyStructA_var;
    using _out_type = MyStructA_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager str;
    A::MySeqA recursive_member;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_MyStructA;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module A
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace RootModule
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace SUBMODULE1
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_ROOTMODULE_SUBMODULE1_PARENTIF__VAR_OUT_CH_)
#define _ROOTMODULE_SUBMODULE1_PARENTIF__VAR_OUT_CH_

    class AMI_ParentIFHandler;
    typedef AMI_ParentIFHandler *AMI_ParentIFHandler_ptr;

    class ParentIF;
    using ParentIF_ptr = ParentIF*;
    using ParentIF_var = TAO_Objref_Var_T<ParentIF>;
    using ParentIF_out = TAO_Objref_Out_T<ParentIF>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export ParentIF
      : public virtual ::CORBA::Object
    {
    public:
      friend class TAO::Narrow_Utils<ParentIF>;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = ParentIF_ptr;
      using _var_type = ParentIF_var;
      using _out_type = ParentIF_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParentIF_ptr _duplicate (ParentIF_ptr obj);

      static void _tao_release (ParentIF_ptr obj);

      static ParentIF_ptr _narrow (::CORBA::Object_ptr obj);
      static ParentIF_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParentIF_ptr _nil ();
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/enum_ch.cpp:39

      enum Mode
      {
        NORMAL,
        FAULTY,
        UNKNOWN
      };

      typedef Mode &Mode_out;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

      static ::CORBA::TypeCode_ptr const _tc_Mode;

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      ParentIF ();

      // Concrete non-local interface only.
      ParentIF (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      ParentIF (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~ParentIF () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      ParentIF (const ParentIF &) = delete;
      ParentIF (ParentIF &&) = delete;
      ParentIF &operator= (const ParentIF &) = delete;
      ParentIF &operator= (ParentIF &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_ParentIF;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

    

#if !defined (_ROOTMODULE_SUBMODULE1_AMH_PARENTIFEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _ROOTMODULE_SUBMODULE1_AMH_PARENTIFEXCEPTIONHOLDER__VAR_OUT_CH_

    class AMH_ParentIFExceptionHolder;
    using AMH_ParentIFExceptionHolder_var = TAO_Value_Var_T<AMH_ParentIFExceptionHolder>;
    using AMH_ParentIFExceptionHolder_out = TAO_Value_Out_T<AMH_ParentIFExceptionHolder>;

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

    

    class TAO_IDL_TEST_STUB_Export AMH_ParentIFExceptionHolder
      : public virtual ::CORBA::DefaultValueRefCountBase
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMH_ParentIFExceptionHolder*;
      using _var_type = AMH_ParentIFExceptionHolder_var;
      using _out_type = AMH_ParentIFExceptionHolder_out;

      static void _tao_any_destructor (void *);

      AMH_ParentIFExceptionHolder (::CORBA::Exception *ex)
        : exception (ex)
      {}

      virtual ~AMH_ParentIFExceptionHolder ();
      virtual ::CORBA::ValueBase *_copy_value ();

      static AMH_ParentIFExceptionHolder* _downcast (::CORBA::ValueBase *v);
      
      /// TAO extensions or internals
      static ::CORBA::Boolean _tao_unmarshal (
          TAO_InputCDR &strm,
          AMH_ParentIFExceptionHolder *&new_object);
      
      virtual const char* _tao_obv_repository_id () const;

      virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

      static const char* _tao_obv_static_repository_id ();

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

      
    
    protected:
      AMH_ParentIFExceptionHolder ();
      virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
      virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
      virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
      
    private:
      AMH_ParentIFExceptionHolder (const AMH_ParentIFExceptionHolder &);
      void operator= (const AMH_ParentIFExceptionHolder &);
      
      ::CORBA::Exception *exception;
      
    protected:
      virtual ::CORBA::Boolean
      _tao_marshal__RootModule_SUBMODULE1_AMH_ParentIFExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

      virtual ::CORBA::Boolean
      _tao_unmarshal__RootModule_SUBMODULE1_AMH_ParentIFExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

    class TAO_IDL_TEST_STUB_Export AMH_ParentIFExceptionHolder_init
      : public virtual ::CORBA::ValueFactoryBase
    {
    public:
      AMH_ParentIFExceptionHolder_init ();

      static AMH_ParentIFExceptionHolder_init* _downcast (::CORBA::ValueFactoryBase *);

      virtual ::CORBA::ValueBase *create_for_unmarshal ();

      // TAO-specific extensions
    public:
      virtual const char* tao_repository_id ();
    
    protected:
      virtual ~AMH_ParentIFExceptionHolder_init ();
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_ParentIFExceptionHolder;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_ROOTMODULE_SUBMODULE1_AMH_PARENTIFRESPONSEHANDLER__VAR_OUT_CH_)
#define _ROOTMODULE_SUBMODULE1_AMH_PARENTIFRESPONSEHANDLER__VAR_OUT_CH_

    class AMI_AMH_ParentIFResponseHandlerHandler;
    typedef AMI_AMH_ParentIFResponseHandlerHandler *AMI_AMH_ParentIFResponseHandlerHandler_ptr;

    class AMH_ParentIFResponseHandler;
    using AMH_ParentIFResponseHandler_ptr = AMH_ParentIFResponseHandler*;
    using AMH_ParentIFResponseHandler_var = TAO_Objref_Var_T<AMH_ParentIFResponseHandler>;
    using AMH_ParentIFResponseHandler_out = TAO_Objref_Out_T<AMH_ParentIFResponseHandler>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export AMH_ParentIFResponseHandler
      : public virtual ::CORBA::Object
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMH_ParentIFResponseHandler_ptr;
      using _var_type = AMH_ParentIFResponseHandler_var;
      using _out_type = AMH_ParentIFResponseHandler_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static AMH_ParentIFResponseHandler_ptr _duplicate (AMH_ParentIFResponseHandler_ptr obj);

      static void _tao_release (AMH_ParentIFResponseHandler_ptr obj);

      static AMH_ParentIFResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
      static AMH_ParentIFResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AMH_ParentIFResponseHandler_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      AMH_ParentIFResponseHandler ();

      

      virtual ~AMH_ParentIFResponseHandler () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      AMH_ParentIFResponseHandler (const AMH_ParentIFResponseHandler &) = delete;
      AMH_ParentIFResponseHandler (AMH_ParentIFResponseHandler &&) = delete;
      AMH_ParentIFResponseHandler &operator= (const AMH_ParentIFResponseHandler &) = delete;
      AMH_ParentIFResponseHandler &operator= (AMH_ParentIFResponseHandler &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_ParentIFResponseHandler;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_ROOTMODULE_SUBMODULE1_AMI_PARENTIFHANDLER__VAR_OUT_CH_)
#define _ROOTMODULE_SUBMODULE1_AMI_PARENTIFHANDLER__VAR_OUT_CH_

    class AMI_ParentIFHandler;
    using AMI_ParentIFHandler_ptr = AMI_ParentIFHandler*;
    using AMI_ParentIFHandler_var = TAO_Objref_Var_T<AMI_ParentIFHandler>;
    using AMI_ParentIFHandler_out = TAO_Objref_Out_T<AMI_ParentIFHandler>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export AMI_ParentIFHandler
      : public virtual ::Messaging::ReplyHandler
    
    {
    public:
      friend class TAO::Narrow_Utils<AMI_ParentIFHandler>;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMI_ParentIFHandler_ptr;
      using _var_type = AMI_ParentIFHandler_var;
      using _out_type = AMI_ParentIFHandler_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static AMI_ParentIFHandler_ptr _duplicate (AMI_ParentIFHandler_ptr obj);

      static void _tao_release (AMI_ParentIFHandler_ptr obj);

      static AMI_ParentIFHandler_ptr _narrow (::CORBA::Object_ptr obj);
      static AMI_ParentIFHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AMI_ParentIFHandler_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      AMI_ParentIFHandler ();

      // Concrete non-local interface only.
      AMI_ParentIFHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      AMI_ParentIFHandler (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~AMI_ParentIFHandler () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      AMI_ParentIFHandler (const AMI_ParentIFHandler &) = delete;
      AMI_ParentIFHandler (AMI_ParentIFHandler &&) = delete;
      AMI_ParentIFHandler &operator= (const AMI_ParentIFHandler &) = delete;
      AMI_ParentIFHandler &operator= (AMI_ParentIFHandler &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMI_ParentIFHandler;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module RootModule::SUBMODULE1


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module RootModule
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_AAA__VAR_OUT_CH_)
#define _AAA__VAR_OUT_CH_

class AMI_AAAHandler;
typedef AMI_AAAHandler *AMI_AAAHandler_ptr;

class AAA;
using AAA_ptr = AAA*;
using AAA_var = TAO_Objref_Var_T<AAA>;
using AAA_out = TAO_Objref_Out_T<AAA>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AAA
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<AAA>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AAA_ptr;
  using _var_type = AAA_var;
  using _out_type = AAA_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AAA_ptr _duplicate (AAA_ptr obj);

  static void _tao_release (AAA_ptr obj);

  static AAA_ptr _narrow (::CORBA::Object_ptr obj);
  static AAA_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AAA_ptr _nil ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:366

  typedef ::CORBA::Long my_long_type;
  typedef ::CORBA::Long_out my_long_type_out;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  static ::CORBA::TypeCode_ptr const _tc_my_long_type;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AAA ();

  // Concrete non-local interface only.
  AAA (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AAA (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AAA () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AAA (const AAA &) = delete;
  AAA (AAA &&) = delete;
  AAA &operator= (const AAA &) = delete;
  AAA &operator= (AAA &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AAA;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_AMH_AAAEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _AMH_AAAEXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_AAAExceptionHolder;
using AMH_AAAExceptionHolder_var = TAO_Value_Var_T<AMH_AAAExceptionHolder>;
using AMH_AAAExceptionHolder_out = TAO_Value_Out_T<AMH_AAAExceptionHolder>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export AMH_AAAExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_AAAExceptionHolder*;
  using _var_type = AMH_AAAExceptionHolder_var;
  using _out_type = AMH_AAAExceptionHolder_out;

  static void _tao_any_destructor (void *);

  AMH_AAAExceptionHolder (::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_AAAExceptionHolder ();
  virtual ::CORBA::ValueBase *_copy_value ();

  static AMH_AAAExceptionHolder* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_AAAExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

  

protected:
  AMH_AAAExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_AAAExceptionHolder (const AMH_AAAExceptionHolder &);
  void operator= (const AMH_AAAExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__AMH_AAAExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__AMH_AAAExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

class TAO_IDL_TEST_STUB_Export AMH_AAAExceptionHolder_init
  : public virtual ::CORBA::ValueFactoryBase
{
public:
  AMH_AAAExceptionHolder_init ();

  static AMH_AAAExceptionHolder_init* _downcast (::CORBA::ValueFactoryBase *);

  virtual ::CORBA::ValueBase *create_for_unmarshal ();

  // TAO-specific extensions
public:
  virtual const char* tao_repository_id ();

protected:
  virtual ~AMH_AAAExceptionHolder_init ();
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_AAAExceptionHolder;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_AMH_AAARESPONSEHANDLER__VAR_OUT_CH_)
#define _AMH_AAARESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_AAAResponseHandlerHandler;
typedef AMI_AMH_AAAResponseHandlerHandler *AMI_AMH_AAAResponseHandlerHandler_ptr;

class AMH_AAAResponseHandler;
using AMH_AAAResponseHandler_ptr = AMH_AAAResponseHandler*;
using AMH_AAAResponseHandler_var = TAO_Objref_Var_T<AMH_AAAResponseHandler>;
using AMH_AAAResponseHandler_out = TAO_Objref_Out_T<AMH_AAAResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_AAAResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_AAAResponseHandler_ptr;
  using _var_type = AMH_AAAResponseHandler_var;
  using _out_type = AMH_AAAResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_AAAResponseHandler_ptr _duplicate (AMH_AAAResponseHandler_ptr obj);

  static void _tao_release (AMH_AAAResponseHandler_ptr obj);

  static AMH_AAAResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_AAAResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_AAAResponseHandler_ptr _nil ();

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_AAAResponseHandler ();

  

  virtual ~AMH_AAAResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_AAAResponseHandler (const AMH_AAAResponseHandler &) = delete;
  AMH_AAAResponseHandler (AMH_AAAResponseHandler &&) = delete;
  AMH_AAAResponseHandler &operator= (const AMH_AAAResponseHandler &) = delete;
  AMH_AAAResponseHandler &operator= (AMH_AAAResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_AAAResponseHandler;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_AMI_AAAHANDLER__VAR_OUT_CH_)
#define _AMI_AAAHANDLER__VAR_OUT_CH_

class AMI_AAAHandler;
using AMI_AAAHandler_ptr = AMI_AAAHandler*;
using AMI_AAAHandler_var = TAO_Objref_Var_T<AMI_AAAHandler>;
using AMI_AAAHandler_out = TAO_Objref_Out_T<AMI_AAAHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_AAAHandler
  : public virtual ::Messaging::ReplyHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_AAAHandler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_AAAHandler_ptr;
  using _var_type = AMI_AAAHandler_var;
  using _out_type = AMI_AAAHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_AAAHandler_ptr _duplicate (AMI_AAAHandler_ptr obj);

  static void _tao_release (AMI_AAAHandler_ptr obj);

  static AMI_AAAHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_AAAHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_AAAHandler_ptr _nil ();

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_AAAHandler ();

  // Concrete non-local interface only.
  AMI_AAAHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_AAAHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_AAAHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_AAAHandler (const AMI_AAAHandler &) = delete;
  AMI_AAAHandler (AMI_AAAHandler &&) = delete;
  AMI_AAAHandler &operator= (const AMI_AAAHandler &) = delete;
  AMI_AAAHandler &operator= (AMI_AAAHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMI_AAAHandler;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Value_Traits<Messaging::ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::Aok::Seq1Type>
    : public
        Var_Size_Arg_Traits_T<
            ::Aok::Seq1Type,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:889

  

  template<>
  class Arg_Traits< ::Agog>
    : public
        Basic_Arg_Traits_T<
            ::Agog,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_VT_DEF_VT__ARG_TRAITS_)
#define _VT_DEF_VT__ARG_TRAITS_

  template<>
  class Arg_Traits< ::VT_Def::VT>
    : public
        Object_Arg_Traits_T<
            ::VT_Def::VT *,
            ::VT_Def::VT_var,
            ::VT_Def::VT_out,
            TAO::Value_Traits<VT_Def::VT>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_INCLUDEDBASE__ARG_TRAITS_)
#define _INCLUDEDBASE__ARG_TRAITS_

  template<>
  class Arg_Traits< ::IncludedBase>
    : public
        Object_Arg_Traits_T<
            ::IncludedBase *,
            ::IncludedBase_var,
            ::IncludedBase_out,
            TAO::Value_Traits<IncludedBase>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::A::MySeqA>
    : public
        Var_Size_Arg_Traits_T<
            ::A::MySeqA,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::A::MyStructA>
    : public
        Var_Size_Arg_Traits_T<
            ::A::MyStructA,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_ROOTMODULE_SUBMODULE1_PARENTIF__ARG_TRAITS_)
#define _ROOTMODULE_SUBMODULE1_PARENTIF__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::RootModule::SUBMODULE1::ParentIF>
    : public Object_Arg_Traits_T<
        ::RootModule::SUBMODULE1::ParentIF_ptr,
        ::RootModule::SUBMODULE1::ParentIF_var,
        ::RootModule::SUBMODULE1::ParentIF_out,
        TAO::Objref_Traits<RootModule::SUBMODULE1::ParentIF>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:889

  

  template<>
  class Arg_Traits< ::RootModule::SUBMODULE1::ParentIF::Mode>
    : public
        Basic_Arg_Traits_T<
            ::RootModule::SUBMODULE1::ParentIF::Mode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_ROOTMODULE_SUBMODULE1_AMH_PARENTIFEXCEPTIONHOLDER__ARG_TRAITS_)
#define _ROOTMODULE_SUBMODULE1_AMH_PARENTIFEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder *,
            ::RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder_var,
            ::RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder_out,
            TAO::Value_Traits<RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_ROOTMODULE_SUBMODULE1_AMI_PARENTIFHANDLER__ARG_TRAITS_)
#define _ROOTMODULE_SUBMODULE1_AMI_PARENTIFHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::RootModule::SUBMODULE1::AMI_ParentIFHandler>
    : public Object_Arg_Traits_T<
        ::RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr,
        ::RootModule::SUBMODULE1::AMI_ParentIFHandler_var,
        ::RootModule::SUBMODULE1::AMI_ParentIFHandler_out,
        TAO::Objref_Traits<RootModule::SUBMODULE1::AMI_ParentIFHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AAA__ARG_TRAITS_)
#define _AAA__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::AAA>
    : public Object_Arg_Traits_T<
        ::AAA_ptr,
        ::AAA_var,
        ::AAA_out,
        TAO::Objref_Traits<AAA>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_AAAEXCEPTIONHOLDER__ARG_TRAITS_)
#define _AMH_AAAEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::AMH_AAAExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::AMH_AAAExceptionHolder *,
            ::AMH_AAAExceptionHolder_var,
            ::AMH_AAAExceptionHolder_out,
            TAO::Value_Traits<AMH_AAAExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_AAAHANDLER__ARG_TRAITS_)
#define _AMI_AAAHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::AMI_AAAHandler>
    : public Object_Arg_Traits_T<
        ::AMI_AAAHandler_ptr,
        ::AMI_AAAHandler_var,
        ::AMI_AAAHandler_out,
        TAO::Objref_Traits<AMI_AAAHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_VT_Def
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

  

  // OBV_ class
  class TAO_IDL_TEST_STUB_Export VT
    : public virtual VT_Def::VT,
      public virtual ::CORBA::DefaultValueRefCountBase
  {

public:
  VT () = default;
  virtual ~VT ();

public:
  virtual ::CORBA::ValueBase *_copy_value ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__VT_Def_VT (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__VT_Def_VT (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export OBV_IncludedBase
  : public virtual IncludedBase,
    public virtual ::CORBA::DefaultValueRefCountBase
{

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:524

  virtual void DeprecatedMember (const IncludedBase::_tao_seq_CORBA_Long_ &);
  virtual const IncludedBase::_tao_seq_CORBA_Long_ &DeprecatedMember () const;
  virtual IncludedBase::_tao_seq_CORBA_Long_ &DeprecatedMember ();

public:
  OBV_IncludedBase () = default;
  OBV_IncludedBase (
      const ::IncludedBase::_tao_seq_CORBA_Long_ & _tao_init_DeprecatedMember
    );
  virtual ~OBV_IncludedBase ();

public:
  virtual ::CORBA::ValueBase *_copy_value ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__IncludedBase (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__IncludedBase (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  _tao_seq_CORBA_Long_ _pd_DeprecatedMember;
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_RootModule
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

  namespace SUBMODULE1
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

    

    // OBV_ class
    class TAO_IDL_TEST_STUB_Export AMH_ParentIFExceptionHolder
      : public virtual RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder,
        public virtual ::CORBA::DefaultValueRefCountBase
    {
  
  public:
    AMH_ParentIFExceptionHolder () = default;
    virtual ~AMH_ParentIFExceptionHolder ();
  
  public:
    virtual ::CORBA::ValueBase *_copy_value ();
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__RootModule_SUBMODULE1_AMH_ParentIFExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

    virtual ::CORBA::Boolean
    _tao_unmarshal__RootModule_SUBMODULE1_AMH_ParentIFExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

    ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
    ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
    virtual void truncation_hook ();
  
  private:
    CORBA::Boolean require_truncation_ {false};
  };
}
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export OBV_AMH_AAAExceptionHolder
  : public virtual AMH_AAAExceptionHolder,
    public virtual ::CORBA::DefaultValueRefCountBase
{

public:
  OBV_AMH_AAAExceptionHolder () = default;
  virtual ~OBV_AMH_AAAExceptionHolder ();

public:
  virtual ::CORBA::ValueBase *_copy_value ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__AMH_AAAExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__AMH_AAAExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_VT_DEF_VT__TRAITS_)
#define _VT_DEF_VT__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<VT_Def::VT>
  {
    static void add_ref (VT_Def::VT *);
    static void remove_ref (VT_Def::VT *);
    static void release (VT_Def::VT *);
  };

#endif /* end #if !defined */

#if !defined (_INCLUDEDBASE__TRAITS_)
#define _INCLUDEDBASE__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<IncludedBase>
  {
    static void add_ref (IncludedBase *);
    static void remove_ref (IncludedBase *);
    static void release (IncludedBase *);
  };

#endif /* end #if !defined */

#if !defined (_ROOTMODULE_SUBMODULE1_PARENTIF__TRAITS_)
#define _ROOTMODULE_SUBMODULE1_PARENTIF__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::RootModule::SUBMODULE1::ParentIF>
  {
    static ::RootModule::SUBMODULE1::ParentIF_ptr duplicate (::RootModule::SUBMODULE1::ParentIF_ptr p);
    static void release (::RootModule::SUBMODULE1::ParentIF_ptr p);
    static ::RootModule::SUBMODULE1::ParentIF_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RootModule::SUBMODULE1::ParentIF_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_ROOTMODULE_SUBMODULE1_AMH_PARENTIFEXCEPTIONHOLDER__TRAITS_)
#define _ROOTMODULE_SUBMODULE1_AMH_PARENTIFEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder>
  {
    static void add_ref (RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder *);
    static void remove_ref (RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder *);
    static void release (RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_ROOTMODULE_SUBMODULE1_AMH_PARENTIFRESPONSEHANDLER__TRAITS_)
#define _ROOTMODULE_SUBMODULE1_AMH_PARENTIFRESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::RootModule::SUBMODULE1::AMH_ParentIFResponseHandler>
  {
    static ::RootModule::SUBMODULE1::AMH_ParentIFResponseHandler_ptr duplicate (::RootModule::SUBMODULE1::AMH_ParentIFResponseHandler_ptr p);
    static void release (::RootModule::SUBMODULE1::AMH_ParentIFResponseHandler_ptr p);
    static ::RootModule::SUBMODULE1::AMH_ParentIFResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RootModule::SUBMODULE1::AMH_ParentIFResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_ROOTMODULE_SUBMODULE1_AMI_PARENTIFHANDLER__TRAITS_)
#define _ROOTMODULE_SUBMODULE1_AMI_PARENTIFHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::RootModule::SUBMODULE1::AMI_ParentIFHandler>
  {
    static ::RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr duplicate (::RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr p);
    static void release (::RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr p);
    static ::RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_AAA__TRAITS_)
#define _AAA__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::AAA>
  {
    static ::AAA_ptr duplicate (::AAA_ptr p);
    static void release (::AAA_ptr p);
    static ::AAA_ptr nil ();
    static ::CORBA::Boolean marshal (const ::AAA_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_AMH_AAAEXCEPTIONHOLDER__TRAITS_)
#define _AMH_AAAEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<AMH_AAAExceptionHolder>
  {
    static void add_ref (AMH_AAAExceptionHolder *);
    static void remove_ref (AMH_AAAExceptionHolder *);
    static void release (AMH_AAAExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_AMH_AAARESPONSEHANDLER__TRAITS_)
#define _AMH_AAARESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::AMH_AAAResponseHandler>
  {
    static ::AMH_AAAResponseHandler_ptr duplicate (::AMH_AAAResponseHandler_ptr p);
    static void release (::AMH_AAAResponseHandler_ptr p);
    static ::AMH_AAAResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::AMH_AAAResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_AMI_AAAHANDLER__TRAITS_)
#define _AMI_AAAHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::AMI_AAAHandler>
  {
    static ::AMI_AAAHandler_ptr duplicate (::AMI_AAAHandler_ptr p);
    static void release (::AMI_AAAHandler_ptr p);
    static ::AMI_AAAHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::AMI_AAAHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Aok::Seq1Type &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Aok::Seq1Type*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Aok::Seq1Type *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/any_op_ch.cpp:31


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Agog);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Agog &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, VT_Def::VT *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, VT_Def::VT **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, VT_Def::VT *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, IncludedBase *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, IncludedBase **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IncludedBase *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::A::MySeqA &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::A::MySeqA*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::A::MySeqA *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::A::MyStructA &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::A::MyStructA*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::A::MyStructA *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RootModule::SUBMODULE1::ParentIF_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RootModule::SUBMODULE1::ParentIF_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RootModule::SUBMODULE1::ParentIF_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/any_op_ch.cpp:31


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RootModule::SUBMODULE1::ParentIF::Mode);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RootModule::SUBMODULE1::ParentIF::Mode &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RootModule::SUBMODULE1::AMH_ParentIFResponseHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RootModule::SUBMODULE1::AMH_ParentIFResponseHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RootModule::SUBMODULE1::AMH_ParentIFResponseHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AAA_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AAA_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AAA_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMH_AAAExceptionHolder *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMH_AAAExceptionHolder **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_AAAExceptionHolder *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMH_AAAResponseHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMH_AAAResponseHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_AAAResponseHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMI_AAAHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMI_AAAHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMI_AAAHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_Aok_Seq1Type_H_
#define _TAO_CDR_OP_Aok_Seq1Type_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Aok::Seq1Type &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Aok::Seq1Type &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Aok_Seq1Type_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/cdr_op_ch.cpp:33


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Agog _tao_enumerator);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Agog &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (VT_Def::VT *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (VT_Def::VT *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const VT_Def::VT *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, VT_Def::VT *&);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (IncludedBase *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (IncludedBase *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const IncludedBase *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, IncludedBase *&);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_IncludedBase__tao_seq_CORBA_Long__H_
#define _TAO_CDR_OP_IncludedBase__tao_seq_CORBA_Long__H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const IncludedBase::_tao_seq_CORBA_Long_ &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    IncludedBase::_tao_seq_CORBA_Long_ &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_IncludedBase__tao_seq_CORBA_Long__H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_A_MySeqA_H_
#define _TAO_CDR_OP_A_MySeqA_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const A::MySeqA &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    A::MySeqA &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_A_MySeqA_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const A::MyStructA &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, A::MyStructA &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RootModule::SUBMODULE1::ParentIF_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RootModule::SUBMODULE1::ParentIF_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/cdr_op_ch.cpp:33


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, RootModule::SUBMODULE1::ParentIF::Mode _tao_enumerator);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, RootModule::SUBMODULE1::ParentIF::Mode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RootModule::SUBMODULE1::AMH_ParentIFExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RootModule::SUBMODULE1::AMI_ParentIFHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const AAA_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, AAA_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (AMH_AAAExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (AMH_AAAExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const AMH_AAAExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, AMH_AAAExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const AMI_AAAHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, AMI_AAAHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:1648

#if defined (__ACE_INLINE__)
#include "includedC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

