// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:372


#include "sequenceC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/AnyTypeCode/Value_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Value_Field.h"
#include "tao/AnyTypeCode/Recursive_Type_TypeCode.h"
#include "tao/CDR.h"
#include "tao/Messaging/Asynch_Invocation_Adapter.h"
#include "tao/Messaging/ExceptionHolder_i.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/SystemException.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "cstring"
#include "memory"

#if !defined (__ACE_INLINE__)
#include "sequenceC.inl"
#endif /* !defined INLINE */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_MYFOOSTRUCTSEQ_CS_)
#define _MYFOOSTRUCTSEQ_CS_

myfoostructseq::myfoostructseq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< myfoostruct> (max)
{}

myfoostructseq::myfoostructseq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    myfoostruct * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< myfoostruct>
    (max, length, buffer, release)
{}

void myfoostructseq::_tao_any_destructor (
    void * _tao_void_pointer)
{
  myfoostructseq * _tao_tmp_pointer =
    static_cast<myfoostructseq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_myfoostructseq_GUARD
#define _TAO_TYPECODE_myfoostructseq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        myfoostructseq_0 (
          ::CORBA::tk_sequence,
          &_tc_myfoostruct,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_myfoostructseq_0 =
        &myfoostructseq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_myfoostructseq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_myfoostructseq (
    ::CORBA::tk_alias,
    "IDL:myfoostructseq:1.0",
    "myfoostructseq",
    &TAO::TypeCode::tc_myfoostructseq_0);
  
::CORBA::TypeCode_ptr const _tc_myfoostructseq =
  &_tao_tc_myfoostructseq;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:84


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_myfoostruct[] =
      {
        { "str_mem", &CORBA::_tc_string },
        { "rec_mem", &_tc_myfoostructseq }
      };
  
static TAO::TypeCode::Recursive_Type<
  TAO::TypeCode::Struct<
    char const *,
    ::CORBA::TypeCode_ptr const *,
    TAO::TypeCode::Struct_Field<
      char const *,
      ::CORBA::TypeCode_ptr const *> const *,
    TAO::Null_RefCount_Policy>,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *>
_tao_tc_myfoostruct (
  ::CORBA::tk_struct,
  "IDL:myfoostruct:1.0",
  "myfoostruct",
  _tao_fields_myfoostruct,
  2);

::CORBA::TypeCode_ptr const _tc_myfoostruct =
  &_tao_tc_myfoostruct;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_cs.cpp:55

void
myfoostruct::_tao_any_destructor (
    void *_tao_void_pointer)
{
  myfoostruct *_tao_tmp_pointer =
    static_cast<myfoostruct *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50



nasty::nasty (
    const char * _tao_id,
    const myfoostruct & _tao_rec_info)
  : ::CORBA::UserException (
        "IDL:nasty:1.0",
        "nasty")
{
  this->id = ::CORBA::string_dup (_tao_id);
  this->rec_info = _tao_rec_info;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/exception_cs.cpp:97

nasty::nasty ()
  : ::CORBA::UserException (
        "IDL:nasty:1.0",
        "nasty")
{
}

nasty::nasty (const ::nasty &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ())
{
  this->id = ::CORBA::string_dup (_tao_excp.id.in ());
  this->rec_info = _tao_excp.rec_info;
}

nasty&
nasty::operator= (const ::nasty &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  this->id = ::CORBA::string_dup (_tao_excp.id.in ());
  this->rec_info = _tao_excp.rec_info;
  return *this;
}

void nasty::_tao_any_destructor (void *_tao_void_pointer)
{
  nasty *_tao_tmp_pointer =
    static_cast<nasty *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

nasty *
nasty::_downcast (::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<nasty *> (_tao_excp);
}

const nasty *
nasty::_downcast (::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const nasty *> (_tao_excp);
}

::CORBA::Exception *nasty::_alloc ()
{
  ::CORBA::Exception *retval {};
  ACE_NEW_RETURN (retval, ::nasty, nullptr);
  return retval;
}

::CORBA::Exception *
nasty::_tao_duplicate () const
{
  ::CORBA::Exception *result {};
  ACE_NEW_RETURN (result, ::nasty (*this), nullptr);
  return result;
}

void nasty::_raise () const
{
  throw *this;
}

void nasty::_tao_encode (TAO_OutputCDR &cdr) const
{
  if (!(cdr << *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}

void nasty::_tao_decode (TAO_InputCDR &cdr)
{
  if (!(cdr >> *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}

// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr nasty::_tao_type () const
{
  return ::_tc_nasty;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:84

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_nasty[] =
      {
        { "id", &CORBA::_tc_string },
        { "rec_info", &_tc_myfoostruct }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_nasty (
  ::CORBA::tk_except,
  "IDL:nasty:1.0",
  "nasty",
  _tao_fields_nasty,
  2);

::CORBA::TypeCode_ptr const _tc_nasty =
  &_tao_tc_nasty;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_OCTETSEQSEQ_CS_)
#define _OCTETSEQSEQ_CS_

OctetSeqSeq::OctetSeqSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< CORBA::OctetSeq> (max)
{}

OctetSeqSeq::OctetSeqSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    CORBA::OctetSeq * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< CORBA::OctetSeq>
    (max, length, buffer, release)
{}

void OctetSeqSeq::_tao_any_destructor (
    void * _tao_void_pointer)
{
  OctetSeqSeq * _tao_tmp_pointer =
    static_cast<OctetSeqSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_OctetSeqSeq_GUARD
#define _TAO_TYPECODE_OctetSeqSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        OctetSeqSeq_0 (
          ::CORBA::tk_sequence,
          &CORBA::_tc_OctetSeq,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_OctetSeqSeq_0 =
        &OctetSeqSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_OctetSeqSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_OctetSeqSeq (
    ::CORBA::tk_alias,
    "IDL:OctetSeqSeq:1.0",
    "OctetSeqSeq",
    &TAO::TypeCode::tc_OctetSeqSeq_0);
  
::CORBA::TypeCode_ptr const _tc_OctetSeqSeq =
  &_tao_tc_OctetSeqSeq;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for seqLocal.

seqLocal_ptr
TAO::Objref_Traits<seqLocal>::duplicate (seqLocal_ptr p)
{
  return seqLocal::_duplicate (p);
}

void
TAO::Objref_Traits<seqLocal>::release (seqLocal_ptr p)
{
  ::CORBA::release (p);
}

seqLocal_ptr
TAO::Objref_Traits<seqLocal>::nil ()
{
  return seqLocal::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<seqLocal>::marshal (const seqLocal_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



seqLocal::seqLocal ()
{}void
seqLocal::_tao_any_destructor (void *_tao_void_pointer)
{
  seqLocal *_tao_tmp_pointer =
    static_cast<seqLocal *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

seqLocal_ptr
seqLocal::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return seqLocal::_duplicate (
      dynamic_cast<seqLocal_ptr> (_tao_objref));
}

seqLocal_ptr
seqLocal::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return seqLocal::_duplicate (
      dynamic_cast<seqLocal_ptr> (_tao_objref));
}

seqLocal_ptr
seqLocal::_nil ()
{
  return nullptr;
}

seqLocal_ptr
seqLocal::_duplicate (seqLocal_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
seqLocal::_tao_release (seqLocal_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
seqLocal::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:seqLocal:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* seqLocal::_interface_repository_id () const
{
  return "IDL:seqLocal:1.0";
}

const char* seqLocal::_desc_repository_id ()
{
  return "IDL:seqLocal:1.0";
}

const char* seqLocal::_desc_interface_name ()
{
  return "seqLocal";
}

::CORBA::Boolean
seqLocal::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_seqLocal (
    ::CORBA::tk_local_interface,
    "IDL:seqLocal:1.0",
    "seqLocal");
  
::CORBA::TypeCode_ptr const _tc_seqLocal =
  &_tao_tc_seqLocal;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_SEQLOCALSEQ_CS_)
#define _SEQLOCALSEQ_CS_

seqLocalSeq::seqLocalSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_object_reference_sequence<
        seqLocal,
        seqLocal_var
      > (max)
{}

seqLocalSeq::seqLocalSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    seqLocal_ptr * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_object_reference_sequence<
        seqLocal,
        seqLocal_var
      >
    (max, length, buffer, release)
{}

void seqLocalSeq::_tao_any_destructor (
    void * _tao_void_pointer)
{
  seqLocalSeq * _tao_tmp_pointer =
    static_cast<seqLocalSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_seqLocalSeq_GUARD
#define _TAO_TYPECODE_seqLocalSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        seqLocalSeq_0 (
          ::CORBA::tk_sequence,
          &_tc_seqLocal,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_seqLocalSeq_0 =
        &seqLocalSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_seqLocalSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_seqLocalSeq (
    ::CORBA::tk_alias,
    "IDL:seqLocalSeq:1.0",
    "seqLocalSeq",
    &TAO::TypeCode::tc_seqLocalSeq_0);
  
::CORBA::TypeCode_ptr const _tc_seqLocalSeq =
  &_tao_tc_seqLocalSeq;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_DEPLOYMENT_COMPONENTPACKAGEDESCRIPTIONS_CS_)
#define _DEPLOYMENT_COMPONENTPACKAGEDESCRIPTIONS_CS_

Deployment::ComponentPackageDescriptions::ComponentPackageDescriptions (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< ComponentPackageDescription> (max)
{}

Deployment::ComponentPackageDescriptions::ComponentPackageDescriptions (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Deployment::ComponentPackageDescription * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< ComponentPackageDescription>
    (max, length, buffer, release)
{}

void Deployment::ComponentPackageDescriptions::_tao_any_destructor (
    void * _tao_void_pointer)
{
  ComponentPackageDescriptions * _tao_tmp_pointer =
    static_cast<ComponentPackageDescriptions *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_Deployment_ComponentPackageDescriptions_GUARD
#define _TAO_TYPECODE_Deployment_ComponentPackageDescriptions_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        Deployment_ComponentPackageDescriptions_0 (
          ::CORBA::tk_sequence,
          &Deployment::_tc_ComponentPackageDescription,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_Deployment_ComponentPackageDescriptions_0 =
        &Deployment_ComponentPackageDescriptions_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_Deployment_ComponentPackageDescriptions_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_Deployment_ComponentPackageDescriptions (
    ::CORBA::tk_alias,
    "IDL:Deployment/ComponentPackageDescriptions:1.0",
    "ComponentPackageDescriptions",
    &TAO::TypeCode::tc_Deployment_ComponentPackageDescriptions_0);
  

namespace Deployment
{
  ::CORBA::TypeCode_ptr const _tc_ComponentPackageDescriptions =
    &_tao_tc_Deployment_ComponentPackageDescriptions;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:84


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_Deployment_ComponentAssemblyDescription[] =
      {
        { "instance", &Deployment::_tc_ComponentPackageDescriptions }
      };
  
static TAO::TypeCode::Recursive_Type<
  TAO::TypeCode::Struct<
    char const *,
    ::CORBA::TypeCode_ptr const *,
    TAO::TypeCode::Struct_Field<
      char const *,
      ::CORBA::TypeCode_ptr const *> const *,
    TAO::Null_RefCount_Policy>,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *>
_tao_tc_Deployment_ComponentAssemblyDescription (
  ::CORBA::tk_struct,
  "IDL:Deployment/ComponentAssemblyDescription:1.0",
  "ComponentAssemblyDescription",
  _tao_fields_Deployment_ComponentAssemblyDescription,
  1);


namespace Deployment
{
  ::CORBA::TypeCode_ptr const _tc_ComponentAssemblyDescription =
    &_tao_tc_Deployment_ComponentAssemblyDescription;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_cs.cpp:55

void
Deployment::ComponentAssemblyDescription::_tao_any_destructor (
    void *_tao_void_pointer)
{
  ComponentAssemblyDescription *_tao_tmp_pointer =
    static_cast<ComponentAssemblyDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_DEPLOYMENT_COMPONENTASSEMBLYDESCRIPTIONS_CS_)
#define _DEPLOYMENT_COMPONENTASSEMBLYDESCRIPTIONS_CS_

Deployment::ComponentAssemblyDescriptions::ComponentAssemblyDescriptions (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< ComponentAssemblyDescription> (max)
{}

Deployment::ComponentAssemblyDescriptions::ComponentAssemblyDescriptions (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Deployment::ComponentAssemblyDescription * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< ComponentAssemblyDescription>
    (max, length, buffer, release)
{}

void Deployment::ComponentAssemblyDescriptions::_tao_any_destructor (
    void * _tao_void_pointer)
{
  ComponentAssemblyDescriptions * _tao_tmp_pointer =
    static_cast<ComponentAssemblyDescriptions *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_Deployment_ComponentAssemblyDescriptions_GUARD
#define _TAO_TYPECODE_Deployment_ComponentAssemblyDescriptions_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        Deployment_ComponentAssemblyDescriptions_0 (
          ::CORBA::tk_sequence,
          &Deployment::_tc_ComponentAssemblyDescription,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_Deployment_ComponentAssemblyDescriptions_0 =
        &Deployment_ComponentAssemblyDescriptions_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_Deployment_ComponentAssemblyDescriptions_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_Deployment_ComponentAssemblyDescriptions (
    ::CORBA::tk_alias,
    "IDL:Deployment/ComponentAssemblyDescriptions:1.0",
    "ComponentAssemblyDescriptions",
    &TAO::TypeCode::tc_Deployment_ComponentAssemblyDescriptions_0);
  

namespace Deployment
{
  ::CORBA::TypeCode_ptr const _tc_ComponentAssemblyDescriptions =
    &_tao_tc_Deployment_ComponentAssemblyDescriptions;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_DEPLOYMENT_NAMEDIMPLEMENTATIONARTIFACTS_CS_)
#define _DEPLOYMENT_NAMEDIMPLEMENTATIONARTIFACTS_CS_

Deployment::NamedImplementationArtifacts::NamedImplementationArtifacts (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< NamedImplementationArtifact> (max)
{}

Deployment::NamedImplementationArtifacts::NamedImplementationArtifacts (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Deployment::NamedImplementationArtifact * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< NamedImplementationArtifact>
    (max, length, buffer, release)
{}

void Deployment::NamedImplementationArtifacts::_tao_any_destructor (
    void * _tao_void_pointer)
{
  NamedImplementationArtifacts * _tao_tmp_pointer =
    static_cast<NamedImplementationArtifacts *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_Deployment_NamedImplementationArtifacts_GUARD
#define _TAO_TYPECODE_Deployment_NamedImplementationArtifacts_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        Deployment_NamedImplementationArtifacts_0 (
          ::CORBA::tk_sequence,
          &Deployment::_tc_NamedImplementationArtifact,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_Deployment_NamedImplementationArtifacts_0 =
        &Deployment_NamedImplementationArtifacts_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_Deployment_NamedImplementationArtifacts_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_Deployment_NamedImplementationArtifacts (
    ::CORBA::tk_alias,
    "IDL:Deployment/NamedImplementationArtifacts:1.0",
    "NamedImplementationArtifacts",
    &TAO::TypeCode::tc_Deployment_NamedImplementationArtifacts_0);
  

namespace Deployment
{
  ::CORBA::TypeCode_ptr const _tc_NamedImplementationArtifacts =
    &_tao_tc_Deployment_NamedImplementationArtifacts;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:84


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_Deployment_NamedImplementationArtifact[] =
      {
        { "str", &CORBA::_tc_string },
        { "dependsOn", &Deployment::_tc_NamedImplementationArtifacts }
      };
  
static TAO::TypeCode::Recursive_Type<
  TAO::TypeCode::Struct<
    char const *,
    ::CORBA::TypeCode_ptr const *,
    TAO::TypeCode::Struct_Field<
      char const *,
      ::CORBA::TypeCode_ptr const *> const *,
    TAO::Null_RefCount_Policy>,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *>
_tao_tc_Deployment_NamedImplementationArtifact (
  ::CORBA::tk_struct,
  "IDL:Deployment/NamedImplementationArtifact:1.0",
  "NamedImplementationArtifact",
  _tao_fields_Deployment_NamedImplementationArtifact,
  2);


namespace Deployment
{
  ::CORBA::TypeCode_ptr const _tc_NamedImplementationArtifact =
    &_tao_tc_Deployment_NamedImplementationArtifact;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_cs.cpp:55

void
Deployment::NamedImplementationArtifact::_tao_any_destructor (
    void *_tao_void_pointer)
{
  NamedImplementationArtifact *_tao_tmp_pointer =
    static_cast<NamedImplementationArtifact *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:84


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_Deployment_MonolithicImplementationDescription[] =
      {
        { "primaryArtifact", &Deployment::_tc_NamedImplementationArtifacts }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_Deployment_MonolithicImplementationDescription (
  ::CORBA::tk_struct,
  "IDL:Deployment/MonolithicImplementationDescription:1.0",
  "MonolithicImplementationDescription",
  _tao_fields_Deployment_MonolithicImplementationDescription,
  1);


namespace Deployment
{
  ::CORBA::TypeCode_ptr const _tc_MonolithicImplementationDescription =
    &_tao_tc_Deployment_MonolithicImplementationDescription;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_cs.cpp:55

void
Deployment::MonolithicImplementationDescription::_tao_any_destructor (
    void *_tao_void_pointer)
{
  MonolithicImplementationDescription *_tao_tmp_pointer =
    static_cast<MonolithicImplementationDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_DEPLOYMENT_MONOLITHICIMPLEMENTATIONDESCRIPTIONS_CS_)
#define _DEPLOYMENT_MONOLITHICIMPLEMENTATIONDESCRIPTIONS_CS_

Deployment::MonolithicImplementationDescriptions::MonolithicImplementationDescriptions (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< MonolithicImplementationDescription> (max)
{}

Deployment::MonolithicImplementationDescriptions::MonolithicImplementationDescriptions (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Deployment::MonolithicImplementationDescription * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< MonolithicImplementationDescription>
    (max, length, buffer, release)
{}

void Deployment::MonolithicImplementationDescriptions::_tao_any_destructor (
    void * _tao_void_pointer)
{
  MonolithicImplementationDescriptions * _tao_tmp_pointer =
    static_cast<MonolithicImplementationDescriptions *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_Deployment_MonolithicImplementationDescriptions_GUARD
#define _TAO_TYPECODE_Deployment_MonolithicImplementationDescriptions_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        Deployment_MonolithicImplementationDescriptions_0 (
          ::CORBA::tk_sequence,
          &Deployment::_tc_MonolithicImplementationDescription,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_Deployment_MonolithicImplementationDescriptions_0 =
        &Deployment_MonolithicImplementationDescriptions_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_Deployment_MonolithicImplementationDescriptions_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_Deployment_MonolithicImplementationDescriptions (
    ::CORBA::tk_alias,
    "IDL:Deployment/MonolithicImplementationDescriptions:1.0",
    "MonolithicImplementationDescriptions",
    &TAO::TypeCode::tc_Deployment_MonolithicImplementationDescriptions_0);
  

namespace Deployment
{
  ::CORBA::TypeCode_ptr const _tc_MonolithicImplementationDescriptions =
    &_tao_tc_Deployment_MonolithicImplementationDescriptions;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:84


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_Deployment_PackagedComponentImplementation[] =
      {
        { "assemblyImpl", &Deployment::_tc_ComponentAssemblyDescriptions },
        { "monolithicImpl", &Deployment::_tc_MonolithicImplementationDescriptions }
      };
  
static TAO::TypeCode::Recursive_Type<
  TAO::TypeCode::Struct<
    char const *,
    ::CORBA::TypeCode_ptr const *,
    TAO::TypeCode::Struct_Field<
      char const *,
      ::CORBA::TypeCode_ptr const *> const *,
    TAO::Null_RefCount_Policy>,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *>
_tao_tc_Deployment_PackagedComponentImplementation (
  ::CORBA::tk_struct,
  "IDL:Deployment/PackagedComponentImplementation:1.0",
  "PackagedComponentImplementation",
  _tao_fields_Deployment_PackagedComponentImplementation,
  2);


namespace Deployment
{
  ::CORBA::TypeCode_ptr const _tc_PackagedComponentImplementation =
    &_tao_tc_Deployment_PackagedComponentImplementation;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_cs.cpp:55

void
Deployment::PackagedComponentImplementation::_tao_any_destructor (
    void *_tao_void_pointer)
{
  PackagedComponentImplementation *_tao_tmp_pointer =
    static_cast<PackagedComponentImplementation *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_DEPLOYMENT_PACKAGEDCOMPONENTIMPLEMENTATIONS_CS_)
#define _DEPLOYMENT_PACKAGEDCOMPONENTIMPLEMENTATIONS_CS_

Deployment::PackagedComponentImplementations::PackagedComponentImplementations (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< PackagedComponentImplementation> (max)
{}

Deployment::PackagedComponentImplementations::PackagedComponentImplementations (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Deployment::PackagedComponentImplementation * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< PackagedComponentImplementation>
    (max, length, buffer, release)
{}

void Deployment::PackagedComponentImplementations::_tao_any_destructor (
    void * _tao_void_pointer)
{
  PackagedComponentImplementations * _tao_tmp_pointer =
    static_cast<PackagedComponentImplementations *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_Deployment_PackagedComponentImplementations_GUARD
#define _TAO_TYPECODE_Deployment_PackagedComponentImplementations_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        Deployment_PackagedComponentImplementations_0 (
          ::CORBA::tk_sequence,
          &Deployment::_tc_PackagedComponentImplementation,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_Deployment_PackagedComponentImplementations_0 =
        &Deployment_PackagedComponentImplementations_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_Deployment_PackagedComponentImplementations_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_Deployment_PackagedComponentImplementations (
    ::CORBA::tk_alias,
    "IDL:Deployment/PackagedComponentImplementations:1.0",
    "PackagedComponentImplementations",
    &TAO::TypeCode::tc_Deployment_PackagedComponentImplementations_0);
  

namespace Deployment
{
  ::CORBA::TypeCode_ptr const _tc_PackagedComponentImplementations =
    &_tao_tc_Deployment_PackagedComponentImplementations;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:84


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_Deployment_ComponentPackageDescription[] =
      {
        { "str", &CORBA::_tc_string },
        { "implementation", &Deployment::_tc_PackagedComponentImplementations }
      };
  
static TAO::TypeCode::Recursive_Type<
  TAO::TypeCode::Struct<
    char const *,
    ::CORBA::TypeCode_ptr const *,
    TAO::TypeCode::Struct_Field<
      char const *,
      ::CORBA::TypeCode_ptr const *> const *,
    TAO::Null_RefCount_Policy>,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *>
_tao_tc_Deployment_ComponentPackageDescription (
  ::CORBA::tk_struct,
  "IDL:Deployment/ComponentPackageDescription:1.0",
  "ComponentPackageDescription",
  _tao_fields_Deployment_ComponentPackageDescription,
  2);


namespace Deployment
{
  ::CORBA::TypeCode_ptr const _tc_ComponentPackageDescription =
    &_tao_tc_Deployment_ComponentPackageDescription;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_cs.cpp:55

void
Deployment::ComponentPackageDescription::_tao_any_destructor (
    void *_tao_void_pointer)
{
  ComponentPackageDescription *_tao_tmp_pointer =
    static_cast<ComponentPackageDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {


/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::myfoostructseq &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::myfoostructseq>::insert_copy (
    _tao_any,
    ::myfoostructseq::_tao_any_destructor,
    ::_tc_myfoostructseq,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::myfoostructseq *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::myfoostructseq>::insert (
    _tao_any,
    ::myfoostructseq::_tao_any_destructor,
    ::_tc_myfoostructseq,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::myfoostructseq *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::myfoostructseq>::extract (
    _tao_any,
    ::myfoostructseq::_tao_any_destructor,
    ::_tc_myfoostructseq,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::myfoostruct &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::myfoostruct>::insert_copy (
    _tao_any,
    ::myfoostruct::_tao_any_destructor,
    _tc_myfoostruct,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::myfoostruct *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::myfoostruct>::insert (
    _tao_any,
    ::myfoostruct::_tao_any_destructor,
    _tc_myfoostruct,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::myfoostruct *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::myfoostruct>::extract (
    _tao_any,
    ::myfoostruct::_tao_any_destructor,
    _tc_myfoostruct,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Dual_Impl_T<nasty>::demarshal_value (TAO_InputCDR & cdr)
  {
    ::CORBA::String_var id;

    if (!(cdr >> id.out ()))
      {
        return false;
      }
    
    try
      {
        this->value_->_tao_decode (cdr);
      }
    catch (const ::CORBA::Exception &)
      {
        return false;
      }

    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const nasty &_tao_elem)
{
  TAO::Any_Dual_Impl_T<nasty>::insert_copy (
    _tao_any,
    nasty::_tao_any_destructor,
    _tc_nasty,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  nasty *_tao_elem)
{
  TAO::Any_Dual_Impl_T<nasty>::insert (
    _tao_any,
    nasty::_tao_any_destructor,
    _tc_nasty,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const nasty *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T<nasty>::extract (
    _tao_any,
    nasty::_tao_any_destructor,
    _tc_nasty,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {


/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::OctetSeqSeq &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::OctetSeqSeq>::insert_copy (
    _tao_any,
    ::OctetSeqSeq::_tao_any_destructor,
    ::_tc_OctetSeqSeq,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::OctetSeqSeq *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::OctetSeqSeq>::insert (
    _tao_any,
    ::OctetSeqSeq::_tao_any_destructor,
    ::_tc_OctetSeqSeq,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::OctetSeqSeq *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::OctetSeqSeq>::extract (
    _tao_any,
    ::OctetSeqSeq::_tao_any_destructor,
    ::_tc_OctetSeqSeq,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<seqLocal>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<seqLocal>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<seqLocal>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  seqLocal_ptr _tao_elem)
{
  seqLocal_ptr _tao_objptr =
    seqLocal::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  seqLocal_ptr *_tao_elem)
{
  TAO::Any_Impl_T<seqLocal>::insert (
    _tao_any,
    seqLocal::_tao_any_destructor,
    _tc_seqLocal,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    seqLocal_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<seqLocal>::extract (
        _tao_any,
        seqLocal::_tao_any_destructor,
        _tc_seqLocal,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Dual_Impl_T<seqLocalSeq>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Dual_Impl_T<seqLocalSeq>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {


/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::seqLocalSeq &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::seqLocalSeq>::insert_copy (
    _tao_any,
    ::seqLocalSeq::_tao_any_destructor,
    ::_tc_seqLocalSeq,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::seqLocalSeq *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::seqLocalSeq>::insert (
    _tao_any,
    ::seqLocalSeq::_tao_any_destructor,
    ::_tc_seqLocalSeq,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::seqLocalSeq *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::seqLocalSeq>::extract (
    _tao_any,
    ::seqLocalSeq::_tao_any_destructor,
    ::_tc_seqLocalSeq,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {


/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::Deployment::ComponentPackageDescriptions &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::ComponentPackageDescriptions>::insert_copy (
    _tao_any,
    ::Deployment::ComponentPackageDescriptions::_tao_any_destructor,
    ::Deployment::_tc_ComponentPackageDescriptions,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::Deployment::ComponentPackageDescriptions *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::ComponentPackageDescriptions>::insert (
    _tao_any,
    ::Deployment::ComponentPackageDescriptions::_tao_any_destructor,
    ::Deployment::_tc_ComponentPackageDescriptions,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::Deployment::ComponentPackageDescriptions *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::Deployment::ComponentPackageDescriptions>::extract (
    _tao_any,
    ::Deployment::ComponentPackageDescriptions::_tao_any_destructor,
    ::Deployment::_tc_ComponentPackageDescriptions,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::Deployment::ComponentAssemblyDescription &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::ComponentAssemblyDescription>::insert_copy (
    _tao_any,
    ::Deployment::ComponentAssemblyDescription::_tao_any_destructor,
    Deployment::_tc_ComponentAssemblyDescription,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::Deployment::ComponentAssemblyDescription *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::ComponentAssemblyDescription>::insert (
    _tao_any,
    ::Deployment::ComponentAssemblyDescription::_tao_any_destructor,
    Deployment::_tc_ComponentAssemblyDescription,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::Deployment::ComponentAssemblyDescription *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::Deployment::ComponentAssemblyDescription>::extract (
    _tao_any,
    ::Deployment::ComponentAssemblyDescription::_tao_any_destructor,
    Deployment::_tc_ComponentAssemblyDescription,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {


/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::Deployment::ComponentAssemblyDescriptions &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::ComponentAssemblyDescriptions>::insert_copy (
    _tao_any,
    ::Deployment::ComponentAssemblyDescriptions::_tao_any_destructor,
    ::Deployment::_tc_ComponentAssemblyDescriptions,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::Deployment::ComponentAssemblyDescriptions *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::ComponentAssemblyDescriptions>::insert (
    _tao_any,
    ::Deployment::ComponentAssemblyDescriptions::_tao_any_destructor,
    ::Deployment::_tc_ComponentAssemblyDescriptions,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::Deployment::ComponentAssemblyDescriptions *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::Deployment::ComponentAssemblyDescriptions>::extract (
    _tao_any,
    ::Deployment::ComponentAssemblyDescriptions::_tao_any_destructor,
    ::Deployment::_tc_ComponentAssemblyDescriptions,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {


/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::Deployment::NamedImplementationArtifacts &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::NamedImplementationArtifacts>::insert_copy (
    _tao_any,
    ::Deployment::NamedImplementationArtifacts::_tao_any_destructor,
    ::Deployment::_tc_NamedImplementationArtifacts,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::Deployment::NamedImplementationArtifacts *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::NamedImplementationArtifacts>::insert (
    _tao_any,
    ::Deployment::NamedImplementationArtifacts::_tao_any_destructor,
    ::Deployment::_tc_NamedImplementationArtifacts,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::Deployment::NamedImplementationArtifacts *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::Deployment::NamedImplementationArtifacts>::extract (
    _tao_any,
    ::Deployment::NamedImplementationArtifacts::_tao_any_destructor,
    ::Deployment::_tc_NamedImplementationArtifacts,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::Deployment::NamedImplementationArtifact &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::NamedImplementationArtifact>::insert_copy (
    _tao_any,
    ::Deployment::NamedImplementationArtifact::_tao_any_destructor,
    Deployment::_tc_NamedImplementationArtifact,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::Deployment::NamedImplementationArtifact *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::NamedImplementationArtifact>::insert (
    _tao_any,
    ::Deployment::NamedImplementationArtifact::_tao_any_destructor,
    Deployment::_tc_NamedImplementationArtifact,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::Deployment::NamedImplementationArtifact *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::Deployment::NamedImplementationArtifact>::extract (
    _tao_any,
    ::Deployment::NamedImplementationArtifact::_tao_any_destructor,
    Deployment::_tc_NamedImplementationArtifact,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::Deployment::MonolithicImplementationDescription &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::MonolithicImplementationDescription>::insert_copy (
    _tao_any,
    ::Deployment::MonolithicImplementationDescription::_tao_any_destructor,
    Deployment::_tc_MonolithicImplementationDescription,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::Deployment::MonolithicImplementationDescription *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::MonolithicImplementationDescription>::insert (
    _tao_any,
    ::Deployment::MonolithicImplementationDescription::_tao_any_destructor,
    Deployment::_tc_MonolithicImplementationDescription,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::Deployment::MonolithicImplementationDescription *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::Deployment::MonolithicImplementationDescription>::extract (
    _tao_any,
    ::Deployment::MonolithicImplementationDescription::_tao_any_destructor,
    Deployment::_tc_MonolithicImplementationDescription,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {


/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::Deployment::MonolithicImplementationDescriptions &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::MonolithicImplementationDescriptions>::insert_copy (
    _tao_any,
    ::Deployment::MonolithicImplementationDescriptions::_tao_any_destructor,
    ::Deployment::_tc_MonolithicImplementationDescriptions,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::Deployment::MonolithicImplementationDescriptions *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::MonolithicImplementationDescriptions>::insert (
    _tao_any,
    ::Deployment::MonolithicImplementationDescriptions::_tao_any_destructor,
    ::Deployment::_tc_MonolithicImplementationDescriptions,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::Deployment::MonolithicImplementationDescriptions *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::Deployment::MonolithicImplementationDescriptions>::extract (
    _tao_any,
    ::Deployment::MonolithicImplementationDescriptions::_tao_any_destructor,
    ::Deployment::_tc_MonolithicImplementationDescriptions,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::Deployment::PackagedComponentImplementation &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::PackagedComponentImplementation>::insert_copy (
    _tao_any,
    ::Deployment::PackagedComponentImplementation::_tao_any_destructor,
    Deployment::_tc_PackagedComponentImplementation,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::Deployment::PackagedComponentImplementation *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::PackagedComponentImplementation>::insert (
    _tao_any,
    ::Deployment::PackagedComponentImplementation::_tao_any_destructor,
    Deployment::_tc_PackagedComponentImplementation,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::Deployment::PackagedComponentImplementation *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::Deployment::PackagedComponentImplementation>::extract (
    _tao_any,
    ::Deployment::PackagedComponentImplementation::_tao_any_destructor,
    Deployment::_tc_PackagedComponentImplementation,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {


/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::Deployment::PackagedComponentImplementations &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::PackagedComponentImplementations>::insert_copy (
    _tao_any,
    ::Deployment::PackagedComponentImplementations::_tao_any_destructor,
    ::Deployment::_tc_PackagedComponentImplementations,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::Deployment::PackagedComponentImplementations *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::PackagedComponentImplementations>::insert (
    _tao_any,
    ::Deployment::PackagedComponentImplementations::_tao_any_destructor,
    ::Deployment::_tc_PackagedComponentImplementations,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::Deployment::PackagedComponentImplementations *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::Deployment::PackagedComponentImplementations>::extract (
    _tao_any,
    ::Deployment::PackagedComponentImplementations::_tao_any_destructor,
    ::Deployment::_tc_PackagedComponentImplementations,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::Deployment::ComponentPackageDescription &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::ComponentPackageDescription>::insert_copy (
    _tao_any,
    ::Deployment::ComponentPackageDescription::_tao_any_destructor,
    Deployment::_tc_ComponentPackageDescription,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::Deployment::ComponentPackageDescription *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::Deployment::ComponentPackageDescription>::insert (
    _tao_any,
    ::Deployment::ComponentPackageDescription::_tao_any_destructor,
    Deployment::_tc_ComponentPackageDescription,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::Deployment::ComponentPackageDescription *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::Deployment::ComponentPackageDescription>::extract (
    _tao_any,
    ::Deployment::ComponentPackageDescription::_tao_any_destructor,
    Deployment::_tc_ComponentPackageDescription,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_myfoostructseq_CPP_
#define _TAO_CDR_OP_myfoostructseq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const myfoostructseq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    myfoostructseq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_myfoostructseq_CPP_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const myfoostruct &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.str_mem.in ()) &&
    (strm << _tao_aggregate.rec_mem) &&
    true;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    myfoostruct &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.str_mem.out ()) &&
    (strm >> _tao_aggregate.rec_mem) &&
    true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const nasty &_tao_aggregate)
{
  // First marshal the repository ID.
  if (strm << _tao_aggregate._rep_id ())
    {
      // Now marshal the members (if any).
      return (
        (strm << _tao_aggregate.id.in ()) &&
        (strm << _tao_aggregate.rec_info)
       );
    }
  else
    {
      return false;
    }
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    nasty &_tao_aggregate)
{
  // Demarshal the members.
  return (
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.rec_info)
  );
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_OctetSeqSeq_CPP_
#define _TAO_CDR_OP_OctetSeqSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OctetSeqSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OctetSeqSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_OctetSeqSeq_CPP_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_Deployment_ComponentPackageDescriptions_CPP_
#define _TAO_CDR_OP_Deployment_ComponentPackageDescriptions_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::ComponentPackageDescriptions &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::ComponentPackageDescriptions &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Deployment_ComponentPackageDescriptions_CPP_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::ComponentAssemblyDescription &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.instance) &&
    true;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::ComponentAssemblyDescription &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.instance) &&
    true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_Deployment_ComponentAssemblyDescriptions_CPP_
#define _TAO_CDR_OP_Deployment_ComponentAssemblyDescriptions_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::ComponentAssemblyDescriptions &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::ComponentAssemblyDescriptions &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Deployment_ComponentAssemblyDescriptions_CPP_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_Deployment_NamedImplementationArtifacts_CPP_
#define _TAO_CDR_OP_Deployment_NamedImplementationArtifacts_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::NamedImplementationArtifacts &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::NamedImplementationArtifacts &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Deployment_NamedImplementationArtifacts_CPP_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::NamedImplementationArtifact &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.str.in ()) &&
    (strm << _tao_aggregate.dependsOn) &&
    true;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::NamedImplementationArtifact &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.str.out ()) &&
    (strm >> _tao_aggregate.dependsOn) &&
    true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::MonolithicImplementationDescription &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.primaryArtifact) &&
    true;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::MonolithicImplementationDescription &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.primaryArtifact) &&
    true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_Deployment_MonolithicImplementationDescriptions_CPP_
#define _TAO_CDR_OP_Deployment_MonolithicImplementationDescriptions_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::MonolithicImplementationDescriptions &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::MonolithicImplementationDescriptions &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Deployment_MonolithicImplementationDescriptions_CPP_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::PackagedComponentImplementation &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.assemblyImpl) &&
    (strm << _tao_aggregate.monolithicImpl) &&
    true;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::PackagedComponentImplementation &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.assemblyImpl) &&
    (strm >> _tao_aggregate.monolithicImpl) &&
    true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_Deployment_PackagedComponentImplementations_CPP_
#define _TAO_CDR_OP_Deployment_PackagedComponentImplementations_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::PackagedComponentImplementations &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::PackagedComponentImplementations &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Deployment_PackagedComponentImplementations_CPP_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::ComponentPackageDescription &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.str.in ()) &&
    (strm << _tao_aggregate.implementation) &&
    true;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::ComponentPackageDescription &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.str.out ()) &&
    (strm >> _tao_aggregate.implementation) &&
    true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



