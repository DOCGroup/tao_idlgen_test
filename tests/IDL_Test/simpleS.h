// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:454

#ifndef _TAO_IDL_SIMPLES_GCEHOZ_H_
#define _TAO_IDL_SIMPLES_GCEHOZ_H_

#include /**/ "ace/pre.h"

#include "simpleC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Messaging/MessagingS.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
#include "tao/Messaging/AMH_Response_Handler.h"

#include /**/ "TAO_IDL_TEST_stub_export.h"
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class SArg_Traits< ::vec10>
    : public
        Var_Size_SArg_Traits_T<
            ::vec10,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_SIMPLE__SARG_TRAITS_)
#define _SIMPLE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::simple>
    : public Object_SArg_Traits_T<
        ::simple_ptr,
        ::simple_var,
        ::simple_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_SIMPLEEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_SIMPLEEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_simpleExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_simpleExceptionHolder *,
            ::AMH_simpleExceptionHolder_var,
            ::AMH_simpleExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_SIMPLEHANDLER__SARG_TRAITS_)
#define _AMI_SIMPLEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_simpleHandler>
    : public Object_SArg_Traits_T<
        ::AMI_simpleHandler_ptr,
        ::AMI_simpleHandler_var,
        ::AMI_simpleHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_SIMPLE2__SARG_TRAITS_)
#define _SIMPLE2__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::simple2>
    : public Object_SArg_Traits_T<
        ::simple2_ptr,
        ::simple2_var,
        ::simple2_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_SIMPLE2EXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_SIMPLE2EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_simple2ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_simple2ExceptionHolder *,
            ::AMH_simple2ExceptionHolder_var,
            ::AMH_simple2ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_SIMPLE2HANDLER__SARG_TRAITS_)
#define _AMI_SIMPLE2HANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_simple2Handler>
    : public Object_SArg_Traits_T<
        ::AMI_simple2Handler_ptr,
        ::AMI_simple2Handler_var,
        ::AMI_simple2Handler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_simple;
typedef POA_AMH_simple *POA_AMH_simple_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_simple
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_simple ();

public:
  POA_AMH_simple (const POA_AMH_simple& rhs);
  virtual ~POA_AMH_simple () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  simple *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void op_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void op (
    AMH_simpleResponseHandler_ptr _tao_rh,
    ::CORBA::Long a,
    ::CORBA::Long c
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_simple;
typedef POA_simple *POA_simple_ptr;

class _TAO_simple_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_simple
  : public virtual PortableServer::ServantBase
{
protected:
  POA_simple ();

public:
  /// Useful for template programming.
  typedef ::simple _stub_type;
  typedef ::simple_ptr _stub_ptr_type;
  typedef ::simple_var _stub_var_type;

  POA_simple (const POA_simple& rhs);
  virtual ~POA_simple () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::simple *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::CORBA::Long op (
    ::CORBA::Long a,
    ::simple_out b,
    ::CORBA::Long & c) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_simple_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_simple_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_simpleResponseHandler;
typedef POA_TAO_AMH_simpleResponseHandler *POA_TAO_AMH_simpleResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_simpleResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_simpleResponseHandler
{
public:
  POA_TAO_AMH_simpleResponseHandler () = default;
  virtual ~POA_TAO_AMH_simpleResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op (
    ::CORBA::Long return_value,
    ::simple_ptr b,
    ::CORBA::Long c) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op_excep (
    ::AMH_simpleExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_simpleHandler;
typedef POA_AMI_simpleHandler *POA_AMI_simpleHandler_ptr;

class _TAO_AMI_simpleHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_simpleHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_simpleHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_simpleHandler _stub_type;
  typedef ::AMI_simpleHandler_ptr _stub_ptr_type;
  typedef ::AMI_simpleHandler_var _stub_var_type;

  POA_AMI_simpleHandler (const POA_AMI_simpleHandler& rhs);
  virtual ~POA_AMI_simpleHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_simpleHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op (
    ::CORBA::Long ami_return_val,
    ::simple_ptr b,
    ::CORBA::Long c) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void op_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_simpleHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_simpleHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_simple2;
typedef POA_AMH_simple2 *POA_AMH_simple2_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_simple2
  : public virtual POA_AMH_simple
    
{
protected:
  POA_AMH_simple2 ();

public:
  POA_AMH_simple2 (const POA_AMH_simple2& rhs);
  virtual ~POA_AMH_simple2 () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  simple2 *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void op2_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void op2 (
    AMH_simple2ResponseHandler_ptr _tao_rh,
    ::CORBA::Long a,
    ::simple_ptr b
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_simple2;
typedef POA_simple2 *POA_simple2_ptr;

class _TAO_simple2_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_simple2
  : public virtual POA_simple
{
protected:
  POA_simple2 ();

public:
  /// Useful for template programming.
  typedef ::simple2 _stub_type;
  typedef ::simple2_ptr _stub_ptr_type;
  typedef ::simple2_var _stub_var_type;

  POA_simple2 (const POA_simple2& rhs);
  virtual ~POA_simple2 () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::simple2 *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::CORBA::Long op2 (
    ::CORBA::Long a,
    ::simple_ptr b,
    ::simple2_out c) = 0;

  static void op2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_simple2_Direct_Proxy_Impl
  : public virtual ::_TAO_simple_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_simple2_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op2 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_simple2ResponseHandler;
typedef POA_TAO_AMH_simple2ResponseHandler *POA_TAO_AMH_simple2ResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_simple2ResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_simple2ResponseHandler
{
public:
  POA_TAO_AMH_simple2ResponseHandler () = default;
  virtual ~POA_TAO_AMH_simple2ResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op2 (
    ::CORBA::Long return_value,
    ::simple2_ptr c) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op2_excep (
    ::AMH_simple2ExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_simple2Handler;
typedef POA_AMI_simple2Handler *POA_AMI_simple2Handler_ptr;

class _TAO_AMI_simple2Handler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_simple2Handler
  : public virtual POA_AMI_simpleHandler
{
protected:
  POA_AMI_simple2Handler ();

public:
  /// Useful for template programming.
  typedef ::AMI_simple2Handler _stub_type;
  typedef ::AMI_simple2Handler_ptr _stub_ptr_type;
  typedef ::AMI_simple2Handler_var _stub_var_type;

  POA_AMI_simple2Handler (const POA_AMI_simple2Handler& rhs);
  virtual ~POA_AMI_simple2Handler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_simple2Handler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op2 (
    ::CORBA::Long ami_return_val,
    ::simple2_ptr c) = 0;

  static void op2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op2_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void op2_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_simple2Handler_Direct_Proxy_Impl
  : public virtual ::_TAO_AMI_simpleHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_simple2Handler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op2 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op2_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////



#include "simpleS_T.h"


#include /**/ "ace/post.h"

#endif /* ifndef */

