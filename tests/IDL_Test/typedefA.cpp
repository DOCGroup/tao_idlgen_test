// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

#include "typedefA.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Value_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Value_Field.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "tao/AnyTypeCode/Any_Array_Impl_T.h"
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:296


#ifndef _TAO_TYPECODE_TAO_A5_GUARD
#define _TAO_TYPECODE_TAO_A5_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        TAO_A5_5 (
          ::CORBA::tk_array,
          &CORBA::_tc_char,
          5U);
        
      ::CORBA::TypeCode_ptr const tc_TAO_A5 =
        &TAO_A5_5;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_TAO_A5_GUARD */
static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_TAO_A5 (
    ::CORBA::tk_alias,
    "IDL:TAO_A5:1.0",
    "TAO_A5",
    &TAO::TypeCode::tc_TAO_A5);
  
::CORBA::TypeCode_ptr const _tc_TAO_A5 =
  &_tao_tc_TAO_A5;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_TAO_C5 (
    ::CORBA::tk_alias,
    "IDL:TAO_C5:1.0",
    "TAO_C5",
    &_tc_TAO_A5);
  
::CORBA::TypeCode_ptr const _tc_TAO_C5 =
  &_tao_tc_TAO_C5;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_TAO_G5 (
    ::CORBA::tk_alias,
    "IDL:TAO_G5:1.0",
    "TAO_G5",
    &_tc_TAO_C5);
  
::CORBA::TypeCode_ptr const _tc_TAO_G5 =
  &_tao_tc_TAO_G5;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_TAO_J5 (
    ::CORBA::tk_alias,
    "IDL:TAO_J5:1.0",
    "TAO_J5",
    &_tc_TAO_G5);
  
::CORBA::TypeCode_ptr const _tc_TAO_J5 =
  &_tao_tc_TAO_J5;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:296


#ifndef _TAO_TYPECODE_TAO_M5_GUARD
#define _TAO_TYPECODE_TAO_M5_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        TAO_M5_5 (
          ::CORBA::tk_array,
          &_tc_TAO_J5,
          5U);
        
      ::CORBA::TypeCode_ptr const tc_TAO_M5 =
        &TAO_M5_5;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_TAO_M5_GUARD */
static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_TAO_M5 (
    ::CORBA::tk_alias,
    "IDL:TAO_M5:1.0",
    "TAO_M5",
    &TAO::TypeCode::tc_TAO_M5);
  
::CORBA::TypeCode_ptr const _tc_TAO_M5 =
  &_tao_tc_TAO_M5;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_TAO_R5 (
    ::CORBA::tk_alias,
    "IDL:TAO_R5:1.0",
    "TAO_R5",
    &_tc_TAO_M5);
  
::CORBA::TypeCode_ptr const _tc_TAO_R5 =
  &_tao_tc_TAO_R5;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_TAO_V5 (
    ::CORBA::tk_alias,
    "IDL:TAO_V5:1.0",
    "TAO_V5",
    &_tc_TAO_R5);
  
::CORBA::TypeCode_ptr const _tc_TAO_V5 =
  &_tao_tc_TAO_V5;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:296


#ifndef _TAO_TYPECODE_TAO_Z5_GUARD
#define _TAO_TYPECODE_TAO_Z5_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        TAO_Z5_5 (
          ::CORBA::tk_array,
          &_tc_TAO_V5,
          5U);
        
      ::CORBA::TypeCode_ptr const tc_TAO_Z5 =
        &TAO_Z5_5;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_TAO_Z5_GUARD */
static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_TAO_Z5 (
    ::CORBA::tk_alias,
    "IDL:TAO_Z5:1.0",
    "TAO_Z5",
    &TAO::TypeCode::tc_TAO_Z5);
  
::CORBA::TypeCode_ptr const _tc_TAO_Z5 =
  &_tao_tc_TAO_Z5;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:550


#ifndef _TAO_TYPECODE_CORBA_STRING_32_GUARD
#define _TAO_TYPECODE_CORBA_STRING_32_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::String<TAO::Null_RefCount_Policy>
        CORBA_STRING_32 (
          ::CORBA::tk_string,
          32U);
        
      ::CORBA::TypeCode_ptr const tc_CORBA_STRING_32 =
        &CORBA_STRING_32;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CORBA_STRING_32_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_TestModule_typedef_1 (
    ::CORBA::tk_alias,
    "IDL:TestModule/typedef_1:1.0",
    "typedef_1",
    &TAO::TypeCode::tc_CORBA_STRING_32);
  

namespace TestModule
{
  ::CORBA::TypeCode_ptr const _tc_typedef_1 =
    &_tao_tc_TestModule_typedef_1;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:550


#ifndef _TAO_TYPECODE_CORBA_STRING_32_GUARD
#define _TAO_TYPECODE_CORBA_STRING_32_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::String<TAO::Null_RefCount_Policy>
        CORBA_STRING_32 (
          ::CORBA::tk_string,
          32U);
        
      ::CORBA::TypeCode_ptr const tc_CORBA_STRING_32 =
        &CORBA_STRING_32;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CORBA_STRING_32_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_TestModule_typedef_2 (
    ::CORBA::tk_alias,
    "IDL:TestModule/typedef_2:1.0",
    "typedef_2",
    &TAO::TypeCode::tc_CORBA_STRING_32);
  

namespace TestModule
{
  ::CORBA::TypeCode_ptr const _tc_typedef_2 =
    &_tao_tc_TestModule_typedef_2;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_TestModule_TestInterface (
    ::CORBA::tk_objref,
    "IDL:TestModule/TestInterface:1.0",
    "TestInterface");
  

namespace TestModule
{
  ::CORBA::TypeCode_ptr const _tc_TestInterface =
    &_tao_tc_TestModule_TestInterface;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:63

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_TestModule_AMH_TestInterfaceExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_TestModule_AMH_TestInterfaceExceptionHolder (
    ::CORBA::tk_value,
    "IDL:TestModule/AMH_TestInterfaceExceptionHolder:1.0",
    "AMH_TestInterfaceExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_TestModule_AMH_TestInterfaceExceptionHolder,
    0);
  

namespace TestModule
{
  ::CORBA::TypeCode_ptr const _tc_AMH_TestInterfaceExceptionHolder =
    &_tao_tc_TestModule_AMH_TestInterfaceExceptionHolder;
}// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr TestModule::AMH_TestInterfaceExceptionHolder::_tao_type () const
{
  return ::TestModule::_tc_AMH_TestInterfaceExceptionHolder;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_TestModule_AMH_TestInterfaceResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:TestModule/AMH_TestInterfaceResponseHandler:1.0",
    "AMH_TestInterfaceResponseHandler");
  

namespace TestModule
{
  ::CORBA::TypeCode_ptr const _tc_AMH_TestInterfaceResponseHandler =
    &_tao_tc_TestModule_AMH_TestInterfaceResponseHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_TestModule_AMI_TestInterfaceHandler (
    ::CORBA::tk_objref,
    "IDL:TestModule/AMI_TestInterfaceHandler:1.0",
    "AMI_TestInterfaceHandler");
  

namespace TestModule
{
  ::CORBA::TypeCode_ptr const _tc_AMI_TestInterfaceHandler =
    &_tao_tc_TestModule_AMI_TestInterfaceHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:550


#ifndef _TAO_TYPECODE_CORBA_STRING_10_GUARD
#define _TAO_TYPECODE_CORBA_STRING_10_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::String<TAO::Null_RefCount_Policy>
        CORBA_STRING_10 (
          ::CORBA::tk_string,
          10U);
        
      ::CORBA::TypeCode_ptr const tc_CORBA_STRING_10 =
        &CORBA_STRING_10;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CORBA_STRING_10_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_bug_2124_MyString (
    ::CORBA::tk_alias,
    "IDL:bug_2124/MyString:1.0",
    "MyString",
    &TAO::TypeCode::tc_CORBA_STRING_10);
  

namespace bug_2124
{
  ::CORBA::TypeCode_ptr const _tc_MyString =
    &_tao_tc_bug_2124_MyString;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_bug_2124_OtherString (
    ::CORBA::tk_alias,
    "IDL:bug_2124/OtherString:1.0",
    "OtherString",
    &bug_2124::_tc_MyString);
  

namespace bug_2124
{
  ::CORBA::TypeCode_ptr const _tc_OtherString =
    &_tao_tc_bug_2124_OtherString;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2124_Foo (
    ::CORBA::tk_objref,
    "IDL:bug_2124/Foo:1.0",
    "Foo");
  

namespace bug_2124
{
  ::CORBA::TypeCode_ptr const _tc_Foo =
    &_tao_tc_bug_2124_Foo;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:63

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_bug_2124_AMH_FooExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_bug_2124_AMH_FooExceptionHolder (
    ::CORBA::tk_value,
    "IDL:bug_2124/AMH_FooExceptionHolder:1.0",
    "AMH_FooExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_bug_2124_AMH_FooExceptionHolder,
    0);
  

namespace bug_2124
{
  ::CORBA::TypeCode_ptr const _tc_AMH_FooExceptionHolder =
    &_tao_tc_bug_2124_AMH_FooExceptionHolder;
}// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr bug_2124::AMH_FooExceptionHolder::_tao_type () const
{
  return ::bug_2124::_tc_AMH_FooExceptionHolder;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2124_AMH_FooResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:bug_2124/AMH_FooResponseHandler:1.0",
    "AMH_FooResponseHandler");
  

namespace bug_2124
{
  ::CORBA::TypeCode_ptr const _tc_AMH_FooResponseHandler =
    &_tao_tc_bug_2124_AMH_FooResponseHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2124_AMI_FooHandler (
    ::CORBA::tk_objref,
    "IDL:bug_2124/AMI_FooHandler:1.0",
    "AMI_FooHandler");
  

namespace bug_2124
{
  ::CORBA::TypeCode_ptr const _tc_AMI_FooHandler =
    &_tao_tc_bug_2124_AMI_FooHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:550


#ifndef _TAO_TYPECODE_CORBA_STRING_40_GUARD
#define _TAO_TYPECODE_CORBA_STRING_40_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::String<TAO::Null_RefCount_Policy>
        CORBA_STRING_40 (
          ::CORBA::tk_string,
          40U);
        
      ::CORBA::TypeCode_ptr const tc_CORBA_STRING_40 =
        &CORBA_STRING_40;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CORBA_STRING_40_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_One_MyString (
    ::CORBA::tk_alias,
    "IDL:bug_2122/One/MyString:1.0",
    "MyString",
    &TAO::TypeCode::tc_CORBA_STRING_40);
  

namespace bug_2122
{
  
  namespace One
  {
    ::CORBA::TypeCode_ptr const _tc_MyString =
      &_tao_tc_bug_2122_One_MyString;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_One_Whatever (
    ::CORBA::tk_objref,
    "IDL:bug_2122/One/Whatever:1.0",
    "Whatever");
  

namespace bug_2122
{
  
  namespace One
  {
    ::CORBA::TypeCode_ptr const _tc_Whatever =
      &_tao_tc_bug_2122_One_Whatever;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:63

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_bug_2122_One_AMH_WhateverExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_One_AMH_WhateverExceptionHolder (
    ::CORBA::tk_value,
    "IDL:bug_2122/One/AMH_WhateverExceptionHolder:1.0",
    "AMH_WhateverExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_bug_2122_One_AMH_WhateverExceptionHolder,
    0);
  

namespace bug_2122
{
  
  namespace One
  {
    ::CORBA::TypeCode_ptr const _tc_AMH_WhateverExceptionHolder =
      &_tao_tc_bug_2122_One_AMH_WhateverExceptionHolder;
  }
}// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr bug_2122::One::AMH_WhateverExceptionHolder::_tao_type () const
{
  return ::bug_2122::One::_tc_AMH_WhateverExceptionHolder;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_One_AMH_WhateverResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:bug_2122/One/AMH_WhateverResponseHandler:1.0",
    "AMH_WhateverResponseHandler");
  

namespace bug_2122
{
  
  namespace One
  {
    ::CORBA::TypeCode_ptr const _tc_AMH_WhateverResponseHandler =
      &_tao_tc_bug_2122_One_AMH_WhateverResponseHandler;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_One_AMI_WhateverHandler (
    ::CORBA::tk_objref,
    "IDL:bug_2122/One/AMI_WhateverHandler:1.0",
    "AMI_WhateverHandler");
  

namespace bug_2122
{
  
  namespace One
  {
    ::CORBA::TypeCode_ptr const _tc_AMI_WhateverHandler =
      &_tao_tc_bug_2122_One_AMI_WhateverHandler;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:550


#ifndef _TAO_TYPECODE_CORBA_STRING_100_GUARD
#define _TAO_TYPECODE_CORBA_STRING_100_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::String<TAO::Null_RefCount_Policy>
        CORBA_STRING_100 (
          ::CORBA::tk_string,
          100U);
        
      ::CORBA::TypeCode_ptr const tc_CORBA_STRING_100 =
        &CORBA_STRING_100;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CORBA_STRING_100_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_Two_MyString (
    ::CORBA::tk_alias,
    "IDL:bug_2122/Two/MyString:1.0",
    "MyString",
    &TAO::TypeCode::tc_CORBA_STRING_100);
  

namespace bug_2122
{
  
  namespace Two
  {
    ::CORBA::TypeCode_ptr const _tc_MyString =
      &_tao_tc_bug_2122_Two_MyString;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_Two_WhoCares (
    ::CORBA::tk_objref,
    "IDL:bug_2122/Two/WhoCares:1.0",
    "WhoCares");
  

namespace bug_2122
{
  
  namespace Two
  {
    ::CORBA::TypeCode_ptr const _tc_WhoCares =
      &_tao_tc_bug_2122_Two_WhoCares;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:63

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_bug_2122_Two_AMH_WhoCaresExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_Two_AMH_WhoCaresExceptionHolder (
    ::CORBA::tk_value,
    "IDL:bug_2122/Two/AMH_WhoCaresExceptionHolder:1.0",
    "AMH_WhoCaresExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_bug_2122_Two_AMH_WhoCaresExceptionHolder,
    0);
  

namespace bug_2122
{
  
  namespace Two
  {
    ::CORBA::TypeCode_ptr const _tc_AMH_WhoCaresExceptionHolder =
      &_tao_tc_bug_2122_Two_AMH_WhoCaresExceptionHolder;
  }
}// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_type () const
{
  return ::bug_2122::Two::_tc_AMH_WhoCaresExceptionHolder;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_Two_AMH_WhoCaresResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:bug_2122/Two/AMH_WhoCaresResponseHandler:1.0",
    "AMH_WhoCaresResponseHandler");
  

namespace bug_2122
{
  
  namespace Two
  {
    ::CORBA::TypeCode_ptr const _tc_AMH_WhoCaresResponseHandler =
      &_tao_tc_bug_2122_Two_AMH_WhoCaresResponseHandler;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_Two_AMI_WhoCaresHandler (
    ::CORBA::tk_objref,
    "IDL:bug_2122/Two/AMI_WhoCaresHandler:1.0",
    "AMI_WhoCaresHandler");
  

namespace bug_2122
{
  
  namespace Two
  {
    ::CORBA::TypeCode_ptr const _tc_AMI_WhoCaresHandler =
      &_tao_tc_bug_2122_Two_AMI_WhoCaresHandler;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:550


#ifndef _TAO_TYPECODE_CORBA_STRING_100_GUARD
#define _TAO_TYPECODE_CORBA_STRING_100_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::String<TAO::Null_RefCount_Policy>
        CORBA_STRING_100 (
          ::CORBA::tk_string,
          100U);
        
      ::CORBA::TypeCode_ptr const tc_CORBA_STRING_100 =
        &CORBA_STRING_100;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CORBA_STRING_100_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_Three_MyString (
    ::CORBA::tk_alias,
    "IDL:bug_2122/Three/MyString:1.0",
    "MyString",
    &TAO::TypeCode::tc_CORBA_STRING_100);
  

namespace bug_2122
{
  
  namespace Three
  {
    ::CORBA::TypeCode_ptr const _tc_MyString =
      &_tao_tc_bug_2122_Three_MyString;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_Three_WhoCares (
    ::CORBA::tk_objref,
    "IDL:bug_2122/Three/WhoCares:1.0",
    "WhoCares");
  

namespace bug_2122
{
  
  namespace Three
  {
    ::CORBA::TypeCode_ptr const _tc_WhoCares =
      &_tao_tc_bug_2122_Three_WhoCares;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:63

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_bug_2122_Three_AMH_WhoCaresExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_Three_AMH_WhoCaresExceptionHolder (
    ::CORBA::tk_value,
    "IDL:bug_2122/Three/AMH_WhoCaresExceptionHolder:1.0",
    "AMH_WhoCaresExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_bug_2122_Three_AMH_WhoCaresExceptionHolder,
    0);
  

namespace bug_2122
{
  
  namespace Three
  {
    ::CORBA::TypeCode_ptr const _tc_AMH_WhoCaresExceptionHolder =
      &_tao_tc_bug_2122_Three_AMH_WhoCaresExceptionHolder;
  }
}// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_type () const
{
  return ::bug_2122::Three::_tc_AMH_WhoCaresExceptionHolder;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_Three_AMH_WhoCaresResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:bug_2122/Three/AMH_WhoCaresResponseHandler:1.0",
    "AMH_WhoCaresResponseHandler");
  

namespace bug_2122
{
  
  namespace Three
  {
    ::CORBA::TypeCode_ptr const _tc_AMH_WhoCaresResponseHandler =
      &_tao_tc_bug_2122_Three_AMH_WhoCaresResponseHandler;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_bug_2122_Three_AMI_WhoCaresHandler (
    ::CORBA::tk_objref,
    "IDL:bug_2122/Three/AMI_WhoCaresHandler:1.0",
    "AMI_WhoCaresHandler");
  

namespace bug_2122
{
  
  namespace Three
  {
    ::CORBA::TypeCode_ptr const _tc_AMI_WhoCaresHandler =
      &_tao_tc_bug_2122_Three_AMI_WhoCaresHandler;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:550


#ifndef _TAO_TYPECODE_CORBA_STRING_32_GUARD
#define _TAO_TYPECODE_CORBA_STRING_32_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::String<TAO::Null_RefCount_Policy>
        CORBA_STRING_32 (
          ::CORBA::tk_string,
          32U);
        
      ::CORBA::TypeCode_ptr const tc_CORBA_STRING_32 =
        &CORBA_STRING_32;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CORBA_STRING_32_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_First_FirstString (
    ::CORBA::tk_alias,
    "IDL:First/FirstString:1.0",
    "FirstString",
    &TAO::TypeCode::tc_CORBA_STRING_32);
  

namespace First
{
  ::CORBA::TypeCode_ptr const _tc_FirstString =
    &_tao_tc_First_FirstString;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_CommaList_Foo_GUARD
#define _TAO_TYPECODE_CommaList_Foo_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        CommaList_Foo_0 (
          ::CORBA::tk_sequence,
          &CORBA::_tc_double,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_CommaList_Foo_0 =
        &CommaList_Foo_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CommaList_Foo_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CommaList_Foo (
    ::CORBA::tk_alias,
    "IDL:CommaList/Foo:1.0",
    "Foo",
    &TAO::TypeCode::tc_CommaList_Foo_0);
  

namespace CommaList
{
  ::CORBA::TypeCode_ptr const _tc_Foo =
    &_tao_tc_CommaList_Foo;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_CommaList_Dubble_GUARD
#define _TAO_TYPECODE_CommaList_Dubble_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        CommaList_Dubble_0 (
          ::CORBA::tk_sequence,
          &CORBA::_tc_double,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_CommaList_Dubble_0 =
        &CommaList_Dubble_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CommaList_Dubble_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CommaList_Dubble (
    ::CORBA::tk_alias,
    "IDL:CommaList/Dubble:1.0",
    "Dubble",
    &TAO::TypeCode::tc_CommaList_Dubble_0);
  

namespace CommaList
{
  ::CORBA::TypeCode_ptr const _tc_Dubble =
    &_tao_tc_CommaList_Dubble;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_CommaList_Dubbel_GUARD
#define _TAO_TYPECODE_CommaList_Dubbel_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        CommaList_Dubbel_0 (
          ::CORBA::tk_sequence,
          &CORBA::_tc_double,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_CommaList_Dubbel_0 =
        &CommaList_Dubbel_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CommaList_Dubbel_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CommaList_Dubbel (
    ::CORBA::tk_alias,
    "IDL:CommaList/Dubbel:1.0",
    "Dubbel",
    &TAO::TypeCode::tc_CommaList_Dubble_0);
  

namespace CommaList
{
  ::CORBA::TypeCode_ptr const _tc_Dubbel =
    &_tao_tc_CommaList_Dubbel;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_CommaList_Toil_GUARD
#define _TAO_TYPECODE_CommaList_Toil_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        CommaList_Toil_0 (
          ::CORBA::tk_sequence,
          &CORBA::_tc_double,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_CommaList_Toil_0 =
        &CommaList_Toil_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CommaList_Toil_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CommaList_Toil (
    ::CORBA::tk_alias,
    "IDL:CommaList/Toil:1.0",
    "Toil",
    &TAO::TypeCode::tc_CommaList_Dubble_0);
  

namespace CommaList
{
  ::CORBA::TypeCode_ptr const _tc_Toil =
    &_tao_tc_CommaList_Toil;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:46


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:457


#ifndef _TAO_TYPECODE_CommaList_Trouble_GUARD
#define _TAO_TYPECODE_CommaList_Trouble_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        CommaList_Trouble_0 (
          ::CORBA::tk_sequence,
          &CORBA::_tc_double,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_CommaList_Trouble_0 =
        &CommaList_Trouble_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_CommaList_Trouble_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CommaList_Trouble (
    ::CORBA::tk_alias,
    "IDL:CommaList/Trouble:1.0",
    "Trouble",
    &TAO::TypeCode::tc_CommaList_Dubble_0);
  

namespace CommaList
{
  ::CORBA::TypeCode_ptr const _tc_Trouble =
    &_tao_tc_CommaList_Trouble;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_cs.cpp:31


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

void operator<<= (
    ::CORBA::Any &_tao_any,
    const TAO_A5_forany &_tao_elem)
  
{
  TAO::Any_Array_Impl_T<
      TAO_A5_slice,
      TAO_A5_forany
    >::insert (
        _tao_any,
        TAO_A5_forany::_tao_any_destructor,
        _tc_TAO_A5,
        _tao_elem.nocopy ()
          ? _tao_elem.ptr ()
          : TAO_A5_dup (_tao_elem.in ())
      );
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    TAO_A5_forany &_tao_elem)
  
{
  return
    TAO::Any_Array_Impl_T<
        TAO_A5_slice,
        TAO_A5_forany
      >::extract (
          _tao_any,
          TAO_A5_forany::_tao_any_destructor,
          _tc_TAO_A5,
          _tao_elem.out ());
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_cs.cpp:31


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

void operator<<= (
    ::CORBA::Any &_tao_any,
    const TAO_M5_forany &_tao_elem)
  
{
  TAO::Any_Array_Impl_T<
      TAO_M5_slice,
      TAO_M5_forany
    >::insert (
        _tao_any,
        TAO_M5_forany::_tao_any_destructor,
        _tc_TAO_M5,
        _tao_elem.nocopy ()
          ? _tao_elem.ptr ()
          : TAO_M5_dup (_tao_elem.in ())
      );
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    TAO_M5_forany &_tao_elem)
  
{
  return
    TAO::Any_Array_Impl_T<
        TAO_M5_slice,
        TAO_M5_forany
      >::extract (
          _tao_any,
          TAO_M5_forany::_tao_any_destructor,
          _tc_TAO_M5,
          _tao_elem.out ());
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_cs.cpp:31


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

void operator<<= (
    ::CORBA::Any &_tao_any,
    const TAO_Z5_forany &_tao_elem)
  
{
  TAO::Any_Array_Impl_T<
      TAO_Z5_slice,
      TAO_Z5_forany
    >::insert (
        _tao_any,
        TAO_Z5_forany::_tao_any_destructor,
        _tc_TAO_Z5,
        _tao_elem.nocopy ()
          ? _tao_elem.ptr ()
          : TAO_Z5_dup (_tao_elem.in ())
      );
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    TAO_Z5_forany &_tao_elem)
  
{
  return
    TAO::Any_Array_Impl_T<
        TAO_Z5_slice,
        TAO_Z5_forany
      >::extract (
          _tao_any,
          TAO_Z5_forany::_tao_any_destructor,
          _tc_TAO_Z5,
          _tao_elem.out ());
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<TestModule::TestInterface>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  TestModule::TestInterface_ptr _tao_elem)
{
  TestModule::TestInterface_ptr _tao_objptr =
    TestModule::TestInterface::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  TestModule::TestInterface_ptr *_tao_elem)
{
  TAO::Any_Impl_T<TestModule::TestInterface>::insert (
    _tao_any,
    TestModule::TestInterface::_tao_any_destructor,
    TestModule::_tc_TestInterface,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    TestModule::TestInterface_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<TestModule::TestInterface>::extract (
        _tao_any,
        TestModule::TestInterface::_tao_any_destructor,
        TestModule::_tc_TestInterface,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:44


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<TestModule::AMH_TestInterfaceExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  TestModule::AMH_TestInterfaceExceptionHolder *_tao_elem)
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    TestModule::AMH_TestInterfaceExceptionHolder *_tao_copy =
      _tao_elem ?
        TestModule::AMH_TestInterfaceExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : nullptr;
    _tao_any <<= std::addressof(_tao_copy);
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= std::addressof(_tao_elem);
  #endif
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  TestModule::AMH_TestInterfaceExceptionHolder **_tao_elem)
{
  TAO::Any_Impl_T<TestModule::AMH_TestInterfaceExceptionHolder>::insert (
    _tao_any,
    TestModule::AMH_TestInterfaceExceptionHolder::_tao_any_destructor,
    TestModule::_tc_AMH_TestInterfaceExceptionHolder,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    TestModule::AMH_TestInterfaceExceptionHolder *&_tao_elem)
{
  return
    TAO::Any_Impl_T<TestModule::AMH_TestInterfaceExceptionHolder>::extract (
        _tao_any,
        TestModule::AMH_TestInterfaceExceptionHolder::_tao_any_destructor,
        TestModule::_tc_AMH_TestInterfaceExceptionHolder,
        _tao_elem);
}


}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<TestModule::AMH_TestInterfaceResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<TestModule::AMH_TestInterfaceResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<TestModule::AMH_TestInterfaceResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  TestModule::AMH_TestInterfaceResponseHandler_ptr _tao_elem)
{
  TestModule::AMH_TestInterfaceResponseHandler_ptr _tao_objptr =
    TestModule::AMH_TestInterfaceResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  TestModule::AMH_TestInterfaceResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<TestModule::AMH_TestInterfaceResponseHandler>::insert (
    _tao_any,
    TestModule::AMH_TestInterfaceResponseHandler::_tao_any_destructor,
    TestModule::_tc_AMH_TestInterfaceResponseHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    TestModule::AMH_TestInterfaceResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<TestModule::AMH_TestInterfaceResponseHandler>::extract (
        _tao_any,
        TestModule::AMH_TestInterfaceResponseHandler::_tao_any_destructor,
        TestModule::_tc_AMH_TestInterfaceResponseHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<TestModule::AMI_TestInterfaceHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  TestModule::AMI_TestInterfaceHandler_ptr _tao_elem)
{
  TestModule::AMI_TestInterfaceHandler_ptr _tao_objptr =
    TestModule::AMI_TestInterfaceHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  TestModule::AMI_TestInterfaceHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<TestModule::AMI_TestInterfaceHandler>::insert (
    _tao_any,
    TestModule::AMI_TestInterfaceHandler::_tao_any_destructor,
    TestModule::_tc_AMI_TestInterfaceHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    TestModule::AMI_TestInterfaceHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<TestModule::AMI_TestInterfaceHandler>::extract (
        _tao_any,
        TestModule::AMI_TestInterfaceHandler::_tao_any_destructor,
        TestModule::_tc_AMI_TestInterfaceHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2124::Foo>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2124::Foo_ptr _tao_elem)
{
  bug_2124::Foo_ptr _tao_objptr =
    bug_2124::Foo::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2124::Foo_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2124::Foo>::insert (
    _tao_any,
    bug_2124::Foo::_tao_any_destructor,
    bug_2124::_tc_Foo,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2124::Foo_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2124::Foo>::extract (
        _tao_any,
        bug_2124::Foo::_tao_any_destructor,
        bug_2124::_tc_Foo,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:44


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2124::AMH_FooExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2124::AMH_FooExceptionHolder *_tao_elem)
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    bug_2124::AMH_FooExceptionHolder *_tao_copy =
      _tao_elem ?
        bug_2124::AMH_FooExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : nullptr;
    _tao_any <<= std::addressof(_tao_copy);
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= std::addressof(_tao_elem);
  #endif
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2124::AMH_FooExceptionHolder **_tao_elem)
{
  TAO::Any_Impl_T<bug_2124::AMH_FooExceptionHolder>::insert (
    _tao_any,
    bug_2124::AMH_FooExceptionHolder::_tao_any_destructor,
    bug_2124::_tc_AMH_FooExceptionHolder,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2124::AMH_FooExceptionHolder *&_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2124::AMH_FooExceptionHolder>::extract (
        _tao_any,
        bug_2124::AMH_FooExceptionHolder::_tao_any_destructor,
        bug_2124::_tc_AMH_FooExceptionHolder,
        _tao_elem);
}


}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2124::AMH_FooResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2124::AMH_FooResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2124::AMH_FooResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2124::AMH_FooResponseHandler_ptr _tao_elem)
{
  bug_2124::AMH_FooResponseHandler_ptr _tao_objptr =
    bug_2124::AMH_FooResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2124::AMH_FooResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2124::AMH_FooResponseHandler>::insert (
    _tao_any,
    bug_2124::AMH_FooResponseHandler::_tao_any_destructor,
    bug_2124::_tc_AMH_FooResponseHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2124::AMH_FooResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2124::AMH_FooResponseHandler>::extract (
        _tao_any,
        bug_2124::AMH_FooResponseHandler::_tao_any_destructor,
        bug_2124::_tc_AMH_FooResponseHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2124::AMI_FooHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2124::AMI_FooHandler_ptr _tao_elem)
{
  bug_2124::AMI_FooHandler_ptr _tao_objptr =
    bug_2124::AMI_FooHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2124::AMI_FooHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2124::AMI_FooHandler>::insert (
    _tao_any,
    bug_2124::AMI_FooHandler::_tao_any_destructor,
    bug_2124::_tc_AMI_FooHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2124::AMI_FooHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2124::AMI_FooHandler>::extract (
        _tao_any,
        bug_2124::AMI_FooHandler::_tao_any_destructor,
        bug_2124::_tc_AMI_FooHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::One::Whatever>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::One::Whatever_ptr _tao_elem)
{
  bug_2122::One::Whatever_ptr _tao_objptr =
    bug_2122::One::Whatever::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::One::Whatever_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::One::Whatever>::insert (
    _tao_any,
    bug_2122::One::Whatever::_tao_any_destructor,
    bug_2122::One::_tc_Whatever,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::One::Whatever_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::One::Whatever>::extract (
        _tao_any,
        bug_2122::One::Whatever::_tao_any_destructor,
        bug_2122::One::_tc_Whatever,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:44


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::One::AMH_WhateverExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::One::AMH_WhateverExceptionHolder *_tao_elem)
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    bug_2122::One::AMH_WhateverExceptionHolder *_tao_copy =
      _tao_elem ?
        bug_2122::One::AMH_WhateverExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : nullptr;
    _tao_any <<= std::addressof(_tao_copy);
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= std::addressof(_tao_elem);
  #endif
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::One::AMH_WhateverExceptionHolder **_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::One::AMH_WhateverExceptionHolder>::insert (
    _tao_any,
    bug_2122::One::AMH_WhateverExceptionHolder::_tao_any_destructor,
    bug_2122::One::_tc_AMH_WhateverExceptionHolder,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::One::AMH_WhateverExceptionHolder *&_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::One::AMH_WhateverExceptionHolder>::extract (
        _tao_any,
        bug_2122::One::AMH_WhateverExceptionHolder::_tao_any_destructor,
        bug_2122::One::_tc_AMH_WhateverExceptionHolder,
        _tao_elem);
}


}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::One::AMH_WhateverResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::One::AMH_WhateverResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::One::AMH_WhateverResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::One::AMH_WhateverResponseHandler_ptr _tao_elem)
{
  bug_2122::One::AMH_WhateverResponseHandler_ptr _tao_objptr =
    bug_2122::One::AMH_WhateverResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::One::AMH_WhateverResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::One::AMH_WhateverResponseHandler>::insert (
    _tao_any,
    bug_2122::One::AMH_WhateverResponseHandler::_tao_any_destructor,
    bug_2122::One::_tc_AMH_WhateverResponseHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::One::AMH_WhateverResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::One::AMH_WhateverResponseHandler>::extract (
        _tao_any,
        bug_2122::One::AMH_WhateverResponseHandler::_tao_any_destructor,
        bug_2122::One::_tc_AMH_WhateverResponseHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::One::AMI_WhateverHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::One::AMI_WhateverHandler_ptr _tao_elem)
{
  bug_2122::One::AMI_WhateverHandler_ptr _tao_objptr =
    bug_2122::One::AMI_WhateverHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::One::AMI_WhateverHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::One::AMI_WhateverHandler>::insert (
    _tao_any,
    bug_2122::One::AMI_WhateverHandler::_tao_any_destructor,
    bug_2122::One::_tc_AMI_WhateverHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::One::AMI_WhateverHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::One::AMI_WhateverHandler>::extract (
        _tao_any,
        bug_2122::One::AMI_WhateverHandler::_tao_any_destructor,
        bug_2122::One::_tc_AMI_WhateverHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Two::WhoCares>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Two::WhoCares_ptr _tao_elem)
{
  bug_2122::Two::WhoCares_ptr _tao_objptr =
    bug_2122::Two::WhoCares::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Two::WhoCares_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::Two::WhoCares>::insert (
    _tao_any,
    bug_2122::Two::WhoCares::_tao_any_destructor,
    bug_2122::Two::_tc_WhoCares,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::Two::WhoCares_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::Two::WhoCares>::extract (
        _tao_any,
        bug_2122::Two::WhoCares::_tao_any_destructor,
        bug_2122::Two::_tc_WhoCares,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:44


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Two::AMH_WhoCaresExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Two::AMH_WhoCaresExceptionHolder *_tao_elem)
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    bug_2122::Two::AMH_WhoCaresExceptionHolder *_tao_copy =
      _tao_elem ?
        bug_2122::Two::AMH_WhoCaresExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : nullptr;
    _tao_any <<= std::addressof(_tao_copy);
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= std::addressof(_tao_elem);
  #endif
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Two::AMH_WhoCaresExceptionHolder **_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::Two::AMH_WhoCaresExceptionHolder>::insert (
    _tao_any,
    bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_any_destructor,
    bug_2122::Two::_tc_AMH_WhoCaresExceptionHolder,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::Two::AMH_WhoCaresExceptionHolder *&_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::Two::AMH_WhoCaresExceptionHolder>::extract (
        _tao_any,
        bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_any_destructor,
        bug_2122::Two::_tc_AMH_WhoCaresExceptionHolder,
        _tao_elem);
}


}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Two::AMH_WhoCaresResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Two::AMH_WhoCaresResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Two::AMH_WhoCaresResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Two::AMH_WhoCaresResponseHandler_ptr _tao_elem)
{
  bug_2122::Two::AMH_WhoCaresResponseHandler_ptr _tao_objptr =
    bug_2122::Two::AMH_WhoCaresResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Two::AMH_WhoCaresResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::Two::AMH_WhoCaresResponseHandler>::insert (
    _tao_any,
    bug_2122::Two::AMH_WhoCaresResponseHandler::_tao_any_destructor,
    bug_2122::Two::_tc_AMH_WhoCaresResponseHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::Two::AMH_WhoCaresResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::Two::AMH_WhoCaresResponseHandler>::extract (
        _tao_any,
        bug_2122::Two::AMH_WhoCaresResponseHandler::_tao_any_destructor,
        bug_2122::Two::_tc_AMH_WhoCaresResponseHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Two::AMI_WhoCaresHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Two::AMI_WhoCaresHandler_ptr _tao_elem)
{
  bug_2122::Two::AMI_WhoCaresHandler_ptr _tao_objptr =
    bug_2122::Two::AMI_WhoCaresHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Two::AMI_WhoCaresHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::Two::AMI_WhoCaresHandler>::insert (
    _tao_any,
    bug_2122::Two::AMI_WhoCaresHandler::_tao_any_destructor,
    bug_2122::Two::_tc_AMI_WhoCaresHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::Two::AMI_WhoCaresHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::Two::AMI_WhoCaresHandler>::extract (
        _tao_any,
        bug_2122::Two::AMI_WhoCaresHandler::_tao_any_destructor,
        bug_2122::Two::_tc_AMI_WhoCaresHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Three::WhoCares>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Three::WhoCares_ptr _tao_elem)
{
  bug_2122::Three::WhoCares_ptr _tao_objptr =
    bug_2122::Three::WhoCares::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Three::WhoCares_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::Three::WhoCares>::insert (
    _tao_any,
    bug_2122::Three::WhoCares::_tao_any_destructor,
    bug_2122::Three::_tc_WhoCares,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::Three::WhoCares_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::Three::WhoCares>::extract (
        _tao_any,
        bug_2122::Three::WhoCares::_tao_any_destructor,
        bug_2122::Three::_tc_WhoCares,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:44


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Three::AMH_WhoCaresExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Three::AMH_WhoCaresExceptionHolder *_tao_elem)
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    bug_2122::Three::AMH_WhoCaresExceptionHolder *_tao_copy =
      _tao_elem ?
        bug_2122::Three::AMH_WhoCaresExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : nullptr;
    _tao_any <<= std::addressof(_tao_copy);
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= std::addressof(_tao_elem);
  #endif
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Three::AMH_WhoCaresExceptionHolder **_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::Three::AMH_WhoCaresExceptionHolder>::insert (
    _tao_any,
    bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_any_destructor,
    bug_2122::Three::_tc_AMH_WhoCaresExceptionHolder,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::Three::AMH_WhoCaresExceptionHolder *&_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::Three::AMH_WhoCaresExceptionHolder>::extract (
        _tao_any,
        bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_any_destructor,
        bug_2122::Three::_tc_AMH_WhoCaresExceptionHolder,
        _tao_elem);
}


}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Three::AMH_WhoCaresResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Three::AMH_WhoCaresResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Three::AMH_WhoCaresResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Three::AMH_WhoCaresResponseHandler_ptr _tao_elem)
{
  bug_2122::Three::AMH_WhoCaresResponseHandler_ptr _tao_objptr =
    bug_2122::Three::AMH_WhoCaresResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Three::AMH_WhoCaresResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::Three::AMH_WhoCaresResponseHandler>::insert (
    _tao_any,
    bug_2122::Three::AMH_WhoCaresResponseHandler::_tao_any_destructor,
    bug_2122::Three::_tc_AMH_WhoCaresResponseHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::Three::AMH_WhoCaresResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::Three::AMH_WhoCaresResponseHandler>::extract (
        _tao_any,
        bug_2122::Three::AMH_WhoCaresResponseHandler::_tao_any_destructor,
        bug_2122::Three::_tc_AMH_WhoCaresResponseHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<bug_2122::Three::AMI_WhoCaresHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Three::AMI_WhoCaresHandler_ptr _tao_elem)
{
  bug_2122::Three::AMI_WhoCaresHandler_ptr _tao_objptr =
    bug_2122::Three::AMI_WhoCaresHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  bug_2122::Three::AMI_WhoCaresHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<bug_2122::Three::AMI_WhoCaresHandler>::insert (
    _tao_any,
    bug_2122::Three::AMI_WhoCaresHandler::_tao_any_destructor,
    bug_2122::Three::_tc_AMI_WhoCaresHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    bug_2122::Three::AMI_WhoCaresHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<bug_2122::Three::AMI_WhoCaresHandler>::extract (
        _tao_any,
        bug_2122::Three::AMI_WhoCaresHandler::_tao_any_destructor,
        bug_2122::Three::_tc_AMI_WhoCaresHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {


/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::CommaList::Foo &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::CommaList::Foo>::insert_copy (
    _tao_any,
    ::CommaList::Foo::_tao_any_destructor,
    ::CommaList::_tc_Foo,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::CommaList::Foo *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::CommaList::Foo>::insert (
    _tao_any,
    ::CommaList::Foo::_tao_any_destructor,
    ::CommaList::_tc_Foo,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::CommaList::Foo *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::CommaList::Foo>::extract (
    _tao_any,
    ::CommaList::Foo::_tao_any_destructor,
    ::CommaList::_tc_Foo,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {


/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ::CommaList::Trouble &_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::CommaList::Trouble>::insert_copy (
    _tao_any,
    ::CommaList::Trouble::_tao_any_destructor,
    ::CommaList::_tc_Dubble,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ::CommaList::Trouble *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::CommaList::Trouble>::insert (
    _tao_any,
    ::CommaList::Trouble::_tao_any_destructor,
    ::CommaList::_tc_Dubble,
    _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ::CommaList::Trouble *&_tao_elem)
{
  return TAO::Any_Dual_Impl_T< ::CommaList::Trouble>::extract (
    _tao_any,
    ::CommaList::Trouble::_tao_any_destructor,
    ::CommaList::_tc_Dubble,
    _tao_elem);
}
}
TAO_END_VERSIONED_NAMESPACE_DECL


