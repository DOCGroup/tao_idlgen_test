// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:454

#ifndef _TAO_IDL_INCLUDINGS_TMPMDY_H_
#define _TAO_IDL_INCLUDINGS_TMPMDY_H_

#include /**/ "ace/pre.h"

#include "includingC.h"
#include "includedS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Messaging/MessagingS.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
#include "tao/Messaging/AMH_Response_Handler.h"

#include /**/ "TAO_IDL_TEST_stub_export.h"
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:889

  

  template<>
  class SArg_Traits< ::choice>
    : public
        Basic_SArg_Traits_T<
            ::choice,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:1041

  

  template<>
  class SArg_Traits< ::myUnion>
    : public
        Var_Size_SArg_Traits_T<
            ::myUnion,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:1041

  

  template<>
  class SArg_Traits< ::Bog>
    : public
        Fixed_Size_SArg_Traits_T<
            ::Bog,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_IFACE__SARG_TRAITS_)
#define _IFACE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::iface>
    : public Object_SArg_Traits_T<
        ::iface_ptr,
        ::iface_var,
        ::iface_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:889

  

  template<>
  class SArg_Traits< ::iface::postal>
    : public
        Basic_SArg_Traits_T<
            ::iface::postal,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::iface::using_incl>
    : public
        Fixed_Size_SArg_Traits_T<
            ::iface::using_incl,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_IFACEEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_IFACEEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_ifaceExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_ifaceExceptionHolder *,
            ::AMH_ifaceExceptionHolder_var,
            ::AMH_ifaceExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_IFACEHANDLER__SARG_TRAITS_)
#define _AMI_IFACEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_ifaceHandler>
    : public Object_SArg_Traits_T<
        ::AMI_ifaceHandler_ptr,
        ::AMI_ifaceHandler_var,
        ::AMI_ifaceHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class SArg_Traits< ::VT_Test::VTSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::VT_Test::VTSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::TestStr>
    : public
        Var_Size_SArg_Traits_T<
            ::TestStr,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:1041

  

  template<>
  class SArg_Traits< ::TestUn>
    : public
        Var_Size_SArg_Traits_T<
            ::TestUn,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_MYINT__SARG_TRAITS_)
#define _MYINT__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::MyInt>
    : public Object_SArg_Traits_T<
        ::MyInt_ptr,
        ::MyInt_var,
        ::MyInt_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_MYINTEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_MYINTEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_MyIntExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_MyIntExceptionHolder *,
            ::AMH_MyIntExceptionHolder_var,
            ::AMH_MyIntExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_MYINTHANDLER__SARG_TRAITS_)
#define _AMI_MYINTHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_MyIntHandler>
    : public Object_SArg_Traits_T<
        ::AMI_MyIntHandler_ptr,
        ::AMI_MyIntHandler_var,
        ::AMI_MyIntHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_ROOTMODULE_SUBMODULE1_CHILDIF__SARG_TRAITS_)
#define _ROOTMODULE_SUBMODULE1_CHILDIF__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::RootModule::SUBMODULE1::ChildIF>
    : public Object_SArg_Traits_T<
        ::RootModule::SUBMODULE1::ChildIF_ptr,
        ::RootModule::SUBMODULE1::ChildIF_var,
        ::RootModule::SUBMODULE1::ChildIF_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:889

  

  template<>
  class SArg_Traits< ::RootModule::SUBMODULE1::ChildIF::DifferentMode>
    : public
        Basic_SArg_Traits_T<
            ::RootModule::SUBMODULE1::ChildIF::DifferentMode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_ROOTMODULE_SUBMODULE1_AMH_CHILDIFEXCEPTIONHOLDER__SARG_TRAITS_)
#define _ROOTMODULE_SUBMODULE1_AMH_CHILDIFEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::RootModule::SUBMODULE1::AMH_ChildIFExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::RootModule::SUBMODULE1::AMH_ChildIFExceptionHolder *,
            ::RootModule::SUBMODULE1::AMH_ChildIFExceptionHolder_var,
            ::RootModule::SUBMODULE1::AMH_ChildIFExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_ROOTMODULE_SUBMODULE1_AMI_CHILDIFHANDLER__SARG_TRAITS_)
#define _ROOTMODULE_SUBMODULE1_AMI_CHILDIFHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::RootModule::SUBMODULE1::AMI_ChildIFHandler>
    : public Object_SArg_Traits_T<
        ::RootModule::SUBMODULE1::AMI_ChildIFHandler_ptr,
        ::RootModule::SUBMODULE1::AMI_ChildIFHandler_var,
        ::RootModule::SUBMODULE1::AMI_ChildIFHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_B__SARG_TRAITS_)
#define _B__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::B>
    : public Object_SArg_Traits_T<
        ::B_ptr,
        ::B_var,
        ::B_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_BEXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_BEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_BExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_BExceptionHolder *,
            ::AMH_BExceptionHolder_var,
            ::AMH_BExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_BHANDLER__SARG_TRAITS_)
#define _AMI_BHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_BHandler>
    : public Object_SArg_Traits_T<
        ::AMI_BHandler_ptr,
        ::AMI_BHandler_var,
        ::AMI_BHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_iface;
typedef POA_AMH_iface *POA_AMH_iface_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_iface
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_iface ();

public:
  POA_AMH_iface (const POA_AMH_iface& rhs);
  virtual ~POA_AMH_iface () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  iface *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_iface;
typedef POA_iface *POA_iface_ptr;

class _TAO_iface_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_iface
  : public virtual PortableServer::ServantBase
{
protected:
  POA_iface ();

public:
  /// Useful for template programming.
  typedef ::iface _stub_type;
  typedef ::iface_ptr _stub_ptr_type;
  typedef ::iface_var _stub_var_type;

  POA_iface (const POA_iface& rhs);
  virtual ~POA_iface () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::iface *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_iface_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_iface_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_ifaceResponseHandler;
typedef POA_TAO_AMH_ifaceResponseHandler *POA_TAO_AMH_ifaceResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_ifaceResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_ifaceResponseHandler
{
public:
  POA_TAO_AMH_ifaceResponseHandler () = default;
  virtual ~POA_TAO_AMH_ifaceResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_ifaceHandler;
typedef POA_AMI_ifaceHandler *POA_AMI_ifaceHandler_ptr;

class _TAO_AMI_ifaceHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_ifaceHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_ifaceHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_ifaceHandler _stub_type;
  typedef ::AMI_ifaceHandler_ptr _stub_ptr_type;
  typedef ::AMI_ifaceHandler_var _stub_var_type;

  POA_AMI_ifaceHandler (const POA_AMI_ifaceHandler& rhs);
  virtual ~POA_AMI_ifaceHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_ifaceHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_ifaceHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_ifaceHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_VT_Test
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module VT_Test
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_A
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module A
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_MyInt;
typedef POA_AMH_MyInt *POA_AMH_MyInt_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_MyInt
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_MyInt ();

public:
  POA_AMH_MyInt (const POA_AMH_MyInt& rhs);
  virtual ~POA_AMH_MyInt () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  MyInt *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void op_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void op (
    AMH_MyIntResponseHandler_ptr _tao_rh,
    const ::A::MyStructA & ab
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_MyInt;
typedef POA_MyInt *POA_MyInt_ptr;

class _TAO_MyInt_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_MyInt
  : public virtual PortableServer::ServantBase
{
protected:
  POA_MyInt ();

public:
  /// Useful for template programming.
  typedef ::MyInt _stub_type;
  typedef ::MyInt_ptr _stub_ptr_type;
  typedef ::MyInt_var _stub_var_type;

  POA_MyInt (const POA_MyInt& rhs);
  virtual ~POA_MyInt () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::MyInt *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::A::MyStructA * op (
    const ::A::MyStructA & ab) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_MyInt_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_MyInt_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_MyIntResponseHandler;
typedef POA_TAO_AMH_MyIntResponseHandler *POA_TAO_AMH_MyIntResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_MyIntResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_MyIntResponseHandler
{
public:
  POA_TAO_AMH_MyIntResponseHandler () = default;
  virtual ~POA_TAO_AMH_MyIntResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op (
    const ::A::MyStructA & return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op_excep (
    ::AMH_MyIntExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_MyIntHandler;
typedef POA_AMI_MyIntHandler *POA_AMI_MyIntHandler_ptr;

class _TAO_AMI_MyIntHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_MyIntHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_MyIntHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_MyIntHandler _stub_type;
  typedef ::AMI_MyIntHandler_ptr _stub_ptr_type;
  typedef ::AMI_MyIntHandler_var _stub_var_type;

  POA_AMI_MyIntHandler (const POA_AMI_MyIntHandler& rhs);
  virtual ~POA_AMI_MyIntHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_MyIntHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op (
    const ::A::MyStructA & ami_return_val) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void op_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_MyIntHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_MyIntHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_RootModule
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace SUBMODULE1
  {
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

    class AMH_ChildIF;
    typedef AMH_ChildIF *AMH_ChildIF_ptr;

    class TAO_IDL_TEST_STUB_Export AMH_ChildIF
      : public virtual POA_RootModule::SUBMODULE1::AMH_ParentIF
        
    {
    protected:
      AMH_ChildIF ();
    
    public:
      AMH_ChildIF (const AMH_ChildIF& rhs);
      virtual ~AMH_ChildIF () = default;


      virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

      virtual void _dispatch (
          TAO_ServerRequest &req,
          TAO::Portable_Server::Servant_Upcall *_servant_upcall);
      
      RootModule::SUBMODULE1::ChildIF *_this ();

    virtual const char* _interface_repository_id () const;
  };

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class ChildIF;
  typedef ChildIF *ChildIF_ptr;

  class _TAO_ChildIF_Direct_Proxy_Impl;

  class TAO_IDL_TEST_STUB_Export ChildIF
    : public virtual POA_RootModule::SUBMODULE1::ParentIF
  {
  protected:
    ChildIF ();
  
  public:
    /// Useful for template programming.
    typedef ::RootModule::SUBMODULE1::ChildIF _stub_type;
    typedef ::RootModule::SUBMODULE1::ChildIF_ptr _stub_ptr_type;
    typedef ::RootModule::SUBMODULE1::ChildIF_var _stub_var_type;

    ChildIF (const ChildIF& rhs);
    virtual ~ChildIF () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::RootModule::SUBMODULE1::ChildIF *_this ();
    
    virtual const char* _interface_repository_id () const;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23

  

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class TAO_IDL_TEST_STUB_Export _TAO_ChildIF_Direct_Proxy_Impl
    : public virtual ::POA_RootModule::SUBMODULE1::_TAO_ParentIF_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_ChildIF_Direct_Proxy_Impl ();
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

  class TAO_AMH_ChildIFResponseHandler;
  typedef TAO_AMH_ChildIFResponseHandler *TAO_AMH_ChildIFResponseHandler_ptr;

  class TAO_IDL_TEST_STUB_Export TAO_AMH_ChildIFResponseHandler
    : public TAO_AMH_Response_Handler,
      public ::RootModule::SUBMODULE1::AMH_ChildIFResponseHandler
  {
  public:
    TAO_AMH_ChildIFResponseHandler () = default;
    virtual ~TAO_AMH_ChildIFResponseHandler () = default;
  };

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class AMI_ChildIFHandler;
  typedef AMI_ChildIFHandler *AMI_ChildIFHandler_ptr;

  class _TAO_AMI_ChildIFHandler_Direct_Proxy_Impl;

  class TAO_IDL_TEST_STUB_Export AMI_ChildIFHandler
    : public virtual POA_RootModule::SUBMODULE1::AMI_ParentIFHandler
  {
  protected:
    AMI_ChildIFHandler ();
  
  public:
    /// Useful for template programming.
    typedef ::RootModule::SUBMODULE1::AMI_ChildIFHandler _stub_type;
    typedef ::RootModule::SUBMODULE1::AMI_ChildIFHandler_ptr _stub_ptr_type;
    typedef ::RootModule::SUBMODULE1::AMI_ChildIFHandler_var _stub_var_type;

    AMI_ChildIFHandler (const AMI_ChildIFHandler& rhs);
    virtual ~AMI_ChildIFHandler () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::RootModule::SUBMODULE1::AMI_ChildIFHandler *_this ();
    
    virtual const char* _interface_repository_id () const;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23

  

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class TAO_IDL_TEST_STUB_Export _TAO_AMI_ChildIFHandler_Direct_Proxy_Impl
    : public virtual ::POA_RootModule::SUBMODULE1::_TAO_AMI_ParentIFHandler_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_AMI_ChildIFHandler_Direct_Proxy_Impl ();
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module RootModule::SUBMODULE1


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module RootModule
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_B;
typedef POA_AMH_B *POA_AMH_B_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_B
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_B ();

public:
  POA_AMH_B (const POA_AMH_B& rhs);
  virtual ~POA_AMH_B () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  B *_this ();

virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_B;
typedef POA_B *POA_B_ptr;

class _TAO_B_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_B
  : public virtual PortableServer::ServantBase
{
protected:
  POA_B ();

public:
  /// Useful for template programming.
  typedef ::B _stub_type;
  typedef ::B_ptr _stub_ptr_type;
  typedef ::B_var _stub_var_type;

  POA_B (const POA_B& rhs);
  virtual ~POA_B () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::B *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_B_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_B_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_BResponseHandler;
typedef POA_TAO_AMH_BResponseHandler *POA_TAO_AMH_BResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_BResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_BResponseHandler
{
public:
  POA_TAO_AMH_BResponseHandler () = default;
  virtual ~POA_TAO_AMH_BResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_BHandler;
typedef POA_AMI_BHandler *POA_AMI_BHandler_ptr;

class _TAO_AMI_BHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_BHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_BHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_BHandler _stub_type;
  typedef ::AMI_BHandler_ptr _stub_ptr_type;
  typedef ::AMI_BHandler_var _stub_var_type;

  POA_AMI_BHandler (const POA_AMI_BHandler& rhs);
  virtual ~POA_AMI_BHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_BHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_BHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_BHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////



#include "includingS_T.h"


#include /**/ "ace/post.h"

#endif /* ifndef */

