// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:148

#ifndef _TAO_IDL_NESTED_SCOPEC_UEBHAL_H_
#define _TAO_IDL_NESTED_SCOPEC_UEBHAL_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "TAO_IDL_TEST_stub_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Messaging/Messaging.h"
#include "tao/Sequence_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 4 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_root/root_ch.cpp:155


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace hump
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

    

    struct skip;
    using skip_var = ::TAO_Fixed_Var_T<skip>;
    using skip_out = skip&;

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

    

    struct TAO_IDL_TEST_STUB_Export skip
    {
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      
      using _var_type = skip_var;
      using _out_type = skip_out;

      static void _tao_any_destructor (void *);
      
      ::CORBA::Short s;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module skip::hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace u_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace u_hump
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

    

    class u_skip;
    using u_skip_var = ::TAO_Fixed_Var_T<u_skip>;
    using u_skip_out = u_skip&;

    class TAO_IDL_TEST_STUB_Export u_skip
    {
    public:
      u_skip ();
      u_skip (const u_skip &);
      ~u_skip ();

      u_skip &operator= (const u_skip &);
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/discriminant_ch.cpp:98

      

      void _d ( ::CORBA::Short);
      ::CORBA::Short _d () const;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      
      using _var_type = u_skip_var;
      using _out_type = u_skip_out;

      static void _tao_any_destructor (void *);
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:440

      

      void s ( ::CORBA::Short);
      ::CORBA::Short s () const;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/union_ch.cpp:120

      

      void _default ();
    private:
      ::CORBA::Short disc_;

      union
      {
        // TAO_IDL - Generated from
        // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union_branch/private_ch.cpp:369

        
        ::CORBA::Short s_;
      } u_;

      /// TAO extension - frees any allocated storage.
      void _reset ();
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_u_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module u_skip::u_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module u_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace e_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace e_hump
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

    

    class TAO_IDL_TEST_STUB_Export e_skip : public ::CORBA::UserException
    {
    public:

      e_skip ();
      e_skip (const e_skip &);
      ~e_skip () = default;

      e_skip &operator= (const e_skip &);

      static void _tao_any_destructor (void *);

      static e_skip *_downcast (::CORBA::Exception *);
      static const e_skip *_downcast (::CORBA::Exception const *);

      static ::CORBA::Exception *_alloc ();

      virtual ::CORBA::Exception *_tao_duplicate () const;

      virtual void _raise () const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_e_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module e_skip::e_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module e_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace i_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace i_hump
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_I_SKIP_I_HUMP_I_SKIP__VAR_OUT_CH_)
#define _I_SKIP_I_HUMP_I_SKIP__VAR_OUT_CH_

    class AMI_i_skipHandler;
    typedef AMI_i_skipHandler *AMI_i_skipHandler_ptr;

    class i_skip;
    using i_skip_ptr = i_skip*;
    using i_skip_var = TAO_Objref_Var_T<i_skip>;
    using i_skip_out = TAO_Objref_Out_T<i_skip>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export i_skip
      : public virtual ::CORBA::Object
    {
    public:
      friend class TAO::Narrow_Utils<i_skip>;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = i_skip_ptr;
      using _var_type = i_skip_var;
      using _out_type = i_skip_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static i_skip_ptr _duplicate (i_skip_ptr obj);

      static void _tao_release (i_skip_ptr obj);

      static i_skip_ptr _narrow (::CORBA::Object_ptr obj);
      static i_skip_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static i_skip_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      i_skip ();

      // Concrete non-local interface only.
      i_skip (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      i_skip (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~i_skip () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      i_skip (const i_skip &) = delete;
      i_skip (i_skip &&) = delete;
      i_skip &operator= (const i_skip &) = delete;
      i_skip &operator= (i_skip &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_i_skip;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

    

#if !defined (_I_SKIP_I_HUMP_AMH_I_SKIPEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _I_SKIP_I_HUMP_AMH_I_SKIPEXCEPTIONHOLDER__VAR_OUT_CH_

    class AMH_i_skipExceptionHolder;
    using AMH_i_skipExceptionHolder_var = TAO_Value_Var_T<AMH_i_skipExceptionHolder>;
    using AMH_i_skipExceptionHolder_out = TAO_Value_Out_T<AMH_i_skipExceptionHolder>;

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

    

    class TAO_IDL_TEST_STUB_Export AMH_i_skipExceptionHolder
      : public virtual ::CORBA::DefaultValueRefCountBase
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMH_i_skipExceptionHolder*;
      using _var_type = AMH_i_skipExceptionHolder_var;
      using _out_type = AMH_i_skipExceptionHolder_out;

      static void _tao_any_destructor (void *);

      AMH_i_skipExceptionHolder (::CORBA::Exception *ex)
        : exception (ex)
      {}

      virtual ~AMH_i_skipExceptionHolder ();
      virtual ::CORBA::ValueBase *_copy_value ();

      static AMH_i_skipExceptionHolder* _downcast (::CORBA::ValueBase *v);
      
      /// TAO extensions or internals
      static ::CORBA::Boolean _tao_unmarshal (
          TAO_InputCDR &strm,
          AMH_i_skipExceptionHolder *&new_object);
      
      virtual const char* _tao_obv_repository_id () const;

      virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

      static const char* _tao_obv_static_repository_id ();

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

      
    
    protected:
      AMH_i_skipExceptionHolder ();
      virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
      virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
      virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
      
    private:
      AMH_i_skipExceptionHolder (const AMH_i_skipExceptionHolder &);
      void operator= (const AMH_i_skipExceptionHolder &);
      
      ::CORBA::Exception *exception;
      
    protected:
      virtual ::CORBA::Boolean
      _tao_marshal__i_skip_i_hump_AMH_i_skipExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

      virtual ::CORBA::Boolean
      _tao_unmarshal__i_skip_i_hump_AMH_i_skipExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

    class TAO_IDL_TEST_STUB_Export AMH_i_skipExceptionHolder_init
      : public virtual ::CORBA::ValueFactoryBase
    {
    public:
      AMH_i_skipExceptionHolder_init ();

      static AMH_i_skipExceptionHolder_init* _downcast (::CORBA::ValueFactoryBase *);

      virtual ::CORBA::ValueBase *create_for_unmarshal ();

      // TAO-specific extensions
    public:
      virtual const char* tao_repository_id ();
    
    protected:
      virtual ~AMH_i_skipExceptionHolder_init ();
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_i_skipExceptionHolder;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_I_SKIP_I_HUMP_AMH_I_SKIPRESPONSEHANDLER__VAR_OUT_CH_)
#define _I_SKIP_I_HUMP_AMH_I_SKIPRESPONSEHANDLER__VAR_OUT_CH_

    class AMI_AMH_i_skipResponseHandlerHandler;
    typedef AMI_AMH_i_skipResponseHandlerHandler *AMI_AMH_i_skipResponseHandlerHandler_ptr;

    class AMH_i_skipResponseHandler;
    using AMH_i_skipResponseHandler_ptr = AMH_i_skipResponseHandler*;
    using AMH_i_skipResponseHandler_var = TAO_Objref_Var_T<AMH_i_skipResponseHandler>;
    using AMH_i_skipResponseHandler_out = TAO_Objref_Out_T<AMH_i_skipResponseHandler>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export AMH_i_skipResponseHandler
      : public virtual ::CORBA::Object
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMH_i_skipResponseHandler_ptr;
      using _var_type = AMH_i_skipResponseHandler_var;
      using _out_type = AMH_i_skipResponseHandler_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static AMH_i_skipResponseHandler_ptr _duplicate (AMH_i_skipResponseHandler_ptr obj);

      static void _tao_release (AMH_i_skipResponseHandler_ptr obj);

      static AMH_i_skipResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
      static AMH_i_skipResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AMH_i_skipResponseHandler_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      AMH_i_skipResponseHandler ();

      

      virtual ~AMH_i_skipResponseHandler () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      AMH_i_skipResponseHandler (const AMH_i_skipResponseHandler &) = delete;
      AMH_i_skipResponseHandler (AMH_i_skipResponseHandler &&) = delete;
      AMH_i_skipResponseHandler &operator= (const AMH_i_skipResponseHandler &) = delete;
      AMH_i_skipResponseHandler &operator= (AMH_i_skipResponseHandler &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_i_skipResponseHandler;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_I_SKIP_I_HUMP_AMI_I_SKIPHANDLER__VAR_OUT_CH_)
#define _I_SKIP_I_HUMP_AMI_I_SKIPHANDLER__VAR_OUT_CH_

    class AMI_i_skipHandler;
    using AMI_i_skipHandler_ptr = AMI_i_skipHandler*;
    using AMI_i_skipHandler_var = TAO_Objref_Var_T<AMI_i_skipHandler>;
    using AMI_i_skipHandler_out = TAO_Objref_Out_T<AMI_i_skipHandler>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export AMI_i_skipHandler
      : public virtual ::Messaging::ReplyHandler
    
    {
    public:
      friend class TAO::Narrow_Utils<AMI_i_skipHandler>;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMI_i_skipHandler_ptr;
      using _var_type = AMI_i_skipHandler_var;
      using _out_type = AMI_i_skipHandler_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static AMI_i_skipHandler_ptr _duplicate (AMI_i_skipHandler_ptr obj);

      static void _tao_release (AMI_i_skipHandler_ptr obj);

      static AMI_i_skipHandler_ptr _narrow (::CORBA::Object_ptr obj);
      static AMI_i_skipHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AMI_i_skipHandler_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      AMI_i_skipHandler ();

      // Concrete non-local interface only.
      AMI_i_skipHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      AMI_i_skipHandler (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~AMI_i_skipHandler () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      AMI_i_skipHandler (const AMI_i_skipHandler &) = delete;
      AMI_i_skipHandler (AMI_i_skipHandler &&) = delete;
      AMI_i_skipHandler &operator= (const AMI_i_skipHandler &) = delete;
      AMI_i_skipHandler &operator= (AMI_i_skipHandler &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMI_i_skipHandler;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module i_skip::i_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module i_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace pre_u_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace pre_u_hump
  {

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

    

#if !defined (_PRE_U_SKIP_PRE_U_HUMP_PRE_U_SKIP_CH_)
#define _PRE_U_SKIP_PRE_U_HUMP_PRE_U_SKIP_CH_

    class pre_u_skip;
    typedef ::TAO_FixedSeq_Var_T<pre_u_skip> pre_u_skip_var;
    typedef ::TAO_Seq_Out_T<pre_u_skip> pre_u_skip_out;
    

    class TAO_IDL_TEST_STUB_Export pre_u_skip
      : public
          ::TAO::unbounded_value_sequence< ::CORBA::Long>
    {
    public:
      pre_u_skip () = default;
      pre_u_skip (::CORBA::ULong max);
      pre_u_skip (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Long* buffer,
        ::CORBA::Boolean release = false);
      pre_u_skip (const pre_u_skip &) = default;
      pre_u_skip (pre_u_skip &&) = default;
      pre_u_skip& operator= (const pre_u_skip &) = default;
      pre_u_skip& operator= (pre_u_skip &&) = default;
      virtual ~pre_u_skip () = default;
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      
      using _var_type = pre_u_skip_var;
      using _out_type = pre_u_skip_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_pre_u_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module pre_u_skip::pre_u_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module pre_u_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace pre_b_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace pre_b_hump
  {

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

    

#if !defined (_PRE_B_SKIP_PRE_B_HUMP_PRE_B_SKIP_CH_)
#define _PRE_B_SKIP_PRE_B_HUMP_PRE_B_SKIP_CH_

    class pre_b_skip;
    typedef ::TAO_FixedSeq_Var_T<pre_b_skip> pre_b_skip_var;
    typedef ::TAO_Seq_Out_T<pre_b_skip> pre_b_skip_out;
    

    class TAO_IDL_TEST_STUB_Export pre_b_skip
      : public
          ::TAO::bounded_value_sequence< ::CORBA::Long,3>
    {
    public:
      pre_b_skip () = default;
      pre_b_skip (
        ::CORBA::ULong length,
        ::CORBA::Long* buffer,
        ::CORBA::Boolean release = false);
      pre_b_skip (const pre_b_skip &) = default;
      pre_b_skip (pre_b_skip &&) = default;
      pre_b_skip& operator= (const pre_b_skip &) = default;
      pre_b_skip& operator= (pre_b_skip &&) = default;
      virtual ~pre_b_skip () = default;
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      
      using _var_type = pre_b_skip_var;
      using _out_type = pre_b_skip_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_pre_b_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module pre_b_skip::pre_b_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module pre_b_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace str_u_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace str_u_hump
  {

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

    

#if !defined (_STR_U_SKIP_STR_U_HUMP_STR_U_SKIP_CH_)
#define _STR_U_SKIP_STR_U_HUMP_STR_U_SKIP_CH_

    class str_u_skip;
    typedef ::TAO_VarSeq_Var_T<str_u_skip> str_u_skip_var;
    typedef ::TAO_Seq_Out_T<str_u_skip> str_u_skip_out;
    

    class TAO_IDL_TEST_STUB_Export str_u_skip
      : public
          ::TAO::unbounded_basic_string_sequence<char>
    {
    public:
      str_u_skip () = default;
      str_u_skip (::CORBA::ULong max);
      str_u_skip (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Char ** buffer,
        ::CORBA::Boolean release = false);
      str_u_skip (const str_u_skip &) = default;
      str_u_skip (str_u_skip &&) = default;
      str_u_skip& operator= (const str_u_skip &) = default;
      str_u_skip& operator= (str_u_skip &&) = default;
      virtual ~str_u_skip () = default;
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      
      using _var_type = str_u_skip_var;
      using _out_type = str_u_skip_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_str_u_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module str_u_skip::str_u_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module str_u_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace str_b_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace str_b_hump
  {

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

    

#if !defined (_STR_B_SKIP_STR_B_HUMP_STR_B_SKIP_CH_)
#define _STR_B_SKIP_STR_B_HUMP_STR_B_SKIP_CH_

    class str_b_skip;
    typedef ::TAO_VarSeq_Var_T<str_b_skip> str_b_skip_var;
    typedef ::TAO_Seq_Out_T<str_b_skip> str_b_skip_out;
    

    class TAO_IDL_TEST_STUB_Export str_b_skip
      : public
          ::TAO::bounded_basic_string_sequence<char, 3>
    {
    public:
      str_b_skip () = default;
      str_b_skip (
        ::CORBA::ULong length,
        ::CORBA::Char ** buffer,
        ::CORBA::Boolean release = false);
      str_b_skip (const str_b_skip &) = default;
      str_b_skip (str_b_skip &&) = default;
      str_b_skip& operator= (const str_b_skip &) = default;
      str_b_skip& operator= (str_b_skip &&) = default;
      virtual ~str_b_skip () = default;
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      
      using _var_type = str_b_skip_var;
      using _out_type = str_b_skip_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_str_b_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module str_b_skip::str_b_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module str_b_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace wstr_u_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace wstr_u_hump
  {

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

    

#if !defined (_WSTR_U_SKIP_WSTR_U_HUMP_WSTR_U_SKIP_CH_)
#define _WSTR_U_SKIP_WSTR_U_HUMP_WSTR_U_SKIP_CH_

    class wstr_u_skip;
    typedef ::TAO_VarSeq_Var_T<wstr_u_skip> wstr_u_skip_var;
    typedef ::TAO_Seq_Out_T<wstr_u_skip> wstr_u_skip_out;
    

    class TAO_IDL_TEST_STUB_Export wstr_u_skip
      : public
          ::TAO::unbounded_basic_string_sequence<CORBA::WChar>
    {
    public:
      wstr_u_skip () = default;
      wstr_u_skip (::CORBA::ULong max);
      wstr_u_skip (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::WChar ** buffer,
        ::CORBA::Boolean release = false);
      wstr_u_skip (const wstr_u_skip &) = default;
      wstr_u_skip (wstr_u_skip &&) = default;
      wstr_u_skip& operator= (const wstr_u_skip &) = default;
      wstr_u_skip& operator= (wstr_u_skip &&) = default;
      virtual ~wstr_u_skip () = default;
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      
      using _var_type = wstr_u_skip_var;
      using _out_type = wstr_u_skip_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_wstr_u_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module wstr_u_skip::wstr_u_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module wstr_u_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace wstr_b_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace wstr_b_hump
  {

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

    

#if !defined (_WSTR_B_SKIP_WSTR_B_HUMP_WSTR_B_SKIP_CH_)
#define _WSTR_B_SKIP_WSTR_B_HUMP_WSTR_B_SKIP_CH_

    class wstr_b_skip;
    typedef ::TAO_VarSeq_Var_T<wstr_b_skip> wstr_b_skip_var;
    typedef ::TAO_Seq_Out_T<wstr_b_skip> wstr_b_skip_out;
    

    class TAO_IDL_TEST_STUB_Export wstr_b_skip
      : public
          ::TAO::bounded_basic_string_sequence<CORBA::WChar, 3>
    {
    public:
      wstr_b_skip () = default;
      wstr_b_skip (
        ::CORBA::ULong length,
        ::CORBA::WChar ** buffer,
        ::CORBA::Boolean release = false);
      wstr_b_skip (const wstr_b_skip &) = default;
      wstr_b_skip (wstr_b_skip &&) = default;
      wstr_b_skip& operator= (const wstr_b_skip &) = default;
      wstr_b_skip& operator= (wstr_b_skip &&) = default;
      virtual ~wstr_b_skip () = default;
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      
      using _var_type = wstr_b_skip_var;
      using _out_type = wstr_b_skip_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_wstr_b_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module wstr_b_skip::wstr_b_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module wstr_b_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_BLOO__VAR_OUT_CH_)
#define _BLOO__VAR_OUT_CH_

class AMI_blooHandler;
typedef AMI_blooHandler *AMI_blooHandler_ptr;

class bloo;
using bloo_ptr = bloo*;
using bloo_var = TAO_Objref_Var_T<bloo>;
using bloo_out = TAO_Objref_Out_T<bloo>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export bloo
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<bloo>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = bloo_ptr;
  using _var_type = bloo_var;
  using _out_type = bloo_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static bloo_ptr _duplicate (bloo_ptr obj);

  static void _tao_release (bloo_ptr obj);

  static bloo_ptr _narrow (::CORBA::Object_ptr obj);
  static bloo_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static bloo_ptr _nil ();

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  bloo ();

  // Concrete non-local interface only.
  bloo (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  bloo (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~bloo () = default;

private:
  // Private and unimplemented for concrete interfaces.
  bloo (const bloo &) = delete;
  bloo (bloo &&) = delete;
  bloo &operator= (const bloo &) = delete;
  bloo &operator= (bloo &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_bloo;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_AMH_BLOOEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _AMH_BLOOEXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_blooExceptionHolder;
using AMH_blooExceptionHolder_var = TAO_Value_Var_T<AMH_blooExceptionHolder>;
using AMH_blooExceptionHolder_out = TAO_Value_Out_T<AMH_blooExceptionHolder>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export AMH_blooExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_blooExceptionHolder*;
  using _var_type = AMH_blooExceptionHolder_var;
  using _out_type = AMH_blooExceptionHolder_out;

  static void _tao_any_destructor (void *);

  AMH_blooExceptionHolder (::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_blooExceptionHolder ();
  virtual ::CORBA::ValueBase *_copy_value ();

  static AMH_blooExceptionHolder* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_blooExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

  

protected:
  AMH_blooExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_blooExceptionHolder (const AMH_blooExceptionHolder &);
  void operator= (const AMH_blooExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__AMH_blooExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__AMH_blooExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

class TAO_IDL_TEST_STUB_Export AMH_blooExceptionHolder_init
  : public virtual ::CORBA::ValueFactoryBase
{
public:
  AMH_blooExceptionHolder_init ();

  static AMH_blooExceptionHolder_init* _downcast (::CORBA::ValueFactoryBase *);

  virtual ::CORBA::ValueBase *create_for_unmarshal ();

  // TAO-specific extensions
public:
  virtual const char* tao_repository_id ();

protected:
  virtual ~AMH_blooExceptionHolder_init ();
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_blooExceptionHolder;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_AMH_BLOORESPONSEHANDLER__VAR_OUT_CH_)
#define _AMH_BLOORESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_blooResponseHandlerHandler;
typedef AMI_AMH_blooResponseHandlerHandler *AMI_AMH_blooResponseHandlerHandler_ptr;

class AMH_blooResponseHandler;
using AMH_blooResponseHandler_ptr = AMH_blooResponseHandler*;
using AMH_blooResponseHandler_var = TAO_Objref_Var_T<AMH_blooResponseHandler>;
using AMH_blooResponseHandler_out = TAO_Objref_Out_T<AMH_blooResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_blooResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_blooResponseHandler_ptr;
  using _var_type = AMH_blooResponseHandler_var;
  using _out_type = AMH_blooResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_blooResponseHandler_ptr _duplicate (AMH_blooResponseHandler_ptr obj);

  static void _tao_release (AMH_blooResponseHandler_ptr obj);

  static AMH_blooResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_blooResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_blooResponseHandler_ptr _nil ();

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_blooResponseHandler ();

  

  virtual ~AMH_blooResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_blooResponseHandler (const AMH_blooResponseHandler &) = delete;
  AMH_blooResponseHandler (AMH_blooResponseHandler &&) = delete;
  AMH_blooResponseHandler &operator= (const AMH_blooResponseHandler &) = delete;
  AMH_blooResponseHandler &operator= (AMH_blooResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_blooResponseHandler;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_AMI_BLOOHANDLER__VAR_OUT_CH_)
#define _AMI_BLOOHANDLER__VAR_OUT_CH_

class AMI_blooHandler;
using AMI_blooHandler_ptr = AMI_blooHandler*;
using AMI_blooHandler_var = TAO_Objref_Var_T<AMI_blooHandler>;
using AMI_blooHandler_out = TAO_Objref_Out_T<AMI_blooHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_blooHandler
  : public virtual ::Messaging::ReplyHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_blooHandler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_blooHandler_ptr;
  using _var_type = AMI_blooHandler_var;
  using _out_type = AMI_blooHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_blooHandler_ptr _duplicate (AMI_blooHandler_ptr obj);

  static void _tao_release (AMI_blooHandler_ptr obj);

  static AMI_blooHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_blooHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_blooHandler_ptr _nil ();

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_blooHandler ();

  // Concrete non-local interface only.
  AMI_blooHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_blooHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_blooHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_blooHandler (const AMI_blooHandler &) = delete;
  AMI_blooHandler (AMI_blooHandler &&) = delete;
  AMI_blooHandler &operator= (const AMI_blooHandler &) = delete;
  AMI_blooHandler &operator= (AMI_blooHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMI_blooHandler;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace obj_u_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace obj_u_hump
  {

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

    

#if !defined (_OBJ_U_SKIP_OBJ_U_HUMP_OBJ_U_SKIP_CH_)
#define _OBJ_U_SKIP_OBJ_U_HUMP_OBJ_U_SKIP_CH_

    class obj_u_skip;
    typedef ::TAO_VarSeq_Var_T<obj_u_skip> obj_u_skip_var;
    typedef ::TAO_Seq_Out_T<obj_u_skip> obj_u_skip_out;
    

    class TAO_IDL_TEST_STUB_Export obj_u_skip
      : public
          ::TAO::unbounded_object_reference_sequence<
              bloo,
              bloo_var
            >
    {
    public:
      obj_u_skip () = default;
      obj_u_skip (::CORBA::ULong max);
      obj_u_skip (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        bloo_ptr* buffer,
        ::CORBA::Boolean release = false);
      obj_u_skip (const obj_u_skip &) = default;
      obj_u_skip (obj_u_skip &&) = default;
      obj_u_skip& operator= (const obj_u_skip &) = default;
      obj_u_skip& operator= (obj_u_skip &&) = default;
      virtual ~obj_u_skip () = default;
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      
      using _var_type = obj_u_skip_var;
      using _out_type = obj_u_skip_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_obj_u_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module obj_u_skip::obj_u_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module obj_u_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace obj_b_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace obj_b_hump
  {

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

    

#if !defined (_OBJ_B_SKIP_OBJ_B_HUMP_OBJ_B_SKIP_CH_)
#define _OBJ_B_SKIP_OBJ_B_HUMP_OBJ_B_SKIP_CH_

    class obj_b_skip;
    typedef ::TAO_VarSeq_Var_T<obj_b_skip> obj_b_skip_var;
    typedef ::TAO_Seq_Out_T<obj_b_skip> obj_b_skip_out;
    

    class TAO_IDL_TEST_STUB_Export obj_b_skip
      : public
          ::TAO::unbounded_object_reference_sequence<
              bloo,
              bloo_var
            >
    {
    public:
      obj_b_skip () = default;
      obj_b_skip (::CORBA::ULong max);
      obj_b_skip (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        bloo_ptr* buffer,
        ::CORBA::Boolean release = false);
      obj_b_skip (const obj_b_skip &) = default;
      obj_b_skip (obj_b_skip &&) = default;
      obj_b_skip& operator= (const obj_b_skip &) = default;
      obj_b_skip& operator= (obj_b_skip &&) = default;
      virtual ~obj_b_skip () = default;
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      
      using _var_type = obj_b_skip_var;
      using _out_type = obj_b_skip_out;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_obj_b_skip;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module obj_b_skip::obj_b_hump


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module obj_b_skip
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace bug_1985_a
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace b
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_BUG_1985_A_B_SOMETHING__VAR_OUT_CH_)
#define _BUG_1985_A_B_SOMETHING__VAR_OUT_CH_

    class AMI_somethingHandler;
    typedef AMI_somethingHandler *AMI_somethingHandler_ptr;

    class something;
    using something_ptr = something*;
    using something_var = TAO_Objref_Var_T<something>;
    using something_out = TAO_Objref_Out_T<something>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export something
      : public virtual ::CORBA::Object
    {
    public:
      friend class TAO::Narrow_Utils<something>;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = something_ptr;
      using _var_type = something_var;
      using _out_type = something_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static something_ptr _duplicate (something_ptr obj);

      static void _tao_release (something_ptr obj);

      static something_ptr _narrow (::CORBA::Object_ptr obj);
      static something_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static something_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      something ();

      // Concrete non-local interface only.
      something (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      something (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~something () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      something (const something &) = delete;
      something (something &&) = delete;
      something &operator= (const something &) = delete;
      something &operator= (something &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_something;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

    

#if !defined (_BUG_1985_A_B_AMH_SOMETHINGEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _BUG_1985_A_B_AMH_SOMETHINGEXCEPTIONHOLDER__VAR_OUT_CH_

    class AMH_somethingExceptionHolder;
    using AMH_somethingExceptionHolder_var = TAO_Value_Var_T<AMH_somethingExceptionHolder>;
    using AMH_somethingExceptionHolder_out = TAO_Value_Out_T<AMH_somethingExceptionHolder>;

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

    

    class TAO_IDL_TEST_STUB_Export AMH_somethingExceptionHolder
      : public virtual ::CORBA::DefaultValueRefCountBase
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMH_somethingExceptionHolder*;
      using _var_type = AMH_somethingExceptionHolder_var;
      using _out_type = AMH_somethingExceptionHolder_out;

      static void _tao_any_destructor (void *);

      AMH_somethingExceptionHolder (::CORBA::Exception *ex)
        : exception (ex)
      {}

      virtual ~AMH_somethingExceptionHolder ();
      virtual ::CORBA::ValueBase *_copy_value ();

      static AMH_somethingExceptionHolder* _downcast (::CORBA::ValueBase *v);
      
      /// TAO extensions or internals
      static ::CORBA::Boolean _tao_unmarshal (
          TAO_InputCDR &strm,
          AMH_somethingExceptionHolder *&new_object);
      
      virtual const char* _tao_obv_repository_id () const;

      virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

      static const char* _tao_obv_static_repository_id ();

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

      
    
    protected:
      AMH_somethingExceptionHolder ();
      virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
      virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
      virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
      
    private:
      AMH_somethingExceptionHolder (const AMH_somethingExceptionHolder &);
      void operator= (const AMH_somethingExceptionHolder &);
      
      ::CORBA::Exception *exception;
      
    protected:
      virtual ::CORBA::Boolean
      _tao_marshal__bug_1985_a_b_AMH_somethingExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

      virtual ::CORBA::Boolean
      _tao_unmarshal__bug_1985_a_b_AMH_somethingExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

    class TAO_IDL_TEST_STUB_Export AMH_somethingExceptionHolder_init
      : public virtual ::CORBA::ValueFactoryBase
    {
    public:
      AMH_somethingExceptionHolder_init ();

      static AMH_somethingExceptionHolder_init* _downcast (::CORBA::ValueFactoryBase *);

      virtual ::CORBA::ValueBase *create_for_unmarshal ();

      // TAO-specific extensions
    public:
      virtual const char* tao_repository_id ();
    
    protected:
      virtual ~AMH_somethingExceptionHolder_init ();
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_somethingExceptionHolder;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_BUG_1985_A_B_AMH_SOMETHINGRESPONSEHANDLER__VAR_OUT_CH_)
#define _BUG_1985_A_B_AMH_SOMETHINGRESPONSEHANDLER__VAR_OUT_CH_

    class AMI_AMH_somethingResponseHandlerHandler;
    typedef AMI_AMH_somethingResponseHandlerHandler *AMI_AMH_somethingResponseHandlerHandler_ptr;

    class AMH_somethingResponseHandler;
    using AMH_somethingResponseHandler_ptr = AMH_somethingResponseHandler*;
    using AMH_somethingResponseHandler_var = TAO_Objref_Var_T<AMH_somethingResponseHandler>;
    using AMH_somethingResponseHandler_out = TAO_Objref_Out_T<AMH_somethingResponseHandler>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export AMH_somethingResponseHandler
      : public virtual ::CORBA::Object
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMH_somethingResponseHandler_ptr;
      using _var_type = AMH_somethingResponseHandler_var;
      using _out_type = AMH_somethingResponseHandler_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static AMH_somethingResponseHandler_ptr _duplicate (AMH_somethingResponseHandler_ptr obj);

      static void _tao_release (AMH_somethingResponseHandler_ptr obj);

      static AMH_somethingResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
      static AMH_somethingResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AMH_somethingResponseHandler_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      AMH_somethingResponseHandler ();

      

      virtual ~AMH_somethingResponseHandler () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      AMH_somethingResponseHandler (const AMH_somethingResponseHandler &) = delete;
      AMH_somethingResponseHandler (AMH_somethingResponseHandler &&) = delete;
      AMH_somethingResponseHandler &operator= (const AMH_somethingResponseHandler &) = delete;
      AMH_somethingResponseHandler &operator= (AMH_somethingResponseHandler &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_somethingResponseHandler;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_BUG_1985_A_B_AMI_SOMETHINGHANDLER__VAR_OUT_CH_)
#define _BUG_1985_A_B_AMI_SOMETHINGHANDLER__VAR_OUT_CH_

    class AMI_somethingHandler;
    using AMI_somethingHandler_ptr = AMI_somethingHandler*;
    using AMI_somethingHandler_var = TAO_Objref_Var_T<AMI_somethingHandler>;
    using AMI_somethingHandler_out = TAO_Objref_Out_T<AMI_somethingHandler>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export AMI_somethingHandler
      : public virtual ::Messaging::ReplyHandler
    
    {
    public:
      friend class TAO::Narrow_Utils<AMI_somethingHandler>;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMI_somethingHandler_ptr;
      using _var_type = AMI_somethingHandler_var;
      using _out_type = AMI_somethingHandler_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static AMI_somethingHandler_ptr _duplicate (AMI_somethingHandler_ptr obj);

      static void _tao_release (AMI_somethingHandler_ptr obj);

      static AMI_somethingHandler_ptr _narrow (::CORBA::Object_ptr obj);
      static AMI_somethingHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AMI_somethingHandler_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      AMI_somethingHandler ();

      // Concrete non-local interface only.
      AMI_somethingHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      AMI_somethingHandler (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~AMI_somethingHandler () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      AMI_somethingHandler (const AMI_somethingHandler &) = delete;
      AMI_somethingHandler (AMI_somethingHandler &&) = delete;
      AMI_somethingHandler &operator= (const AMI_somethingHandler &) = delete;
      AMI_somethingHandler &operator= (AMI_somethingHandler &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMI_somethingHandler;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module bug_1985_a::b


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module bug_1985_a
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace bug_1985_c
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace d
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_BUG_1985_C_D_SOMETHING__VAR_OUT_CH_)
#define _BUG_1985_C_D_SOMETHING__VAR_OUT_CH_

    class AMI_somethingHandler;
    typedef AMI_somethingHandler *AMI_somethingHandler_ptr;

    class something;
    using something_ptr = something*;
    using something_var = TAO_Objref_Var_T<something>;
    using something_out = TAO_Objref_Out_T<something>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export something
      : public virtual ::bug_1985_a::b::something
    
    {
    public:
      friend class TAO::Narrow_Utils<something>;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = something_ptr;
      using _var_type = something_var;
      using _out_type = something_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static something_ptr _duplicate (something_ptr obj);

      static void _tao_release (something_ptr obj);

      static something_ptr _narrow (::CORBA::Object_ptr obj);
      static something_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static something_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      something ();

      // Concrete non-local interface only.
      something (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      something (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~something () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      something (const something &) = delete;
      something (something &&) = delete;
      something &operator= (const something &) = delete;
      something &operator= (something &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_something;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

    

#if !defined (_BUG_1985_C_D_AMH_SOMETHINGEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _BUG_1985_C_D_AMH_SOMETHINGEXCEPTIONHOLDER__VAR_OUT_CH_

    class AMH_somethingExceptionHolder;
    using AMH_somethingExceptionHolder_var = TAO_Value_Var_T<AMH_somethingExceptionHolder>;
    using AMH_somethingExceptionHolder_out = TAO_Value_Out_T<AMH_somethingExceptionHolder>;

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

    

    class TAO_IDL_TEST_STUB_Export AMH_somethingExceptionHolder
      : public virtual ::CORBA::DefaultValueRefCountBase
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMH_somethingExceptionHolder*;
      using _var_type = AMH_somethingExceptionHolder_var;
      using _out_type = AMH_somethingExceptionHolder_out;

      static void _tao_any_destructor (void *);

      AMH_somethingExceptionHolder (::CORBA::Exception *ex)
        : exception (ex)
      {}

      virtual ~AMH_somethingExceptionHolder ();
      virtual ::CORBA::ValueBase *_copy_value ();

      static AMH_somethingExceptionHolder* _downcast (::CORBA::ValueBase *v);
      
      /// TAO extensions or internals
      static ::CORBA::Boolean _tao_unmarshal (
          TAO_InputCDR &strm,
          AMH_somethingExceptionHolder *&new_object);
      
      virtual const char* _tao_obv_repository_id () const;

      virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

      static const char* _tao_obv_static_repository_id ();

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

      
    
    protected:
      AMH_somethingExceptionHolder ();
      virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
      virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
      virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
      
    private:
      AMH_somethingExceptionHolder (const AMH_somethingExceptionHolder &);
      void operator= (const AMH_somethingExceptionHolder &);
      
      ::CORBA::Exception *exception;
      
    protected:
      virtual ::CORBA::Boolean
      _tao_marshal__bug_1985_c_d_AMH_somethingExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

      virtual ::CORBA::Boolean
      _tao_unmarshal__bug_1985_c_d_AMH_somethingExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

    class TAO_IDL_TEST_STUB_Export AMH_somethingExceptionHolder_init
      : public virtual ::CORBA::ValueFactoryBase
    {
    public:
      AMH_somethingExceptionHolder_init ();

      static AMH_somethingExceptionHolder_init* _downcast (::CORBA::ValueFactoryBase *);

      virtual ::CORBA::ValueBase *create_for_unmarshal ();

      // TAO-specific extensions
    public:
      virtual const char* tao_repository_id ();
    
    protected:
      virtual ~AMH_somethingExceptionHolder_init ();
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_somethingExceptionHolder;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_BUG_1985_C_D_AMH_SOMETHINGRESPONSEHANDLER__VAR_OUT_CH_)
#define _BUG_1985_C_D_AMH_SOMETHINGRESPONSEHANDLER__VAR_OUT_CH_

    class AMI_AMH_somethingResponseHandlerHandler;
    typedef AMI_AMH_somethingResponseHandlerHandler *AMI_AMH_somethingResponseHandlerHandler_ptr;

    class AMH_somethingResponseHandler;
    using AMH_somethingResponseHandler_ptr = AMH_somethingResponseHandler*;
    using AMH_somethingResponseHandler_var = TAO_Objref_Var_T<AMH_somethingResponseHandler>;
    using AMH_somethingResponseHandler_out = TAO_Objref_Out_T<AMH_somethingResponseHandler>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export AMH_somethingResponseHandler
      : public virtual ::CORBA::Object
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMH_somethingResponseHandler_ptr;
      using _var_type = AMH_somethingResponseHandler_var;
      using _out_type = AMH_somethingResponseHandler_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static AMH_somethingResponseHandler_ptr _duplicate (AMH_somethingResponseHandler_ptr obj);

      static void _tao_release (AMH_somethingResponseHandler_ptr obj);

      static AMH_somethingResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
      static AMH_somethingResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AMH_somethingResponseHandler_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      AMH_somethingResponseHandler ();

      

      virtual ~AMH_somethingResponseHandler () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      AMH_somethingResponseHandler (const AMH_somethingResponseHandler &) = delete;
      AMH_somethingResponseHandler (AMH_somethingResponseHandler &&) = delete;
      AMH_somethingResponseHandler &operator= (const AMH_somethingResponseHandler &) = delete;
      AMH_somethingResponseHandler &operator= (AMH_somethingResponseHandler &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_somethingResponseHandler;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_BUG_1985_C_D_AMI_SOMETHINGHANDLER__VAR_OUT_CH_)
#define _BUG_1985_C_D_AMI_SOMETHINGHANDLER__VAR_OUT_CH_

    class AMI_somethingHandler;
    using AMI_somethingHandler_ptr = AMI_somethingHandler*;
    using AMI_somethingHandler_var = TAO_Objref_Var_T<AMI_somethingHandler>;
    using AMI_somethingHandler_out = TAO_Objref_Out_T<AMI_somethingHandler>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export AMI_somethingHandler
      : public virtual ::bug_1985_a::b::AMI_somethingHandler
    
    {
    public:
      friend class TAO::Narrow_Utils<AMI_somethingHandler>;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMI_somethingHandler_ptr;
      using _var_type = AMI_somethingHandler_var;
      using _out_type = AMI_somethingHandler_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static AMI_somethingHandler_ptr _duplicate (AMI_somethingHandler_ptr obj);

      static void _tao_release (AMI_somethingHandler_ptr obj);

      static AMI_somethingHandler_ptr _narrow (::CORBA::Object_ptr obj);
      static AMI_somethingHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AMI_somethingHandler_ptr _nil ();

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      AMI_somethingHandler ();

      // Concrete non-local interface only.
      AMI_somethingHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      AMI_somethingHandler (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~AMI_somethingHandler () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      AMI_somethingHandler (const AMI_somethingHandler &) = delete;
      AMI_somethingHandler (AMI_somethingHandler &&) = delete;
      AMI_somethingHandler &operator= (const AMI_somethingHandler &) = delete;
      AMI_somethingHandler &operator= (AMI_somethingHandler &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMI_somethingHandler;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module bug_1985_c::d


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module bug_1985_c
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace Negotiator
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

  

#if !defined (_NEGOTIATOR_UAV_NEGOTIATOR__VAR_OUT_CH_)
#define _NEGOTIATOR_UAV_NEGOTIATOR__VAR_OUT_CH_

  class AMI_UAV_NegotiatorHandler;
  typedef AMI_UAV_NegotiatorHandler *AMI_UAV_NegotiatorHandler_ptr;

  class UAV_Negotiator;
  using UAV_Negotiator_ptr = UAV_Negotiator*;
  using UAV_Negotiator_var = TAO_Objref_Var_T<UAV_Negotiator>;
  using UAV_Negotiator_out = TAO_Objref_Out_T<UAV_Negotiator>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

  

  class TAO_IDL_TEST_STUB_Export UAV_Negotiator
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<UAV_Negotiator>;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = UAV_Negotiator_ptr;
    using _var_type = UAV_Negotiator_var;
    using _out_type = UAV_Negotiator_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static UAV_Negotiator_ptr _duplicate (UAV_Negotiator_ptr obj);

    static void _tao_release (UAV_Negotiator_ptr obj);

    static UAV_Negotiator_ptr _narrow (::CORBA::Object_ptr obj);
    static UAV_Negotiator_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static UAV_Negotiator_ptr _nil ();

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    static const char* _desc_repository_id ();
    static const char* _desc_interface_name ();
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    UAV_Negotiator ();

    // Concrete non-local interface only.
    UAV_Negotiator (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    UAV_Negotiator (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~UAV_Negotiator () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    UAV_Negotiator (const UAV_Negotiator &) = delete;
    UAV_Negotiator (UAV_Negotiator &&) = delete;
    UAV_Negotiator &operator= (const UAV_Negotiator &) = delete;
    UAV_Negotiator &operator= (UAV_Negotiator &&) = delete;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_UAV_Negotiator;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

  

#if !defined (_NEGOTIATOR_AMH_UAV_NEGOTIATOREXCEPTIONHOLDER__VAR_OUT_CH_)
#define _NEGOTIATOR_AMH_UAV_NEGOTIATOREXCEPTIONHOLDER__VAR_OUT_CH_

  class AMH_UAV_NegotiatorExceptionHolder;
  using AMH_UAV_NegotiatorExceptionHolder_var = TAO_Value_Var_T<AMH_UAV_NegotiatorExceptionHolder>;
  using AMH_UAV_NegotiatorExceptionHolder_out = TAO_Value_Out_T<AMH_UAV_NegotiatorExceptionHolder>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

  

  class TAO_IDL_TEST_STUB_Export AMH_UAV_NegotiatorExceptionHolder
    : public virtual ::CORBA::DefaultValueRefCountBase
  {
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = AMH_UAV_NegotiatorExceptionHolder*;
    using _var_type = AMH_UAV_NegotiatorExceptionHolder_var;
    using _out_type = AMH_UAV_NegotiatorExceptionHolder_out;

    static void _tao_any_destructor (void *);

    AMH_UAV_NegotiatorExceptionHolder (::CORBA::Exception *ex)
      : exception (ex)
    {}

    virtual ~AMH_UAV_NegotiatorExceptionHolder ();
    virtual ::CORBA::ValueBase *_copy_value ();

    static AMH_UAV_NegotiatorExceptionHolder* _downcast (::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        AMH_UAV_NegotiatorExceptionHolder *&new_object);
    
    virtual const char* _tao_obv_repository_id () const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id ();

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

    
  
  protected:
    AMH_UAV_NegotiatorExceptionHolder ();
    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
    
  private:
    AMH_UAV_NegotiatorExceptionHolder (const AMH_UAV_NegotiatorExceptionHolder &);
    void operator= (const AMH_UAV_NegotiatorExceptionHolder &);
    
    ::CORBA::Exception *exception;
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__Negotiator_AMH_UAV_NegotiatorExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

    virtual ::CORBA::Boolean
    _tao_unmarshal__Negotiator_AMH_UAV_NegotiatorExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

  class TAO_IDL_TEST_STUB_Export AMH_UAV_NegotiatorExceptionHolder_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    AMH_UAV_NegotiatorExceptionHolder_init ();

    static AMH_UAV_NegotiatorExceptionHolder_init* _downcast (::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *create_for_unmarshal ();

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id ();
  
  protected:
    virtual ~AMH_UAV_NegotiatorExceptionHolder_init ();
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_UAV_NegotiatorExceptionHolder;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

  

#if !defined (_NEGOTIATOR_AMH_UAV_NEGOTIATORRESPONSEHANDLER__VAR_OUT_CH_)
#define _NEGOTIATOR_AMH_UAV_NEGOTIATORRESPONSEHANDLER__VAR_OUT_CH_

  class AMI_AMH_UAV_NegotiatorResponseHandlerHandler;
  typedef AMI_AMH_UAV_NegotiatorResponseHandlerHandler *AMI_AMH_UAV_NegotiatorResponseHandlerHandler_ptr;

  class AMH_UAV_NegotiatorResponseHandler;
  using AMH_UAV_NegotiatorResponseHandler_ptr = AMH_UAV_NegotiatorResponseHandler*;
  using AMH_UAV_NegotiatorResponseHandler_var = TAO_Objref_Var_T<AMH_UAV_NegotiatorResponseHandler>;
  using AMH_UAV_NegotiatorResponseHandler_out = TAO_Objref_Out_T<AMH_UAV_NegotiatorResponseHandler>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

  

  class TAO_IDL_TEST_STUB_Export AMH_UAV_NegotiatorResponseHandler
    : public virtual ::CORBA::Object
  {
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = AMH_UAV_NegotiatorResponseHandler_ptr;
    using _var_type = AMH_UAV_NegotiatorResponseHandler_var;
    using _out_type = AMH_UAV_NegotiatorResponseHandler_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static AMH_UAV_NegotiatorResponseHandler_ptr _duplicate (AMH_UAV_NegotiatorResponseHandler_ptr obj);

    static void _tao_release (AMH_UAV_NegotiatorResponseHandler_ptr obj);

    static AMH_UAV_NegotiatorResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
    static AMH_UAV_NegotiatorResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static AMH_UAV_NegotiatorResponseHandler_ptr _nil ();

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    static const char* _desc_repository_id ();
    static const char* _desc_interface_name ();
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    AMH_UAV_NegotiatorResponseHandler ();

    

    virtual ~AMH_UAV_NegotiatorResponseHandler () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    AMH_UAV_NegotiatorResponseHandler (const AMH_UAV_NegotiatorResponseHandler &) = delete;
    AMH_UAV_NegotiatorResponseHandler (AMH_UAV_NegotiatorResponseHandler &&) = delete;
    AMH_UAV_NegotiatorResponseHandler &operator= (const AMH_UAV_NegotiatorResponseHandler &) = delete;
    AMH_UAV_NegotiatorResponseHandler &operator= (AMH_UAV_NegotiatorResponseHandler &&) = delete;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_UAV_NegotiatorResponseHandler;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

  

#if !defined (_NEGOTIATOR_AMI_UAV_NEGOTIATORHANDLER__VAR_OUT_CH_)
#define _NEGOTIATOR_AMI_UAV_NEGOTIATORHANDLER__VAR_OUT_CH_

  class AMI_UAV_NegotiatorHandler;
  using AMI_UAV_NegotiatorHandler_ptr = AMI_UAV_NegotiatorHandler*;
  using AMI_UAV_NegotiatorHandler_var = TAO_Objref_Var_T<AMI_UAV_NegotiatorHandler>;
  using AMI_UAV_NegotiatorHandler_out = TAO_Objref_Out_T<AMI_UAV_NegotiatorHandler>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

  

  class TAO_IDL_TEST_STUB_Export AMI_UAV_NegotiatorHandler
    : public virtual ::Messaging::ReplyHandler
  
  {
  public:
    friend class TAO::Narrow_Utils<AMI_UAV_NegotiatorHandler>;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = AMI_UAV_NegotiatorHandler_ptr;
    using _var_type = AMI_UAV_NegotiatorHandler_var;
    using _out_type = AMI_UAV_NegotiatorHandler_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static AMI_UAV_NegotiatorHandler_ptr _duplicate (AMI_UAV_NegotiatorHandler_ptr obj);

    static void _tao_release (AMI_UAV_NegotiatorHandler_ptr obj);

    static AMI_UAV_NegotiatorHandler_ptr _narrow (::CORBA::Object_ptr obj);
    static AMI_UAV_NegotiatorHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static AMI_UAV_NegotiatorHandler_ptr _nil ();

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    static const char* _desc_repository_id ();
    static const char* _desc_interface_name ();
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    AMI_UAV_NegotiatorHandler ();

    // Concrete non-local interface only.
    AMI_UAV_NegotiatorHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    AMI_UAV_NegotiatorHandler (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~AMI_UAV_NegotiatorHandler () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    AMI_UAV_NegotiatorHandler (const AMI_UAV_NegotiatorHandler &) = delete;
    AMI_UAV_NegotiatorHandler (AMI_UAV_NegotiatorHandler &&) = delete;
    AMI_UAV_NegotiatorHandler &operator= (const AMI_UAV_NegotiatorHandler &) = delete;
    AMI_UAV_NegotiatorHandler &operator= (AMI_UAV_NegotiatorHandler &&) = delete;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMI_UAV_NegotiatorHandler;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

  

#if !defined (_NEGOTIATOR_UAV_NEGOTIATOR_FACTORY__VAR_OUT_CH_)
#define _NEGOTIATOR_UAV_NEGOTIATOR_FACTORY__VAR_OUT_CH_

  class AMI_UAV_Negotiator_FactoryHandler;
  typedef AMI_UAV_Negotiator_FactoryHandler *AMI_UAV_Negotiator_FactoryHandler_ptr;

  class UAV_Negotiator_Factory;
  using UAV_Negotiator_Factory_ptr = UAV_Negotiator_Factory*;
  using UAV_Negotiator_Factory_var = TAO_Objref_Var_T<UAV_Negotiator_Factory>;
  using UAV_Negotiator_Factory_out = TAO_Objref_Out_T<UAV_Negotiator_Factory>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

  

  class TAO_IDL_TEST_STUB_Export UAV_Negotiator_Factory
    : public virtual ::Negotiator::UAV_Negotiator
  
  {
  public:
    friend class TAO::Narrow_Utils<UAV_Negotiator_Factory>;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = UAV_Negotiator_Factory_ptr;
    using _var_type = UAV_Negotiator_Factory_var;
    using _out_type = UAV_Negotiator_Factory_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static UAV_Negotiator_Factory_ptr _duplicate (UAV_Negotiator_Factory_ptr obj);

    static void _tao_release (UAV_Negotiator_Factory_ptr obj);

    static UAV_Negotiator_Factory_ptr _narrow (::CORBA::Object_ptr obj);
    static UAV_Negotiator_Factory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static UAV_Negotiator_Factory_ptr _nil ();

    virtual ::Negotiator::UAV_Negotiator_ptr make_negotiator (
      const char * bitrate_sc);

    virtual void sendc_make_negotiator (
      ::Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr ami_handler,
      const char * bitrate_sc);

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    static const char* _desc_repository_id ();
    static const char* _desc_interface_name ();
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    UAV_Negotiator_Factory ();

    // Concrete non-local interface only.
    UAV_Negotiator_Factory (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    UAV_Negotiator_Factory (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~UAV_Negotiator_Factory () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    UAV_Negotiator_Factory (const UAV_Negotiator_Factory &) = delete;
    UAV_Negotiator_Factory (UAV_Negotiator_Factory &&) = delete;
    UAV_Negotiator_Factory &operator= (const UAV_Negotiator_Factory &) = delete;
    UAV_Negotiator_Factory &operator= (UAV_Negotiator_Factory &&) = delete;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_UAV_Negotiator_Factory;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

  

#if !defined (_NEGOTIATOR_AMH_UAV_NEGOTIATOR_FACTORYEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _NEGOTIATOR_AMH_UAV_NEGOTIATOR_FACTORYEXCEPTIONHOLDER__VAR_OUT_CH_

  class AMH_UAV_Negotiator_FactoryExceptionHolder;
  using AMH_UAV_Negotiator_FactoryExceptionHolder_var = TAO_Value_Var_T<AMH_UAV_Negotiator_FactoryExceptionHolder>;
  using AMH_UAV_Negotiator_FactoryExceptionHolder_out = TAO_Value_Out_T<AMH_UAV_Negotiator_FactoryExceptionHolder>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

  

  class TAO_IDL_TEST_STUB_Export AMH_UAV_Negotiator_FactoryExceptionHolder
    : public virtual ::CORBA::DefaultValueRefCountBase
  {
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = AMH_UAV_Negotiator_FactoryExceptionHolder*;
    using _var_type = AMH_UAV_Negotiator_FactoryExceptionHolder_var;
    using _out_type = AMH_UAV_Negotiator_FactoryExceptionHolder_out;

    static void _tao_any_destructor (void *);

    AMH_UAV_Negotiator_FactoryExceptionHolder (::CORBA::Exception *ex)
      : exception (ex)
    {}

    virtual ~AMH_UAV_Negotiator_FactoryExceptionHolder ();
    virtual ::CORBA::ValueBase *_copy_value ();

    static AMH_UAV_Negotiator_FactoryExceptionHolder* _downcast (::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        AMH_UAV_Negotiator_FactoryExceptionHolder *&new_object);
    
    virtual const char* _tao_obv_repository_id () const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id ();

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

    
  public:
    virtual void raise_make_negotiator ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_make_negotiator ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_UAV_Negotiator_FactoryExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_UAV_Negotiator_FactoryExceptionHolder (const AMH_UAV_Negotiator_FactoryExceptionHolder &);
  void operator= (const AMH_UAV_Negotiator_FactoryExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Negotiator_AMH_UAV_Negotiator_FactoryExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Negotiator_AMH_UAV_Negotiator_FactoryExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_UAV_Negotiator_FactoryExceptionHolder;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_NEGOTIATOR_AMH_UAV_NEGOTIATOR_FACTORYRESPONSEHANDLER__VAR_OUT_CH_)
#define _NEGOTIATOR_AMH_UAV_NEGOTIATOR_FACTORYRESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_UAV_Negotiator_FactoryResponseHandlerHandler;
typedef AMI_AMH_UAV_Negotiator_FactoryResponseHandlerHandler *AMI_AMH_UAV_Negotiator_FactoryResponseHandlerHandler_ptr;

class AMH_UAV_Negotiator_FactoryResponseHandler;
using AMH_UAV_Negotiator_FactoryResponseHandler_ptr = AMH_UAV_Negotiator_FactoryResponseHandler*;
using AMH_UAV_Negotiator_FactoryResponseHandler_var = TAO_Objref_Var_T<AMH_UAV_Negotiator_FactoryResponseHandler>;
using AMH_UAV_Negotiator_FactoryResponseHandler_out = TAO_Objref_Out_T<AMH_UAV_Negotiator_FactoryResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_UAV_Negotiator_FactoryResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_UAV_Negotiator_FactoryResponseHandler_ptr;
  using _var_type = AMH_UAV_Negotiator_FactoryResponseHandler_var;
  using _out_type = AMH_UAV_Negotiator_FactoryResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_UAV_Negotiator_FactoryResponseHandler_ptr _duplicate (AMH_UAV_Negotiator_FactoryResponseHandler_ptr obj);

  static void _tao_release (AMH_UAV_Negotiator_FactoryResponseHandler_ptr obj);

  static AMH_UAV_Negotiator_FactoryResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_UAV_Negotiator_FactoryResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_UAV_Negotiator_FactoryResponseHandler_ptr _nil ();

  virtual void make_negotiator (
    ::Negotiator::UAV_Negotiator_ptr return_value) = 0;

  virtual void make_negotiator_excep (
    ::Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_UAV_Negotiator_FactoryResponseHandler ();

  

  virtual ~AMH_UAV_Negotiator_FactoryResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_UAV_Negotiator_FactoryResponseHandler (const AMH_UAV_Negotiator_FactoryResponseHandler &) = delete;
  AMH_UAV_Negotiator_FactoryResponseHandler (AMH_UAV_Negotiator_FactoryResponseHandler &&) = delete;
  AMH_UAV_Negotiator_FactoryResponseHandler &operator= (const AMH_UAV_Negotiator_FactoryResponseHandler &) = delete;
  AMH_UAV_Negotiator_FactoryResponseHandler &operator= (AMH_UAV_Negotiator_FactoryResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_UAV_Negotiator_FactoryResponseHandler;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_NEGOTIATOR_AMI_UAV_NEGOTIATOR_FACTORYHANDLER__VAR_OUT_CH_)
#define _NEGOTIATOR_AMI_UAV_NEGOTIATOR_FACTORYHANDLER__VAR_OUT_CH_

class AMI_UAV_Negotiator_FactoryHandler;
using AMI_UAV_Negotiator_FactoryHandler_ptr = AMI_UAV_Negotiator_FactoryHandler*;
using AMI_UAV_Negotiator_FactoryHandler_var = TAO_Objref_Var_T<AMI_UAV_Negotiator_FactoryHandler>;
using AMI_UAV_Negotiator_FactoryHandler_out = TAO_Objref_Out_T<AMI_UAV_Negotiator_FactoryHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_UAV_Negotiator_FactoryHandler
  : public virtual ::Negotiator::AMI_UAV_NegotiatorHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_UAV_Negotiator_FactoryHandler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_UAV_Negotiator_FactoryHandler_ptr;
  using _var_type = AMI_UAV_Negotiator_FactoryHandler_var;
  using _out_type = AMI_UAV_Negotiator_FactoryHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_UAV_Negotiator_FactoryHandler_ptr _duplicate (AMI_UAV_Negotiator_FactoryHandler_ptr obj);

  static void _tao_release (AMI_UAV_Negotiator_FactoryHandler_ptr obj);

  static AMI_UAV_Negotiator_FactoryHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_UAV_Negotiator_FactoryHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_UAV_Negotiator_FactoryHandler_ptr _nil ();

  virtual void make_negotiator (
    ::Negotiator::UAV_Negotiator_ptr ami_return_val);

  static void
  make_negotiator_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void make_negotiator_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_UAV_Negotiator_FactoryHandler ();

  // Concrete non-local interface only.
  AMI_UAV_Negotiator_FactoryHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_UAV_Negotiator_FactoryHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_UAV_Negotiator_FactoryHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_UAV_Negotiator_FactoryHandler (const AMI_UAV_Negotiator_FactoryHandler &) = delete;
  AMI_UAV_Negotiator_FactoryHandler (AMI_UAV_Negotiator_FactoryHandler &&) = delete;
  AMI_UAV_Negotiator_FactoryHandler &operator= (const AMI_UAV_Negotiator_FactoryHandler &) = delete;
  AMI_UAV_Negotiator_FactoryHandler &operator= (AMI_UAV_Negotiator_FactoryHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMI_UAV_Negotiator_FactoryHandler;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module Negotiator
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace bug_2125
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace Bar
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/enum_ch.cpp:39

    enum Stuff
    {
      ONE,
      TWO
    };

    typedef Stuff &Stuff_out;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_Stuff;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module bug_2125::Bar


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module bug_2125
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace Wow
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace bug_2125
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

    

#if !defined (_WOW_BUG_2125_MYINTERFACE__VAR_OUT_CH_)
#define _WOW_BUG_2125_MYINTERFACE__VAR_OUT_CH_

    class AMI_MyInterfaceHandler;
    typedef AMI_MyInterfaceHandler *AMI_MyInterfaceHandler_ptr;

    class MyInterface;
    using MyInterface_ptr = MyInterface*;
    using MyInterface_var = TAO_Objref_Var_T<MyInterface>;
    using MyInterface_out = TAO_Objref_Out_T<MyInterface>;

#endif /* end #if !defined */

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

    

    class TAO_IDL_TEST_STUB_Export MyInterface
      : public virtual ::CORBA::Object
    {
    public:
      friend class TAO::Narrow_Utils<MyInterface>;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = MyInterface_ptr;
      using _var_type = MyInterface_var;
      using _out_type = MyInterface_out;

      static void _tao_any_destructor (void *);

      // The static operations.
      static MyInterface_ptr _duplicate (MyInterface_ptr obj);

      static void _tao_release (MyInterface_ptr obj);

      static MyInterface_ptr _narrow (::CORBA::Object_ptr obj);
      static MyInterface_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static MyInterface_ptr _nil ();

      virtual void op2 (
        ::bug_2125::Bar::Stuff fbs);

      virtual void sendc_op2 (
        ::Wow::bug_2125::AMI_MyInterfaceHandler_ptr ami_handler,
        ::bug_2125::Bar::Stuff fbs);

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

      

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id () const;
      static const char* _desc_repository_id ();
      static const char* _desc_interface_name ();
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Concrete interface only.
      MyInterface ();

      // Concrete non-local interface only.
      MyInterface (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
      
      // Non-local interface only.
      MyInterface (
          TAO_Stub *objref,
          ::CORBA::Boolean _tao_collocated = false,
          TAO_Abstract_ServantBase *servant = nullptr,
          TAO_ORB_Core *orb_core = nullptr);

      virtual ~MyInterface () = default;
    
    private:
      // Private and unimplemented for concrete interfaces.
      MyInterface (const MyInterface &) = delete;
      MyInterface (MyInterface &&) = delete;
      MyInterface &operator= (const MyInterface &) = delete;
      MyInterface &operator= (MyInterface &&) = delete;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_MyInterface;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

    

#if !defined (_WOW_BUG_2125_AMH_MYINTERFACEEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _WOW_BUG_2125_AMH_MYINTERFACEEXCEPTIONHOLDER__VAR_OUT_CH_

    class AMH_MyInterfaceExceptionHolder;
    using AMH_MyInterfaceExceptionHolder_var = TAO_Value_Var_T<AMH_MyInterfaceExceptionHolder>;
    using AMH_MyInterfaceExceptionHolder_out = TAO_Value_Out_T<AMH_MyInterfaceExceptionHolder>;

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

    

    class TAO_IDL_TEST_STUB_Export AMH_MyInterfaceExceptionHolder
      : public virtual ::CORBA::DefaultValueRefCountBase
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = AMH_MyInterfaceExceptionHolder*;
      using _var_type = AMH_MyInterfaceExceptionHolder_var;
      using _out_type = AMH_MyInterfaceExceptionHolder_out;

      static void _tao_any_destructor (void *);

      AMH_MyInterfaceExceptionHolder (::CORBA::Exception *ex)
        : exception (ex)
      {}

      virtual ~AMH_MyInterfaceExceptionHolder ();
      virtual ::CORBA::ValueBase *_copy_value ();

      static AMH_MyInterfaceExceptionHolder* _downcast (::CORBA::ValueBase *v);
      
      /// TAO extensions or internals
      static ::CORBA::Boolean _tao_unmarshal (
          TAO_InputCDR &strm,
          AMH_MyInterfaceExceptionHolder *&new_object);
      
      virtual const char* _tao_obv_repository_id () const;

      virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

      static const char* _tao_obv_static_repository_id ();

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
    
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

      
    public:
      virtual void raise_op2 ();
  
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

    
  public:
    virtual void raise_sendc_op2 ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

  

protected:
  AMH_MyInterfaceExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_MyInterfaceExceptionHolder (const AMH_MyInterfaceExceptionHolder &);
  void operator= (const AMH_MyInterfaceExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Wow_bug_2125_AMH_MyInterfaceExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Wow_bug_2125_AMH_MyInterfaceExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_MyInterfaceExceptionHolder;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_WOW_BUG_2125_AMH_MYINTERFACERESPONSEHANDLER__VAR_OUT_CH_)
#define _WOW_BUG_2125_AMH_MYINTERFACERESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_MyInterfaceResponseHandlerHandler;
typedef AMI_AMH_MyInterfaceResponseHandlerHandler *AMI_AMH_MyInterfaceResponseHandlerHandler_ptr;

class AMH_MyInterfaceResponseHandler;
using AMH_MyInterfaceResponseHandler_ptr = AMH_MyInterfaceResponseHandler*;
using AMH_MyInterfaceResponseHandler_var = TAO_Objref_Var_T<AMH_MyInterfaceResponseHandler>;
using AMH_MyInterfaceResponseHandler_out = TAO_Objref_Out_T<AMH_MyInterfaceResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_MyInterfaceResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_MyInterfaceResponseHandler_ptr;
  using _var_type = AMH_MyInterfaceResponseHandler_var;
  using _out_type = AMH_MyInterfaceResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_MyInterfaceResponseHandler_ptr _duplicate (AMH_MyInterfaceResponseHandler_ptr obj);

  static void _tao_release (AMH_MyInterfaceResponseHandler_ptr obj);

  static AMH_MyInterfaceResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_MyInterfaceResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_MyInterfaceResponseHandler_ptr _nil ();

  virtual void op2 () = 0;

  virtual void op2_excep (
    ::Wow::bug_2125::AMH_MyInterfaceExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_MyInterfaceResponseHandler ();

  

  virtual ~AMH_MyInterfaceResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_MyInterfaceResponseHandler (const AMH_MyInterfaceResponseHandler &) = delete;
  AMH_MyInterfaceResponseHandler (AMH_MyInterfaceResponseHandler &&) = delete;
  AMH_MyInterfaceResponseHandler &operator= (const AMH_MyInterfaceResponseHandler &) = delete;
  AMH_MyInterfaceResponseHandler &operator= (AMH_MyInterfaceResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_MyInterfaceResponseHandler;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_WOW_BUG_2125_AMI_MYINTERFACEHANDLER__VAR_OUT_CH_)
#define _WOW_BUG_2125_AMI_MYINTERFACEHANDLER__VAR_OUT_CH_

class AMI_MyInterfaceHandler;
using AMI_MyInterfaceHandler_ptr = AMI_MyInterfaceHandler*;
using AMI_MyInterfaceHandler_var = TAO_Objref_Var_T<AMI_MyInterfaceHandler>;
using AMI_MyInterfaceHandler_out = TAO_Objref_Out_T<AMI_MyInterfaceHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_MyInterfaceHandler
  : public virtual ::Messaging::ReplyHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_MyInterfaceHandler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_MyInterfaceHandler_ptr;
  using _var_type = AMI_MyInterfaceHandler_var;
  using _out_type = AMI_MyInterfaceHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_MyInterfaceHandler_ptr _duplicate (AMI_MyInterfaceHandler_ptr obj);

  static void _tao_release (AMI_MyInterfaceHandler_ptr obj);

  static AMI_MyInterfaceHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_MyInterfaceHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_MyInterfaceHandler_ptr _nil ();

  virtual void op2 ();

  static void
  op2_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op2_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_MyInterfaceHandler ();

  // Concrete non-local interface only.
  AMI_MyInterfaceHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_MyInterfaceHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_MyInterfaceHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_MyInterfaceHandler (const AMI_MyInterfaceHandler &) = delete;
  AMI_MyInterfaceHandler (AMI_MyInterfaceHandler &&) = delete;
  AMI_MyInterfaceHandler &operator= (const AMI_MyInterfaceHandler &) = delete;
  AMI_MyInterfaceHandler &operator= (AMI_MyInterfaceHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMI_MyInterfaceHandler;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module Wow::bug_2125


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module Wow
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace Company
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace CORBA
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:366

    typedef ::CORBA::ULong LongU;
    typedef ::CORBA::ULong_out LongU_out;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_LongU;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

    namespace Inner
    {
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

      

      struct Foo;
      using Foo_var = ::TAO_Fixed_Var_T<Foo>;
      using Foo_out = Foo&;

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

      

      struct TAO_IDL_TEST_STUB_Export Foo
      {
        // TAO_IDL - Generated from
        // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

        
        using _var_type = Foo_var;
        using _out_type = Foo_out;

        static void _tao_any_destructor (void *);
        
        ::CORBA::Boolean x;
      };
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

      extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_Foo;
    
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

    
    } // module Company::CORBA::Inner
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module Company::CORBA


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module Company
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Value_Traits<Messaging::ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::skip::hump::skip>
    : public
        Fixed_Size_Arg_Traits_T<
            ::skip::hump::skip,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:1041

  

  template<>
  class Arg_Traits< ::u_skip::u_hump::u_skip>
    : public
        Fixed_Size_Arg_Traits_T<
            ::u_skip::u_hump::u_skip,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_I_SKIP_I_HUMP_I_SKIP__ARG_TRAITS_)
#define _I_SKIP_I_HUMP_I_SKIP__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::i_skip::i_hump::i_skip>
    : public Object_Arg_Traits_T<
        ::i_skip::i_hump::i_skip_ptr,
        ::i_skip::i_hump::i_skip_var,
        ::i_skip::i_hump::i_skip_out,
        TAO::Objref_Traits<i_skip::i_hump::i_skip>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_I_SKIP_I_HUMP_AMH_I_SKIPEXCEPTIONHOLDER__ARG_TRAITS_)
#define _I_SKIP_I_HUMP_AMH_I_SKIPEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::i_skip::i_hump::AMH_i_skipExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::i_skip::i_hump::AMH_i_skipExceptionHolder *,
            ::i_skip::i_hump::AMH_i_skipExceptionHolder_var,
            ::i_skip::i_hump::AMH_i_skipExceptionHolder_out,
            TAO::Value_Traits<i_skip::i_hump::AMH_i_skipExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_I_SKIP_I_HUMP_AMI_I_SKIPHANDLER__ARG_TRAITS_)
#define _I_SKIP_I_HUMP_AMI_I_SKIPHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::i_skip::i_hump::AMI_i_skipHandler>
    : public Object_Arg_Traits_T<
        ::i_skip::i_hump::AMI_i_skipHandler_ptr,
        ::i_skip::i_hump::AMI_i_skipHandler_var,
        ::i_skip::i_hump::AMI_i_skipHandler_out,
        TAO::Objref_Traits<i_skip::i_hump::AMI_i_skipHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::pre_u_skip::pre_u_hump::pre_u_skip>
    : public
        Var_Size_Arg_Traits_T<
            ::pre_u_skip::pre_u_hump::pre_u_skip,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::pre_b_skip::pre_b_hump::pre_b_skip>
    : public
        Var_Size_Arg_Traits_T<
            ::pre_b_skip::pre_b_hump::pre_b_skip,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::str_u_skip::str_u_hump::str_u_skip>
    : public
        Var_Size_Arg_Traits_T<
            ::str_u_skip::str_u_hump::str_u_skip,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::str_b_skip::str_b_hump::str_b_skip>
    : public
        Var_Size_Arg_Traits_T<
            ::str_b_skip::str_b_hump::str_b_skip,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::wstr_u_skip::wstr_u_hump::wstr_u_skip>
    : public
        Var_Size_Arg_Traits_T<
            ::wstr_u_skip::wstr_u_hump::wstr_u_skip,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::wstr_b_skip::wstr_b_hump::wstr_b_skip>
    : public
        Var_Size_Arg_Traits_T<
            ::wstr_b_skip::wstr_b_hump::wstr_b_skip,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_BLOO__ARG_TRAITS_)
#define _BLOO__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::bloo>
    : public Object_Arg_Traits_T<
        ::bloo_ptr,
        ::bloo_var,
        ::bloo_out,
        TAO::Objref_Traits<bloo>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_BLOOEXCEPTIONHOLDER__ARG_TRAITS_)
#define _AMH_BLOOEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::AMH_blooExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::AMH_blooExceptionHolder *,
            ::AMH_blooExceptionHolder_var,
            ::AMH_blooExceptionHolder_out,
            TAO::Value_Traits<AMH_blooExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_BLOOHANDLER__ARG_TRAITS_)
#define _AMI_BLOOHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::AMI_blooHandler>
    : public Object_Arg_Traits_T<
        ::AMI_blooHandler_ptr,
        ::AMI_blooHandler_var,
        ::AMI_blooHandler_out,
        TAO::Objref_Traits<AMI_blooHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::obj_u_skip::obj_u_hump::obj_u_skip>
    : public
        Var_Size_Arg_Traits_T<
            ::obj_u_skip::obj_u_hump::obj_u_skip,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::obj_b_skip::obj_b_hump::obj_b_skip>
    : public
        Var_Size_Arg_Traits_T<
            ::obj_b_skip::obj_b_hump::obj_b_skip,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_BUG_1985_A_B_SOMETHING__ARG_TRAITS_)
#define _BUG_1985_A_B_SOMETHING__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::bug_1985_a::b::something>
    : public Object_Arg_Traits_T<
        ::bug_1985_a::b::something_ptr,
        ::bug_1985_a::b::something_var,
        ::bug_1985_a::b::something_out,
        TAO::Objref_Traits<bug_1985_a::b::something>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_BUG_1985_A_B_AMH_SOMETHINGEXCEPTIONHOLDER__ARG_TRAITS_)
#define _BUG_1985_A_B_AMH_SOMETHINGEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::bug_1985_a::b::AMH_somethingExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::bug_1985_a::b::AMH_somethingExceptionHolder *,
            ::bug_1985_a::b::AMH_somethingExceptionHolder_var,
            ::bug_1985_a::b::AMH_somethingExceptionHolder_out,
            TAO::Value_Traits<bug_1985_a::b::AMH_somethingExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_BUG_1985_A_B_AMI_SOMETHINGHANDLER__ARG_TRAITS_)
#define _BUG_1985_A_B_AMI_SOMETHINGHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::bug_1985_a::b::AMI_somethingHandler>
    : public Object_Arg_Traits_T<
        ::bug_1985_a::b::AMI_somethingHandler_ptr,
        ::bug_1985_a::b::AMI_somethingHandler_var,
        ::bug_1985_a::b::AMI_somethingHandler_out,
        TAO::Objref_Traits<bug_1985_a::b::AMI_somethingHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_BUG_1985_C_D_SOMETHING__ARG_TRAITS_)
#define _BUG_1985_C_D_SOMETHING__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::bug_1985_c::d::something>
    : public Object_Arg_Traits_T<
        ::bug_1985_c::d::something_ptr,
        ::bug_1985_c::d::something_var,
        ::bug_1985_c::d::something_out,
        TAO::Objref_Traits<bug_1985_c::d::something>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_BUG_1985_C_D_AMH_SOMETHINGEXCEPTIONHOLDER__ARG_TRAITS_)
#define _BUG_1985_C_D_AMH_SOMETHINGEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::bug_1985_c::d::AMH_somethingExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::bug_1985_c::d::AMH_somethingExceptionHolder *,
            ::bug_1985_c::d::AMH_somethingExceptionHolder_var,
            ::bug_1985_c::d::AMH_somethingExceptionHolder_out,
            TAO::Value_Traits<bug_1985_c::d::AMH_somethingExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_BUG_1985_C_D_AMI_SOMETHINGHANDLER__ARG_TRAITS_)
#define _BUG_1985_C_D_AMI_SOMETHINGHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::bug_1985_c::d::AMI_somethingHandler>
    : public Object_Arg_Traits_T<
        ::bug_1985_c::d::AMI_somethingHandler_ptr,
        ::bug_1985_c::d::AMI_somethingHandler_var,
        ::bug_1985_c::d::AMI_somethingHandler_out,
        TAO::Objref_Traits<bug_1985_c::d::AMI_somethingHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_NEGOTIATOR_UAV_NEGOTIATOR__ARG_TRAITS_)
#define _NEGOTIATOR_UAV_NEGOTIATOR__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Negotiator::UAV_Negotiator>
    : public Object_Arg_Traits_T<
        ::Negotiator::UAV_Negotiator_ptr,
        ::Negotiator::UAV_Negotiator_var,
        ::Negotiator::UAV_Negotiator_out,
        TAO::Objref_Traits<Negotiator::UAV_Negotiator>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_NEGOTIATOR_AMH_UAV_NEGOTIATOREXCEPTIONHOLDER__ARG_TRAITS_)
#define _NEGOTIATOR_AMH_UAV_NEGOTIATOREXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Negotiator::AMH_UAV_NegotiatorExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Negotiator::AMH_UAV_NegotiatorExceptionHolder *,
            ::Negotiator::AMH_UAV_NegotiatorExceptionHolder_var,
            ::Negotiator::AMH_UAV_NegotiatorExceptionHolder_out,
            TAO::Value_Traits<Negotiator::AMH_UAV_NegotiatorExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_NEGOTIATOR_AMI_UAV_NEGOTIATORHANDLER__ARG_TRAITS_)
#define _NEGOTIATOR_AMI_UAV_NEGOTIATORHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Negotiator::AMI_UAV_NegotiatorHandler>
    : public Object_Arg_Traits_T<
        ::Negotiator::AMI_UAV_NegotiatorHandler_ptr,
        ::Negotiator::AMI_UAV_NegotiatorHandler_var,
        ::Negotiator::AMI_UAV_NegotiatorHandler_out,
        TAO::Objref_Traits<Negotiator::AMI_UAV_NegotiatorHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_NEGOTIATOR_UAV_NEGOTIATOR_FACTORY__ARG_TRAITS_)
#define _NEGOTIATOR_UAV_NEGOTIATOR_FACTORY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Negotiator::UAV_Negotiator_Factory>
    : public Object_Arg_Traits_T<
        ::Negotiator::UAV_Negotiator_Factory_ptr,
        ::Negotiator::UAV_Negotiator_Factory_var,
        ::Negotiator::UAV_Negotiator_Factory_out,
        TAO::Objref_Traits<Negotiator::UAV_Negotiator_Factory>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_NEGOTIATOR_AMH_UAV_NEGOTIATOR_FACTORYEXCEPTIONHOLDER__ARG_TRAITS_)
#define _NEGOTIATOR_AMH_UAV_NEGOTIATOR_FACTORYEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder *,
            ::Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder_var,
            ::Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder_out,
            TAO::Value_Traits<Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_NEGOTIATOR_AMI_UAV_NEGOTIATOR_FACTORYHANDLER__ARG_TRAITS_)
#define _NEGOTIATOR_AMI_UAV_NEGOTIATOR_FACTORYHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Negotiator::AMI_UAV_Negotiator_FactoryHandler>
    : public Object_Arg_Traits_T<
        ::Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr,
        ::Negotiator::AMI_UAV_Negotiator_FactoryHandler_var,
        ::Negotiator::AMI_UAV_Negotiator_FactoryHandler_out,
        TAO::Objref_Traits<Negotiator::AMI_UAV_Negotiator_FactoryHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:889

  

  template<>
  class Arg_Traits< ::bug_2125::Bar::Stuff>
    : public
        Basic_Arg_Traits_T<
            ::bug_2125::Bar::Stuff,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_WOW_BUG_2125_MYINTERFACE__ARG_TRAITS_)
#define _WOW_BUG_2125_MYINTERFACE__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Wow::bug_2125::MyInterface>
    : public Object_Arg_Traits_T<
        ::Wow::bug_2125::MyInterface_ptr,
        ::Wow::bug_2125::MyInterface_var,
        ::Wow::bug_2125::MyInterface_out,
        TAO::Objref_Traits<Wow::bug_2125::MyInterface>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_WOW_BUG_2125_AMH_MYINTERFACEEXCEPTIONHOLDER__ARG_TRAITS_)
#define _WOW_BUG_2125_AMH_MYINTERFACEEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Wow::bug_2125::AMH_MyInterfaceExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Wow::bug_2125::AMH_MyInterfaceExceptionHolder *,
            ::Wow::bug_2125::AMH_MyInterfaceExceptionHolder_var,
            ::Wow::bug_2125::AMH_MyInterfaceExceptionHolder_out,
            TAO::Value_Traits<Wow::bug_2125::AMH_MyInterfaceExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_WOW_BUG_2125_AMI_MYINTERFACEHANDLER__ARG_TRAITS_)
#define _WOW_BUG_2125_AMI_MYINTERFACEHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Wow::bug_2125::AMI_MyInterfaceHandler>
    : public Object_Arg_Traits_T<
        ::Wow::bug_2125::AMI_MyInterfaceHandler_ptr,
        ::Wow::bug_2125::AMI_MyInterfaceHandler_var,
        ::Wow::bug_2125::AMI_MyInterfaceHandler_out,
        TAO::Objref_Traits<Wow::bug_2125::AMI_MyInterfaceHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::Company::CORBA::Inner::Foo>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Company::CORBA::Inner::Foo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_i_skip
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

  namespace i_hump
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

    

    // OBV_ class
    class TAO_IDL_TEST_STUB_Export AMH_i_skipExceptionHolder
      : public virtual i_skip::i_hump::AMH_i_skipExceptionHolder,
        public virtual ::CORBA::DefaultValueRefCountBase
    {
  
  public:
    AMH_i_skipExceptionHolder () = default;
    virtual ~AMH_i_skipExceptionHolder ();
  
  public:
    virtual ::CORBA::ValueBase *_copy_value ();
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__i_skip_i_hump_AMH_i_skipExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

    virtual ::CORBA::Boolean
    _tao_unmarshal__i_skip_i_hump_AMH_i_skipExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

    ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
    ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
    virtual void truncation_hook ();
  
  private:
    CORBA::Boolean require_truncation_ {false};
  };
}
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export OBV_AMH_blooExceptionHolder
  : public virtual AMH_blooExceptionHolder,
    public virtual ::CORBA::DefaultValueRefCountBase
{

public:
  OBV_AMH_blooExceptionHolder () = default;
  virtual ~OBV_AMH_blooExceptionHolder ();

public:
  virtual ::CORBA::ValueBase *_copy_value ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__AMH_blooExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__AMH_blooExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_bug_1985_a
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

  namespace b
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

    

    // OBV_ class
    class TAO_IDL_TEST_STUB_Export AMH_somethingExceptionHolder
      : public virtual bug_1985_a::b::AMH_somethingExceptionHolder,
        public virtual ::CORBA::DefaultValueRefCountBase
    {
  
  public:
    AMH_somethingExceptionHolder () = default;
    virtual ~AMH_somethingExceptionHolder ();
  
  public:
    virtual ::CORBA::ValueBase *_copy_value ();
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__bug_1985_a_b_AMH_somethingExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

    virtual ::CORBA::Boolean
    _tao_unmarshal__bug_1985_a_b_AMH_somethingExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

    ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
    ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
    virtual void truncation_hook ();
  
  private:
    CORBA::Boolean require_truncation_ {false};
  };
}
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_bug_1985_c
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

  namespace d
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

    

    // OBV_ class
    class TAO_IDL_TEST_STUB_Export AMH_somethingExceptionHolder
      : public virtual bug_1985_c::d::AMH_somethingExceptionHolder,
        public virtual ::CORBA::DefaultValueRefCountBase
    {
  
  public:
    AMH_somethingExceptionHolder () = default;
    virtual ~AMH_somethingExceptionHolder ();
  
  public:
    virtual ::CORBA::ValueBase *_copy_value ();
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__bug_1985_c_d_AMH_somethingExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

    virtual ::CORBA::Boolean
    _tao_unmarshal__bug_1985_c_d_AMH_somethingExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

    ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
    ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
    virtual void truncation_hook ();
  
  private:
    CORBA::Boolean require_truncation_ {false};
  };
}
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_Negotiator
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

  

  // OBV_ class
  class TAO_IDL_TEST_STUB_Export AMH_UAV_NegotiatorExceptionHolder
    : public virtual Negotiator::AMH_UAV_NegotiatorExceptionHolder,
      public virtual ::CORBA::DefaultValueRefCountBase
  {

public:
  AMH_UAV_NegotiatorExceptionHolder () = default;
  virtual ~AMH_UAV_NegotiatorExceptionHolder ();

public:
  virtual ::CORBA::ValueBase *_copy_value ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Negotiator_AMH_UAV_NegotiatorExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Negotiator_AMH_UAV_NegotiatorExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export AMH_UAV_Negotiator_FactoryExceptionHolder
  : public virtual Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder
{

protected:
  AMH_UAV_Negotiator_FactoryExceptionHolder () = default;
  virtual ~AMH_UAV_Negotiator_FactoryExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Negotiator_AMH_UAV_Negotiator_FactoryExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Negotiator_AMH_UAV_Negotiator_FactoryExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_Wow
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

  namespace bug_2125
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

    

    // OBV_ class
    class TAO_IDL_TEST_STUB_Export AMH_MyInterfaceExceptionHolder
      : public virtual Wow::bug_2125::AMH_MyInterfaceExceptionHolder
    {
  
  protected:
    AMH_MyInterfaceExceptionHolder () = default;
    virtual ~AMH_MyInterfaceExceptionHolder ();
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__Wow_bug_2125_AMH_MyInterfaceExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

    virtual ::CORBA::Boolean
    _tao_unmarshal__Wow_bug_2125_AMH_MyInterfaceExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

    ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
    ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
    virtual void truncation_hook ();
  
  private:
    CORBA::Boolean require_truncation_ {false};
  };
}
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_I_SKIP_I_HUMP_I_SKIP__TRAITS_)
#define _I_SKIP_I_HUMP_I_SKIP__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::i_skip::i_hump::i_skip>
  {
    static ::i_skip::i_hump::i_skip_ptr duplicate (::i_skip::i_hump::i_skip_ptr p);
    static void release (::i_skip::i_hump::i_skip_ptr p);
    static ::i_skip::i_hump::i_skip_ptr nil ();
    static ::CORBA::Boolean marshal (const ::i_skip::i_hump::i_skip_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_I_SKIP_I_HUMP_AMH_I_SKIPEXCEPTIONHOLDER__TRAITS_)
#define _I_SKIP_I_HUMP_AMH_I_SKIPEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<i_skip::i_hump::AMH_i_skipExceptionHolder>
  {
    static void add_ref (i_skip::i_hump::AMH_i_skipExceptionHolder *);
    static void remove_ref (i_skip::i_hump::AMH_i_skipExceptionHolder *);
    static void release (i_skip::i_hump::AMH_i_skipExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_I_SKIP_I_HUMP_AMH_I_SKIPRESPONSEHANDLER__TRAITS_)
#define _I_SKIP_I_HUMP_AMH_I_SKIPRESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::i_skip::i_hump::AMH_i_skipResponseHandler>
  {
    static ::i_skip::i_hump::AMH_i_skipResponseHandler_ptr duplicate (::i_skip::i_hump::AMH_i_skipResponseHandler_ptr p);
    static void release (::i_skip::i_hump::AMH_i_skipResponseHandler_ptr p);
    static ::i_skip::i_hump::AMH_i_skipResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::i_skip::i_hump::AMH_i_skipResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_I_SKIP_I_HUMP_AMI_I_SKIPHANDLER__TRAITS_)
#define _I_SKIP_I_HUMP_AMI_I_SKIPHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::i_skip::i_hump::AMI_i_skipHandler>
  {
    static ::i_skip::i_hump::AMI_i_skipHandler_ptr duplicate (::i_skip::i_hump::AMI_i_skipHandler_ptr p);
    static void release (::i_skip::i_hump::AMI_i_skipHandler_ptr p);
    static ::i_skip::i_hump::AMI_i_skipHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::i_skip::i_hump::AMI_i_skipHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_BLOO__TRAITS_)
#define _BLOO__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::bloo>
  {
    static ::bloo_ptr duplicate (::bloo_ptr p);
    static void release (::bloo_ptr p);
    static ::bloo_ptr nil ();
    static ::CORBA::Boolean marshal (const ::bloo_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_AMH_BLOOEXCEPTIONHOLDER__TRAITS_)
#define _AMH_BLOOEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<AMH_blooExceptionHolder>
  {
    static void add_ref (AMH_blooExceptionHolder *);
    static void remove_ref (AMH_blooExceptionHolder *);
    static void release (AMH_blooExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_AMH_BLOORESPONSEHANDLER__TRAITS_)
#define _AMH_BLOORESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::AMH_blooResponseHandler>
  {
    static ::AMH_blooResponseHandler_ptr duplicate (::AMH_blooResponseHandler_ptr p);
    static void release (::AMH_blooResponseHandler_ptr p);
    static ::AMH_blooResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::AMH_blooResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_AMI_BLOOHANDLER__TRAITS_)
#define _AMI_BLOOHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::AMI_blooHandler>
  {
    static ::AMI_blooHandler_ptr duplicate (::AMI_blooHandler_ptr p);
    static void release (::AMI_blooHandler_ptr p);
    static ::AMI_blooHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::AMI_blooHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_BUG_1985_A_B_SOMETHING__TRAITS_)
#define _BUG_1985_A_B_SOMETHING__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::bug_1985_a::b::something>
  {
    static ::bug_1985_a::b::something_ptr duplicate (::bug_1985_a::b::something_ptr p);
    static void release (::bug_1985_a::b::something_ptr p);
    static ::bug_1985_a::b::something_ptr nil ();
    static ::CORBA::Boolean marshal (const ::bug_1985_a::b::something_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_BUG_1985_A_B_AMH_SOMETHINGEXCEPTIONHOLDER__TRAITS_)
#define _BUG_1985_A_B_AMH_SOMETHINGEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<bug_1985_a::b::AMH_somethingExceptionHolder>
  {
    static void add_ref (bug_1985_a::b::AMH_somethingExceptionHolder *);
    static void remove_ref (bug_1985_a::b::AMH_somethingExceptionHolder *);
    static void release (bug_1985_a::b::AMH_somethingExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_BUG_1985_A_B_AMH_SOMETHINGRESPONSEHANDLER__TRAITS_)
#define _BUG_1985_A_B_AMH_SOMETHINGRESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::bug_1985_a::b::AMH_somethingResponseHandler>
  {
    static ::bug_1985_a::b::AMH_somethingResponseHandler_ptr duplicate (::bug_1985_a::b::AMH_somethingResponseHandler_ptr p);
    static void release (::bug_1985_a::b::AMH_somethingResponseHandler_ptr p);
    static ::bug_1985_a::b::AMH_somethingResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::bug_1985_a::b::AMH_somethingResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_BUG_1985_A_B_AMI_SOMETHINGHANDLER__TRAITS_)
#define _BUG_1985_A_B_AMI_SOMETHINGHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::bug_1985_a::b::AMI_somethingHandler>
  {
    static ::bug_1985_a::b::AMI_somethingHandler_ptr duplicate (::bug_1985_a::b::AMI_somethingHandler_ptr p);
    static void release (::bug_1985_a::b::AMI_somethingHandler_ptr p);
    static ::bug_1985_a::b::AMI_somethingHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::bug_1985_a::b::AMI_somethingHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_BUG_1985_C_D_SOMETHING__TRAITS_)
#define _BUG_1985_C_D_SOMETHING__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::bug_1985_c::d::something>
  {
    static ::bug_1985_c::d::something_ptr duplicate (::bug_1985_c::d::something_ptr p);
    static void release (::bug_1985_c::d::something_ptr p);
    static ::bug_1985_c::d::something_ptr nil ();
    static ::CORBA::Boolean marshal (const ::bug_1985_c::d::something_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_BUG_1985_C_D_AMH_SOMETHINGEXCEPTIONHOLDER__TRAITS_)
#define _BUG_1985_C_D_AMH_SOMETHINGEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<bug_1985_c::d::AMH_somethingExceptionHolder>
  {
    static void add_ref (bug_1985_c::d::AMH_somethingExceptionHolder *);
    static void remove_ref (bug_1985_c::d::AMH_somethingExceptionHolder *);
    static void release (bug_1985_c::d::AMH_somethingExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_BUG_1985_C_D_AMH_SOMETHINGRESPONSEHANDLER__TRAITS_)
#define _BUG_1985_C_D_AMH_SOMETHINGRESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::bug_1985_c::d::AMH_somethingResponseHandler>
  {
    static ::bug_1985_c::d::AMH_somethingResponseHandler_ptr duplicate (::bug_1985_c::d::AMH_somethingResponseHandler_ptr p);
    static void release (::bug_1985_c::d::AMH_somethingResponseHandler_ptr p);
    static ::bug_1985_c::d::AMH_somethingResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::bug_1985_c::d::AMH_somethingResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_BUG_1985_C_D_AMI_SOMETHINGHANDLER__TRAITS_)
#define _BUG_1985_C_D_AMI_SOMETHINGHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::bug_1985_c::d::AMI_somethingHandler>
  {
    static ::bug_1985_c::d::AMI_somethingHandler_ptr duplicate (::bug_1985_c::d::AMI_somethingHandler_ptr p);
    static void release (::bug_1985_c::d::AMI_somethingHandler_ptr p);
    static ::bug_1985_c::d::AMI_somethingHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::bug_1985_c::d::AMI_somethingHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NEGOTIATOR_UAV_NEGOTIATOR__TRAITS_)
#define _NEGOTIATOR_UAV_NEGOTIATOR__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::Negotiator::UAV_Negotiator>
  {
    static ::Negotiator::UAV_Negotiator_ptr duplicate (::Negotiator::UAV_Negotiator_ptr p);
    static void release (::Negotiator::UAV_Negotiator_ptr p);
    static ::Negotiator::UAV_Negotiator_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Negotiator::UAV_Negotiator_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NEGOTIATOR_AMH_UAV_NEGOTIATOREXCEPTIONHOLDER__TRAITS_)
#define _NEGOTIATOR_AMH_UAV_NEGOTIATOREXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<Negotiator::AMH_UAV_NegotiatorExceptionHolder>
  {
    static void add_ref (Negotiator::AMH_UAV_NegotiatorExceptionHolder *);
    static void remove_ref (Negotiator::AMH_UAV_NegotiatorExceptionHolder *);
    static void release (Negotiator::AMH_UAV_NegotiatorExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_NEGOTIATOR_AMH_UAV_NEGOTIATORRESPONSEHANDLER__TRAITS_)
#define _NEGOTIATOR_AMH_UAV_NEGOTIATORRESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::Negotiator::AMH_UAV_NegotiatorResponseHandler>
  {
    static ::Negotiator::AMH_UAV_NegotiatorResponseHandler_ptr duplicate (::Negotiator::AMH_UAV_NegotiatorResponseHandler_ptr p);
    static void release (::Negotiator::AMH_UAV_NegotiatorResponseHandler_ptr p);
    static ::Negotiator::AMH_UAV_NegotiatorResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Negotiator::AMH_UAV_NegotiatorResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NEGOTIATOR_AMI_UAV_NEGOTIATORHANDLER__TRAITS_)
#define _NEGOTIATOR_AMI_UAV_NEGOTIATORHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::Negotiator::AMI_UAV_NegotiatorHandler>
  {
    static ::Negotiator::AMI_UAV_NegotiatorHandler_ptr duplicate (::Negotiator::AMI_UAV_NegotiatorHandler_ptr p);
    static void release (::Negotiator::AMI_UAV_NegotiatorHandler_ptr p);
    static ::Negotiator::AMI_UAV_NegotiatorHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Negotiator::AMI_UAV_NegotiatorHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NEGOTIATOR_UAV_NEGOTIATOR_FACTORY__TRAITS_)
#define _NEGOTIATOR_UAV_NEGOTIATOR_FACTORY__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::Negotiator::UAV_Negotiator_Factory>
  {
    static ::Negotiator::UAV_Negotiator_Factory_ptr duplicate (::Negotiator::UAV_Negotiator_Factory_ptr p);
    static void release (::Negotiator::UAV_Negotiator_Factory_ptr p);
    static ::Negotiator::UAV_Negotiator_Factory_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Negotiator::UAV_Negotiator_Factory_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NEGOTIATOR_AMH_UAV_NEGOTIATOR_FACTORYEXCEPTIONHOLDER__TRAITS_)
#define _NEGOTIATOR_AMH_UAV_NEGOTIATOR_FACTORYEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder>
  {
    static void add_ref (Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder *);
    static void remove_ref (Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder *);
    static void release (Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_NEGOTIATOR_AMH_UAV_NEGOTIATOR_FACTORYRESPONSEHANDLER__TRAITS_)
#define _NEGOTIATOR_AMH_UAV_NEGOTIATOR_FACTORYRESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::Negotiator::AMH_UAV_Negotiator_FactoryResponseHandler>
  {
    static ::Negotiator::AMH_UAV_Negotiator_FactoryResponseHandler_ptr duplicate (::Negotiator::AMH_UAV_Negotiator_FactoryResponseHandler_ptr p);
    static void release (::Negotiator::AMH_UAV_Negotiator_FactoryResponseHandler_ptr p);
    static ::Negotiator::AMH_UAV_Negotiator_FactoryResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Negotiator::AMH_UAV_Negotiator_FactoryResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NEGOTIATOR_AMI_UAV_NEGOTIATOR_FACTORYHANDLER__TRAITS_)
#define _NEGOTIATOR_AMI_UAV_NEGOTIATOR_FACTORYHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::Negotiator::AMI_UAV_Negotiator_FactoryHandler>
  {
    static ::Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr duplicate (::Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr p);
    static void release (::Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr p);
    static ::Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_WOW_BUG_2125_MYINTERFACE__TRAITS_)
#define _WOW_BUG_2125_MYINTERFACE__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::Wow::bug_2125::MyInterface>
  {
    static ::Wow::bug_2125::MyInterface_ptr duplicate (::Wow::bug_2125::MyInterface_ptr p);
    static void release (::Wow::bug_2125::MyInterface_ptr p);
    static ::Wow::bug_2125::MyInterface_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Wow::bug_2125::MyInterface_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_WOW_BUG_2125_AMH_MYINTERFACEEXCEPTIONHOLDER__TRAITS_)
#define _WOW_BUG_2125_AMH_MYINTERFACEEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<Wow::bug_2125::AMH_MyInterfaceExceptionHolder>
  {
    static void add_ref (Wow::bug_2125::AMH_MyInterfaceExceptionHolder *);
    static void remove_ref (Wow::bug_2125::AMH_MyInterfaceExceptionHolder *);
    static void release (Wow::bug_2125::AMH_MyInterfaceExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_WOW_BUG_2125_AMH_MYINTERFACERESPONSEHANDLER__TRAITS_)
#define _WOW_BUG_2125_AMH_MYINTERFACERESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::Wow::bug_2125::AMH_MyInterfaceResponseHandler>
  {
    static ::Wow::bug_2125::AMH_MyInterfaceResponseHandler_ptr duplicate (::Wow::bug_2125::AMH_MyInterfaceResponseHandler_ptr p);
    static void release (::Wow::bug_2125::AMH_MyInterfaceResponseHandler_ptr p);
    static ::Wow::bug_2125::AMH_MyInterfaceResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Wow::bug_2125::AMH_MyInterfaceResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_WOW_BUG_2125_AMI_MYINTERFACEHANDLER__TRAITS_)
#define _WOW_BUG_2125_AMI_MYINTERFACEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::Wow::bug_2125::AMI_MyInterfaceHandler>
  {
    static ::Wow::bug_2125::AMI_MyInterfaceHandler_ptr duplicate (::Wow::bug_2125::AMI_MyInterfaceHandler_ptr p);
    static void release (::Wow::bug_2125::AMI_MyInterfaceHandler_ptr p);
    static ::Wow::bug_2125::AMI_MyInterfaceHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::Wow::bug_2125::AMI_MyInterfaceHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::skip::hump::skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::skip::hump::skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::skip::hump::skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const u_skip::u_hump::u_skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, u_skip::u_hump::u_skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const u_skip::u_hump::u_skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const e_skip::e_hump::e_skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, e_skip::e_hump::e_skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const e_skip::e_hump::e_skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, i_skip::i_hump::i_skip_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, i_skip::i_hump::i_skip_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, i_skip::i_hump::i_skip_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, i_skip::i_hump::AMH_i_skipExceptionHolder *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, i_skip::i_hump::AMH_i_skipExceptionHolder **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, i_skip::i_hump::AMH_i_skipExceptionHolder *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, i_skip::i_hump::AMH_i_skipResponseHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, i_skip::i_hump::AMH_i_skipResponseHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, i_skip::i_hump::AMH_i_skipResponseHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, i_skip::i_hump::AMI_i_skipHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, i_skip::i_hump::AMI_i_skipHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, i_skip::i_hump::AMI_i_skipHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::pre_u_skip::pre_u_hump::pre_u_skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::pre_u_skip::pre_u_hump::pre_u_skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::pre_u_skip::pre_u_hump::pre_u_skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::pre_b_skip::pre_b_hump::pre_b_skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::pre_b_skip::pre_b_hump::pre_b_skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::pre_b_skip::pre_b_hump::pre_b_skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::str_u_skip::str_u_hump::str_u_skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::str_u_skip::str_u_hump::str_u_skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::str_u_skip::str_u_hump::str_u_skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::str_b_skip::str_b_hump::str_b_skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::str_b_skip::str_b_hump::str_b_skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::str_b_skip::str_b_hump::str_b_skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::wstr_u_skip::wstr_u_hump::wstr_u_skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::wstr_u_skip::wstr_u_hump::wstr_u_skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::wstr_u_skip::wstr_u_hump::wstr_u_skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::wstr_b_skip::wstr_b_hump::wstr_b_skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::wstr_b_skip::wstr_b_hump::wstr_b_skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::wstr_b_skip::wstr_b_hump::wstr_b_skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bloo_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bloo_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, bloo_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMH_blooExceptionHolder *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMH_blooExceptionHolder **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_blooExceptionHolder *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMH_blooResponseHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMH_blooResponseHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_blooResponseHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMI_blooHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, AMI_blooHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMI_blooHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::obj_u_skip::obj_u_hump::obj_u_skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::obj_u_skip::obj_u_hump::obj_u_skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::obj_u_skip::obj_u_hump::obj_u_skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::obj_b_skip::obj_b_hump::obj_b_skip &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::obj_b_skip::obj_b_hump::obj_b_skip*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::obj_b_skip::obj_b_hump::obj_b_skip *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_a::b::something_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_a::b::something_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, bug_1985_a::b::something_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_a::b::AMH_somethingExceptionHolder *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_a::b::AMH_somethingExceptionHolder **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, bug_1985_a::b::AMH_somethingExceptionHolder *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_a::b::AMH_somethingResponseHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_a::b::AMH_somethingResponseHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, bug_1985_a::b::AMH_somethingResponseHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_a::b::AMI_somethingHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_a::b::AMI_somethingHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, bug_1985_a::b::AMI_somethingHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_c::d::something_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_c::d::something_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, bug_1985_c::d::something_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_c::d::AMH_somethingExceptionHolder *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_c::d::AMH_somethingExceptionHolder **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, bug_1985_c::d::AMH_somethingExceptionHolder *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_c::d::AMH_somethingResponseHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_c::d::AMH_somethingResponseHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, bug_1985_c::d::AMH_somethingResponseHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_c::d::AMI_somethingHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_1985_c::d::AMI_somethingHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, bug_1985_c::d::AMI_somethingHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::UAV_Negotiator_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::UAV_Negotiator_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Negotiator::UAV_Negotiator_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMH_UAV_NegotiatorExceptionHolder *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMH_UAV_NegotiatorExceptionHolder **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Negotiator::AMH_UAV_NegotiatorExceptionHolder *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMH_UAV_NegotiatorResponseHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMH_UAV_NegotiatorResponseHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Negotiator::AMH_UAV_NegotiatorResponseHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMI_UAV_NegotiatorHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMI_UAV_NegotiatorHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Negotiator::AMI_UAV_NegotiatorHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::UAV_Negotiator_Factory_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::UAV_Negotiator_Factory_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Negotiator::UAV_Negotiator_Factory_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMH_UAV_Negotiator_FactoryResponseHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMH_UAV_Negotiator_FactoryResponseHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Negotiator::AMH_UAV_Negotiator_FactoryResponseHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/any_op_ch.cpp:31


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, bug_2125::Bar::Stuff);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, bug_2125::Bar::Stuff &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Wow::bug_2125::MyInterface_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Wow::bug_2125::MyInterface_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Wow::bug_2125::MyInterface_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Wow::bug_2125::AMH_MyInterfaceExceptionHolder *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Wow::bug_2125::AMH_MyInterfaceExceptionHolder **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Wow::bug_2125::AMH_MyInterfaceExceptionHolder *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Wow::bug_2125::AMH_MyInterfaceResponseHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Wow::bug_2125::AMH_MyInterfaceResponseHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Wow::bug_2125::AMH_MyInterfaceResponseHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Wow::bug_2125::AMI_MyInterfaceHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, Wow::bug_2125::AMI_MyInterfaceHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Wow::bug_2125::AMI_MyInterfaceHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Company::CORBA::Inner::Foo &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Company::CORBA::Inner::Foo*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Company::CORBA::Inner::Foo *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const skip::hump::skip &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, skip::hump::skip &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const u_skip::u_hump::u_skip &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, u_skip::u_hump::u_skip &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const e_skip::e_hump::e_skip &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, e_skip::e_hump::e_skip &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const i_skip::i_hump::i_skip_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, i_skip::i_hump::i_skip_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (i_skip::i_hump::AMH_i_skipExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (i_skip::i_hump::AMH_i_skipExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const i_skip::i_hump::AMH_i_skipExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, i_skip::i_hump::AMH_i_skipExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const i_skip::i_hump::AMI_i_skipHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, i_skip::i_hump::AMI_i_skipHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_pre_u_skip_pre_u_hump_pre_u_skip_H_
#define _TAO_CDR_OP_pre_u_skip_pre_u_hump_pre_u_skip_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const pre_u_skip::pre_u_hump::pre_u_skip &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    pre_u_skip::pre_u_hump::pre_u_skip &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_pre_u_skip_pre_u_hump_pre_u_skip_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_pre_b_skip_pre_b_hump_pre_b_skip_H_
#define _TAO_CDR_OP_pre_b_skip_pre_b_hump_pre_b_skip_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const pre_b_skip::pre_b_hump::pre_b_skip &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    pre_b_skip::pre_b_hump::pre_b_skip &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_pre_b_skip_pre_b_hump_pre_b_skip_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_str_u_skip_str_u_hump_str_u_skip_H_
#define _TAO_CDR_OP_str_u_skip_str_u_hump_str_u_skip_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const str_u_skip::str_u_hump::str_u_skip &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    str_u_skip::str_u_hump::str_u_skip &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_str_u_skip_str_u_hump_str_u_skip_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_str_b_skip_str_b_hump_str_b_skip_H_
#define _TAO_CDR_OP_str_b_skip_str_b_hump_str_b_skip_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const str_b_skip::str_b_hump::str_b_skip &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    str_b_skip::str_b_hump::str_b_skip &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_str_b_skip_str_b_hump_str_b_skip_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_wstr_u_skip_wstr_u_hump_wstr_u_skip_H_
#define _TAO_CDR_OP_wstr_u_skip_wstr_u_hump_wstr_u_skip_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const wstr_u_skip::wstr_u_hump::wstr_u_skip &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    wstr_u_skip::wstr_u_hump::wstr_u_skip &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_wstr_u_skip_wstr_u_hump_wstr_u_skip_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_wstr_b_skip_wstr_b_hump_wstr_b_skip_H_
#define _TAO_CDR_OP_wstr_b_skip_wstr_b_hump_wstr_b_skip_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const wstr_b_skip::wstr_b_hump::wstr_b_skip &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    wstr_b_skip::wstr_b_hump::wstr_b_skip &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_wstr_b_skip_wstr_b_hump_wstr_b_skip_H_ */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const bloo_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, bloo_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (AMH_blooExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (AMH_blooExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const AMH_blooExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, AMH_blooExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const AMI_blooHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, AMI_blooHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_obj_u_skip_obj_u_hump_obj_u_skip_H_
#define _TAO_CDR_OP_obj_u_skip_obj_u_hump_obj_u_skip_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const obj_u_skip::obj_u_hump::obj_u_skip &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    obj_u_skip::obj_u_hump::obj_u_skip &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_obj_u_skip_obj_u_hump_obj_u_skip_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_obj_b_skip_obj_b_hump_obj_b_skip_H_
#define _TAO_CDR_OP_obj_b_skip_obj_b_hump_obj_b_skip_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const obj_b_skip::obj_b_hump::obj_b_skip &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    obj_b_skip::obj_b_hump::obj_b_skip &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_obj_b_skip_obj_b_hump_obj_b_skip_H_ */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const bug_1985_a::b::something_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, bug_1985_a::b::something_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (bug_1985_a::b::AMH_somethingExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (bug_1985_a::b::AMH_somethingExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const bug_1985_a::b::AMH_somethingExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, bug_1985_a::b::AMH_somethingExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const bug_1985_a::b::AMI_somethingHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, bug_1985_a::b::AMI_somethingHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const bug_1985_c::d::something_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, bug_1985_c::d::something_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (bug_1985_c::d::AMH_somethingExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (bug_1985_c::d::AMH_somethingExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const bug_1985_c::d::AMH_somethingExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, bug_1985_c::d::AMH_somethingExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const bug_1985_c::d::AMI_somethingHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, bug_1985_c::d::AMI_somethingHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Negotiator::UAV_Negotiator_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Negotiator::UAV_Negotiator_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (Negotiator::AMH_UAV_NegotiatorExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (Negotiator::AMH_UAV_NegotiatorExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Negotiator::AMH_UAV_NegotiatorExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Negotiator::AMH_UAV_NegotiatorExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Negotiator::AMI_UAV_NegotiatorHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Negotiator::AMI_UAV_NegotiatorHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Negotiator::UAV_Negotiator_Factory_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Negotiator::UAV_Negotiator_Factory_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Negotiator::AMH_UAV_Negotiator_FactoryExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Negotiator::AMI_UAV_Negotiator_FactoryHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/cdr_op_ch.cpp:33


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, bug_2125::Bar::Stuff _tao_enumerator);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, bug_2125::Bar::Stuff &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Wow::bug_2125::MyInterface_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Wow::bug_2125::MyInterface_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (Wow::bug_2125::AMH_MyInterfaceExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (Wow::bug_2125::AMH_MyInterfaceExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Wow::bug_2125::AMH_MyInterfaceExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Wow::bug_2125::AMH_MyInterfaceExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Wow::bug_2125::AMI_MyInterfaceHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Wow::bug_2125::AMI_MyInterfaceHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Company::CORBA::Inner::Foo &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Company::CORBA::Inner::Foo &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:1648

#if defined (__ACE_INLINE__)
#include "nested_scopeC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

