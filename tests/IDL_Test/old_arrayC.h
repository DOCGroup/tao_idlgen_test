// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:148

#ifndef _TAO_IDL_OLD_ARRAYC_83TSLI_H_
#define _TAO_IDL_OLD_ARRAYC_83TSLI_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "TAO_IDL_TEST_stub_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Messaging/Messaging.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include "tao/Array_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Fixed_Array_Argument_T.h"
#include "tao/Var_Array_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "simpleC.h"

#if TAO_MAJOR_VERSION != 4 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_root/root_ch.cpp:155


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace OldArray
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_ch.cpp:47

  

  typedef ::CORBA::Char str22[22][2];
  typedef ::CORBA::Char str22_slice[2];
  struct str22_tag {};
  

  typedef
    TAO_FixedArray_Var_T<
        str22,
        str22_slice,
        str22_tag
      >
    str22_var;

  typedef
    str22
    str22_out;

  typedef
    TAO_Array_Forany_T<
        str22,
        str22_slice,
        str22_tag
      >
    str22_forany;

  extern TAO_IDL_TEST_STUB_Export str22_slice *
  str22_alloc ();

  extern TAO_IDL_TEST_STUB_Export void
  str22_free (
      str22_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export str22_slice *
  str22_dup (
      const str22_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export void
  str22_copy (
      str22_slice *_tao_to,
      const str22_slice *_tao_from);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_str22;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_ch.cpp:47

  

  typedef ::CORBA::Boolean boolarray[3][40];
  typedef ::CORBA::Boolean boolarray_slice[40];
  struct boolarray_tag {};
  

  typedef
    TAO_FixedArray_Var_T<
        boolarray,
        boolarray_slice,
        boolarray_tag
      >
    boolarray_var;

  typedef
    boolarray
    boolarray_out;

  typedef
    TAO_Array_Forany_T<
        boolarray,
        boolarray_slice,
        boolarray_tag
      >
    boolarray_forany;

  extern TAO_IDL_TEST_STUB_Export boolarray_slice *
  boolarray_alloc ();

  extern TAO_IDL_TEST_STUB_Export void
  boolarray_free (
      boolarray_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export boolarray_slice *
  boolarray_dup (
      const boolarray_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export void
  boolarray_copy (
      boolarray_slice *_tao_to,
      const boolarray_slice *_tao_from);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_boolarray;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_ch.cpp:47

  

  typedef ::CORBA::Char char_17[17];
  typedef ::CORBA::Char char_17_slice;
  struct char_17_tag {};
  

  typedef
    TAO_FixedArray_Var_T<
        char_17,
        char_17_slice,
        char_17_tag
      >
    char_17_var;

  typedef
    char_17
    char_17_out;

  typedef
    TAO_Array_Forany_T<
        char_17,
        char_17_slice,
        char_17_tag
      >
    char_17_forany;

  extern TAO_IDL_TEST_STUB_Export char_17_slice *
  char_17_alloc ();

  extern TAO_IDL_TEST_STUB_Export void
  char_17_free (
      char_17_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export char_17_slice *
  char_17_dup (
      const char_17_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export void
  char_17_copy (
      char_17_slice *_tao_to,
      const char_17_slice *_tao_from);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_char_17;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_ch.cpp:47

  

  typedef ::CORBA::Char char_10_2[10][2];
  typedef ::CORBA::Char char_10_2_slice[2];
  struct char_10_2_tag {};
  

  typedef
    TAO_FixedArray_Var_T<
        char_10_2,
        char_10_2_slice,
        char_10_2_tag
      >
    char_10_2_var;

  typedef
    char_10_2
    char_10_2_out;

  typedef
    TAO_Array_Forany_T<
        char_10_2,
        char_10_2_slice,
        char_10_2_tag
      >
    char_10_2_forany;

  extern TAO_IDL_TEST_STUB_Export char_10_2_slice *
  char_10_2_alloc ();

  extern TAO_IDL_TEST_STUB_Export void
  char_10_2_free (
      char_10_2_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export char_10_2_slice *
  char_10_2_dup (
      const char_10_2_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export void
  char_10_2_copy (
      char_10_2_slice *_tao_to,
      const char_10_2_slice *_tao_from);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_char_10_2;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

  

  struct A;
  using A_var = ::TAO_Fixed_Var_T<A>;
  using A_out = A&;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

  

  struct TAO_IDL_TEST_STUB_Export A
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = A_var;
    using _out_type = A_out;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long a1;
    OldArray::char_17 a2;
    OldArray::char_10_2 a3;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_A;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

  

  struct B;
  using B_var = ::TAO_Fixed_Var_T<B>;
  using B_out = B&;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

  

  struct TAO_IDL_TEST_STUB_Export B
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = B_var;
    using _out_type = B_out;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long b1;
    OldArray::A b2;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_B;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

  

  struct C;
  using C_var = ::TAO_Fixed_Var_T<C>;
  using C_out = C&;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

  

  struct TAO_IDL_TEST_STUB_Export C
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = C_var;
    using _out_type = C_out;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long c1;
    ::CORBA::Long c2;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_C;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_ch.cpp:47

  

  typedef A A_matrix[2][3][4];
  typedef A A_matrix_slice[3][4];
  struct A_matrix_tag {};
  

  typedef
    TAO_FixedArray_Var_T<
        A_matrix,
        A_matrix_slice,
        A_matrix_tag
      >
    A_matrix_var;

  typedef
    A_matrix
    A_matrix_out;

  typedef
    TAO_Array_Forany_T<
        A_matrix,
        A_matrix_slice,
        A_matrix_tag
      >
    A_matrix_forany;

  extern TAO_IDL_TEST_STUB_Export A_matrix_slice *
  A_matrix_alloc ();

  extern TAO_IDL_TEST_STUB_Export void
  A_matrix_free (
      A_matrix_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export A_matrix_slice *
  A_matrix_dup (
      const A_matrix_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export void
  A_matrix_copy (
      A_matrix_slice *_tao_to,
      const A_matrix_slice *_tao_from);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_A_matrix;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_ch.cpp:47

  

  typedef B B_matrix[2][3][4];
  typedef B B_matrix_slice[3][4];
  struct B_matrix_tag {};
  

  typedef
    TAO_FixedArray_Var_T<
        B_matrix,
        B_matrix_slice,
        B_matrix_tag
      >
    B_matrix_var;

  typedef
    B_matrix
    B_matrix_out;

  typedef
    TAO_Array_Forany_T<
        B_matrix,
        B_matrix_slice,
        B_matrix_tag
      >
    B_matrix_forany;

  extern TAO_IDL_TEST_STUB_Export B_matrix_slice *
  B_matrix_alloc ();

  extern TAO_IDL_TEST_STUB_Export void
  B_matrix_free (
      B_matrix_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export B_matrix_slice *
  B_matrix_dup (
      const B_matrix_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export void
  B_matrix_copy (
      B_matrix_slice *_tao_to,
      const B_matrix_slice *_tao_from);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_B_matrix;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_ch.cpp:47

  

  typedef C C_matrix[2][3][4];
  typedef C C_matrix_slice[3][4];
  struct C_matrix_tag {};
  

  typedef
    TAO_FixedArray_Var_T<
        C_matrix,
        C_matrix_slice,
        C_matrix_tag
      >
    C_matrix_var;

  typedef
    C_matrix
    C_matrix_out;

  typedef
    TAO_Array_Forany_T<
        C_matrix,
        C_matrix_slice,
        C_matrix_tag
      >
    C_matrix_forany;

  extern TAO_IDL_TEST_STUB_Export C_matrix_slice *
  C_matrix_alloc ();

  extern TAO_IDL_TEST_STUB_Export void
  C_matrix_free (
      C_matrix_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export C_matrix_slice *
  C_matrix_dup (
      const C_matrix_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export void
  C_matrix_copy (
      C_matrix_slice *_tao_to,
      const C_matrix_slice *_tao_from);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_C_matrix;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_ch.cpp:47

  

  typedef A_matrix A_rmatrix[2][3][4][5];
  typedef A_matrix A_rmatrix_slice[3][4][5];
  struct A_rmatrix_tag {};
  

  typedef
    TAO_FixedArray_Var_T<
        A_rmatrix,
        A_rmatrix_slice,
        A_rmatrix_tag
      >
    A_rmatrix_var;

  typedef
    A_rmatrix
    A_rmatrix_out;

  typedef
    TAO_Array_Forany_T<
        A_rmatrix,
        A_rmatrix_slice,
        A_rmatrix_tag
      >
    A_rmatrix_forany;

  extern TAO_IDL_TEST_STUB_Export A_rmatrix_slice *
  A_rmatrix_alloc ();

  extern TAO_IDL_TEST_STUB_Export void
  A_rmatrix_free (
      A_rmatrix_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export A_rmatrix_slice *
  A_rmatrix_dup (
      const A_rmatrix_slice *_tao_slice);
  
  extern TAO_IDL_TEST_STUB_Export void
  A_rmatrix_copy (
      A_rmatrix_slice *_tao_to,
      const A_rmatrix_slice *_tao_from);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_A_rmatrix;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

  

#if !defined (_OLDARRAY_A_I__VAR_OUT_CH_)
#define _OLDARRAY_A_I__VAR_OUT_CH_

  class AMI_A_iHandler;
  typedef AMI_A_iHandler *AMI_A_iHandler_ptr;

  class A_i;
  using A_i_ptr = A_i*;
  using A_i_var = TAO_Objref_Var_T<A_i>;
  using A_i_out = TAO_Objref_Out_T<A_i>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

  

  class TAO_IDL_TEST_STUB_Export A_i
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<A_i>;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = A_i_ptr;
    using _var_type = A_i_var;
    using _out_type = A_i_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static A_i_ptr _duplicate (A_i_ptr obj);

    static void _tao_release (A_i_ptr obj);

    static A_i_ptr _narrow (::CORBA::Object_ptr obj);
    static A_i_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static A_i_ptr _nil ();

    virtual ::OldArray::A op (
      const ::OldArray::A & a1,
      ::OldArray::A & a2,
      ::OldArray::A_out a3);

    virtual ::OldArray::str22_slice * op2 (
      const ::OldArray::str22 a1,
      ::OldArray::str22 a2,
      ::OldArray::str22_out a3);

    virtual ::OldArray::A_matrix_slice * op4 (
      const ::OldArray::A & a1,
      ::OldArray::A & a2,
      ::OldArray::A_out a3);

    virtual ::OldArray::str22_slice * attribute_array ();

    virtual void attribute_array (
      const ::OldArray::str22 attribute_array);

    virtual void sendc_op (
      ::OldArray::AMI_A_iHandler_ptr ami_handler,
      const ::OldArray::A & a1,
      const ::OldArray::A & a2);

    virtual void sendc_op2 (
      ::OldArray::AMI_A_iHandler_ptr ami_handler,
      const ::OldArray::str22 a1,
      const ::OldArray::str22 a2);

    virtual void sendc_op4 (
      ::OldArray::AMI_A_iHandler_ptr ami_handler,
      const ::OldArray::A & a1,
      const ::OldArray::A & a2);

    virtual void sendc_set_attribute_array (
      ::OldArray::AMI_A_iHandler_ptr ami_handler,
      const ::OldArray::str22 attribute_array);

    virtual void sendc_get_attribute_array (
      ::OldArray::AMI_A_iHandler_ptr ami_handler);

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    static const char* _desc_repository_id ();
    static const char* _desc_interface_name ();
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    A_i ();

    // Concrete non-local interface only.
    A_i (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    A_i (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~A_i () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    A_i (const A_i &) = delete;
    A_i (A_i &&) = delete;
    A_i &operator= (const A_i &) = delete;
    A_i &operator= (A_i &&) = delete;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_A_i;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

  

#if !defined (_OLDARRAY_AMH_A_IEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _OLDARRAY_AMH_A_IEXCEPTIONHOLDER__VAR_OUT_CH_

  class AMH_A_iExceptionHolder;
  using AMH_A_iExceptionHolder_var = TAO_Value_Var_T<AMH_A_iExceptionHolder>;
  using AMH_A_iExceptionHolder_out = TAO_Value_Out_T<AMH_A_iExceptionHolder>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

  

  class TAO_IDL_TEST_STUB_Export AMH_A_iExceptionHolder
    : public virtual ::CORBA::DefaultValueRefCountBase
  {
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = AMH_A_iExceptionHolder*;
    using _var_type = AMH_A_iExceptionHolder_var;
    using _out_type = AMH_A_iExceptionHolder_out;

    static void _tao_any_destructor (void *);

    AMH_A_iExceptionHolder (::CORBA::Exception *ex)
      : exception (ex)
    {}

    virtual ~AMH_A_iExceptionHolder ();
    virtual ::CORBA::ValueBase *_copy_value ();

    static AMH_A_iExceptionHolder* _downcast (::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        AMH_A_iExceptionHolder *&new_object);
    
    virtual const char* _tao_obv_repository_id () const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id ();

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

    
  public:
    virtual void raise_op ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op2 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op4 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_get_attribute_array ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_set_attribute_array ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op2 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op4 ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_set_attribute_array ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_get_attribute_array ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_A_iExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_A_iExceptionHolder (const AMH_A_iExceptionHolder &);
  void operator= (const AMH_A_iExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldArray_AMH_A_iExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldArray_AMH_A_iExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_A_iExceptionHolder;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDARRAY_AMH_A_IRESPONSEHANDLER__VAR_OUT_CH_)
#define _OLDARRAY_AMH_A_IRESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_A_iResponseHandlerHandler;
typedef AMI_AMH_A_iResponseHandlerHandler *AMI_AMH_A_iResponseHandlerHandler_ptr;

class AMH_A_iResponseHandler;
using AMH_A_iResponseHandler_ptr = AMH_A_iResponseHandler*;
using AMH_A_iResponseHandler_var = TAO_Objref_Var_T<AMH_A_iResponseHandler>;
using AMH_A_iResponseHandler_out = TAO_Objref_Out_T<AMH_A_iResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_A_iResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_A_iResponseHandler_ptr;
  using _var_type = AMH_A_iResponseHandler_var;
  using _out_type = AMH_A_iResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_A_iResponseHandler_ptr _duplicate (AMH_A_iResponseHandler_ptr obj);

  static void _tao_release (AMH_A_iResponseHandler_ptr obj);

  static AMH_A_iResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_A_iResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_A_iResponseHandler_ptr _nil ();

  virtual void op (
    const ::OldArray::A & return_value,
    const ::OldArray::A & a2,
    const ::OldArray::A & a3) = 0;

  virtual void op_excep (
    ::OldArray::AMH_A_iExceptionHolder * holder) = 0;

  virtual void op2 (
    const ::OldArray::str22 return_value,
    const ::OldArray::str22 a2,
    const ::OldArray::str22 a3) = 0;

  virtual void op2_excep (
    ::OldArray::AMH_A_iExceptionHolder * holder) = 0;

  virtual void op4 (
    const ::OldArray::A_matrix return_value,
    const ::OldArray::A & a2,
    const ::OldArray::A & a3) = 0;

  virtual void op4_excep (
    ::OldArray::AMH_A_iExceptionHolder * holder) = 0;

  virtual void get_attribute_array (
    const ::OldArray::str22 return_value) = 0;

  virtual void get_attribute_array_excep (
    ::OldArray::AMH_A_iExceptionHolder * holder) = 0;

  virtual void set_attribute_array () = 0;

  virtual void set_attribute_array_excep (
    ::OldArray::AMH_A_iExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_A_iResponseHandler ();

  

  virtual ~AMH_A_iResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_A_iResponseHandler (const AMH_A_iResponseHandler &) = delete;
  AMH_A_iResponseHandler (AMH_A_iResponseHandler &&) = delete;
  AMH_A_iResponseHandler &operator= (const AMH_A_iResponseHandler &) = delete;
  AMH_A_iResponseHandler &operator= (AMH_A_iResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMH_A_iResponseHandler;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDARRAY_AMI_A_IHANDLER__VAR_OUT_CH_)
#define _OLDARRAY_AMI_A_IHANDLER__VAR_OUT_CH_

class AMI_A_iHandler;
using AMI_A_iHandler_ptr = AMI_A_iHandler*;
using AMI_A_iHandler_var = TAO_Objref_Var_T<AMI_A_iHandler>;
using AMI_A_iHandler_out = TAO_Objref_Out_T<AMI_A_iHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_A_iHandler
  : public virtual ::Messaging::ReplyHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_A_iHandler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_A_iHandler_ptr;
  using _var_type = AMI_A_iHandler_var;
  using _out_type = AMI_A_iHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_A_iHandler_ptr _duplicate (AMI_A_iHandler_ptr obj);

  static void _tao_release (AMI_A_iHandler_ptr obj);

  static AMI_A_iHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_A_iHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_A_iHandler_ptr _nil ();

  virtual void op (
    const ::OldArray::A & ami_return_val,
    const ::OldArray::A & a2,
    const ::OldArray::A & a3);

  static void
  op_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op2 (
    const ::OldArray::str22 ami_return_val,
    const ::OldArray::str22 a2,
    const ::OldArray::str22 a3);

  static void
  op2_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op2_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void op4 (
    const ::OldArray::A_matrix ami_return_val,
    const ::OldArray::A & a2,
    const ::OldArray::A & a3);

  static void
  op4_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op4_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void get_attribute_array (
    const ::OldArray::str22 ami_return_val);

  static void
  get_attribute_array_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void get_attribute_array_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  virtual void set_attribute_array ();

  static void
  set_attribute_array_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void set_attribute_array_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_A_iHandler ();

  // Concrete non-local interface only.
  AMI_A_iHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_A_iHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_A_iHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_A_iHandler (const AMI_A_iHandler &) = delete;
  AMI_A_iHandler (AMI_A_iHandler &&) = delete;
  AMI_A_iHandler &operator= (const AMI_A_iHandler &) = delete;
  AMI_A_iHandler &operator= (AMI_A_iHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AMI_A_iHandler;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module OldArray
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Value_Traits<Messaging::ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  template<>
  class Arg_Traits< ::OldArray::str22_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::OldArray::str22_var,
            ::OldArray::str22_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::OldArray::boolarray_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::OldArray::boolarray_var,
            ::OldArray::boolarray_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::OldArray::char_17_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::OldArray::char_17_var,
            ::OldArray::char_17_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::OldArray::char_10_2_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::OldArray::char_10_2_var,
            ::OldArray::char_10_2_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::OldArray::A>
    : public
        Fixed_Size_Arg_Traits_T<
            ::OldArray::A,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::OldArray::B>
    : public
        Fixed_Size_Arg_Traits_T<
            ::OldArray::B,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::OldArray::C>
    : public
        Fixed_Size_Arg_Traits_T<
            ::OldArray::C,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::OldArray::A_matrix_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::OldArray::A_matrix_var,
            ::OldArray::A_matrix_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::OldArray::B_matrix_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::OldArray::B_matrix_var,
            ::OldArray::B_matrix_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::OldArray::C_matrix_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::OldArray::C_matrix_var,
            ::OldArray::C_matrix_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::OldArray::A_rmatrix_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::OldArray::A_rmatrix_var,
            ::OldArray::A_rmatrix_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDARRAY_A_I__ARG_TRAITS_)
#define _OLDARRAY_A_I__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldArray::A_i>
    : public Object_Arg_Traits_T<
        ::OldArray::A_i_ptr,
        ::OldArray::A_i_var,
        ::OldArray::A_i_out,
        TAO::Objref_Traits<OldArray::A_i>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_OLDARRAY_AMH_A_IEXCEPTIONHOLDER__ARG_TRAITS_)
#define _OLDARRAY_AMH_A_IEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OldArray::AMH_A_iExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::OldArray::AMH_A_iExceptionHolder *,
            ::OldArray::AMH_A_iExceptionHolder_var,
            ::OldArray::AMH_A_iExceptionHolder_out,
            TAO::Value_Traits<OldArray::AMH_A_iExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDARRAY_AMI_A_IHANDLER__ARG_TRAITS_)
#define _OLDARRAY_AMI_A_IHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldArray::AMI_A_iHandler>
    : public Object_Arg_Traits_T<
        ::OldArray::AMI_A_iHandler_ptr,
        ::OldArray::AMI_A_iHandler_var,
        ::OldArray::AMI_A_iHandler_out,
        TAO::Objref_Traits<OldArray::AMI_A_iHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_OldArray
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

  

  // OBV_ class
  class TAO_IDL_TEST_STUB_Export AMH_A_iExceptionHolder
    : public virtual OldArray::AMH_A_iExceptionHolder
  {

protected:
  AMH_A_iExceptionHolder () = default;
  virtual ~AMH_A_iExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldArray_AMH_A_iExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldArray_AMH_A_iExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
  template<>
  struct TAO_IDL_TEST_STUB_Export Array_Traits<
      OldArray::str22_forany
    >
  {
    static void free (
        OldArray::str22_slice * _tao_slice);
    static OldArray::str22_slice * dup (
        const OldArray::str22_slice * _tao_slice);
    static void copy (
        OldArray::str22_slice * _tao_to,
        const OldArray::str22_slice * _tao_from);
    static OldArray::str22_slice * alloc ();
    static void zero (
        OldArray::str22_slice * _tao_slice);
  };
  template<>
  struct TAO_IDL_TEST_STUB_Export Array_Traits<
      OldArray::boolarray_forany
    >
  {
    static void free (
        OldArray::boolarray_slice * _tao_slice);
    static OldArray::boolarray_slice * dup (
        const OldArray::boolarray_slice * _tao_slice);
    static void copy (
        OldArray::boolarray_slice * _tao_to,
        const OldArray::boolarray_slice * _tao_from);
    static OldArray::boolarray_slice * alloc ();
    static void zero (
        OldArray::boolarray_slice * _tao_slice);
  };
  template<>
  struct TAO_IDL_TEST_STUB_Export Array_Traits<
      OldArray::char_17_forany
    >
  {
    static void free (
        OldArray::char_17_slice * _tao_slice);
    static OldArray::char_17_slice * dup (
        const OldArray::char_17_slice * _tao_slice);
    static void copy (
        OldArray::char_17_slice * _tao_to,
        const OldArray::char_17_slice * _tao_from);
    static OldArray::char_17_slice * alloc ();
    static void zero (
        OldArray::char_17_slice * _tao_slice);
  };
  template<>
  struct TAO_IDL_TEST_STUB_Export Array_Traits<
      OldArray::char_10_2_forany
    >
  {
    static void free (
        OldArray::char_10_2_slice * _tao_slice);
    static OldArray::char_10_2_slice * dup (
        const OldArray::char_10_2_slice * _tao_slice);
    static void copy (
        OldArray::char_10_2_slice * _tao_to,
        const OldArray::char_10_2_slice * _tao_from);
    static OldArray::char_10_2_slice * alloc ();
    static void zero (
        OldArray::char_10_2_slice * _tao_slice);
  };
  template<>
  struct TAO_IDL_TEST_STUB_Export Array_Traits<
      OldArray::A_matrix_forany
    >
  {
    static void free (
        OldArray::A_matrix_slice * _tao_slice);
    static OldArray::A_matrix_slice * dup (
        const OldArray::A_matrix_slice * _tao_slice);
    static void copy (
        OldArray::A_matrix_slice * _tao_to,
        const OldArray::A_matrix_slice * _tao_from);
    static OldArray::A_matrix_slice * alloc ();
    static void zero (
        OldArray::A_matrix_slice * _tao_slice);
  };
  template<>
  struct TAO_IDL_TEST_STUB_Export Array_Traits<
      OldArray::B_matrix_forany
    >
  {
    static void free (
        OldArray::B_matrix_slice * _tao_slice);
    static OldArray::B_matrix_slice * dup (
        const OldArray::B_matrix_slice * _tao_slice);
    static void copy (
        OldArray::B_matrix_slice * _tao_to,
        const OldArray::B_matrix_slice * _tao_from);
    static OldArray::B_matrix_slice * alloc ();
    static void zero (
        OldArray::B_matrix_slice * _tao_slice);
  };
  template<>
  struct TAO_IDL_TEST_STUB_Export Array_Traits<
      OldArray::C_matrix_forany
    >
  {
    static void free (
        OldArray::C_matrix_slice * _tao_slice);
    static OldArray::C_matrix_slice * dup (
        const OldArray::C_matrix_slice * _tao_slice);
    static void copy (
        OldArray::C_matrix_slice * _tao_to,
        const OldArray::C_matrix_slice * _tao_from);
    static OldArray::C_matrix_slice * alloc ();
    static void zero (
        OldArray::C_matrix_slice * _tao_slice);
  };
  template<>
  struct TAO_IDL_TEST_STUB_Export Array_Traits<
      OldArray::A_rmatrix_forany
    >
  {
    static void free (
        OldArray::A_rmatrix_slice * _tao_slice);
    static OldArray::A_rmatrix_slice * dup (
        const OldArray::A_rmatrix_slice * _tao_slice);
    static void copy (
        OldArray::A_rmatrix_slice * _tao_to,
        const OldArray::A_rmatrix_slice * _tao_from);
    static OldArray::A_rmatrix_slice * alloc ();
    static void zero (
        OldArray::A_rmatrix_slice * _tao_slice);
  };

#if !defined (_OLDARRAY_A_I__TRAITS_)
#define _OLDARRAY_A_I__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldArray::A_i>
  {
    static ::OldArray::A_i_ptr duplicate (::OldArray::A_i_ptr p);
    static void release (::OldArray::A_i_ptr p);
    static ::OldArray::A_i_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldArray::A_i_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDARRAY_AMH_A_IEXCEPTIONHOLDER__TRAITS_)
#define _OLDARRAY_AMH_A_IEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<OldArray::AMH_A_iExceptionHolder>
  {
    static void add_ref (OldArray::AMH_A_iExceptionHolder *);
    static void remove_ref (OldArray::AMH_A_iExceptionHolder *);
    static void release (OldArray::AMH_A_iExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_OLDARRAY_AMH_A_IRESPONSEHANDLER__TRAITS_)
#define _OLDARRAY_AMH_A_IRESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldArray::AMH_A_iResponseHandler>
  {
    static ::OldArray::AMH_A_iResponseHandler_ptr duplicate (::OldArray::AMH_A_iResponseHandler_ptr p);
    static void release (::OldArray::AMH_A_iResponseHandler_ptr p);
    static ::OldArray::AMH_A_iResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldArray::AMH_A_iResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDARRAY_AMI_A_IHANDLER__TRAITS_)
#define _OLDARRAY_AMI_A_IHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldArray::AMI_A_iHandler>
  {
    static ::OldArray::AMI_A_iHandler_ptr duplicate (::OldArray::AMI_A_iHandler_ptr p);
    static void release (::OldArray::AMI_A_iHandler_ptr p);
    static ::OldArray::AMI_A_iHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldArray::AMI_A_iHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_ch.cpp:32


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const OldArray::str22_forany &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::str22_forany &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_ch.cpp:32


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const OldArray::boolarray_forany &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::boolarray_forany &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_ch.cpp:32


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const OldArray::char_17_forany &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::char_17_forany &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_ch.cpp:32


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const OldArray::char_10_2_forany &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::char_10_2_forany &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::OldArray::A &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::OldArray::A*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::OldArray::A *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::OldArray::B &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::OldArray::B*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::OldArray::B *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::OldArray::C &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::OldArray::C*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::OldArray::C *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_ch.cpp:32


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const OldArray::A_matrix_forany &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::A_matrix_forany &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_ch.cpp:32


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const OldArray::B_matrix_forany &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::B_matrix_forany &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_ch.cpp:32


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const OldArray::C_matrix_forany &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::C_matrix_forany &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/any_op_ch.cpp:32


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const OldArray::A_rmatrix_forany &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::A_rmatrix_forany &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, OldArray::A_i_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, OldArray::A_i_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::A_i_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, OldArray::AMH_A_iExceptionHolder *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, OldArray::AMH_A_iExceptionHolder **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::AMH_A_iExceptionHolder *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, OldArray::AMH_A_iResponseHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, OldArray::AMH_A_iResponseHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::AMH_A_iResponseHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, OldArray::AMI_A_iHandler_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, OldArray::AMI_A_iHandler_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OldArray::AMI_A_iHandler_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:98


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const OldArray::str22_forany &_tao_array);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::str22_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:98


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const OldArray::boolarray_forany &_tao_array);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::boolarray_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:98


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const OldArray::char_17_forany &_tao_array);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::char_17_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:98


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const OldArray::char_10_2_forany &_tao_array);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::char_10_2_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldArray::A &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::A &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldArray::B &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::B &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldArray::C &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::C &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:98


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const OldArray::A_matrix_forany &_tao_array);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::A_matrix_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:98


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const OldArray::B_matrix_forany &_tao_array);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::B_matrix_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:98


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const OldArray::C_matrix_forany &_tao_array);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::C_matrix_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:98


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const OldArray::A_rmatrix_forany &_tao_array);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::A_rmatrix_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldArray::A_i_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::A_i_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (OldArray::AMH_A_iExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (OldArray::AMH_A_iExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldArray::AMH_A_iExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::AMH_A_iExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldArray::AMI_A_iHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldArray::AMI_A_iHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:1648

#if defined (__ACE_INLINE__)
#include "old_arrayC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

