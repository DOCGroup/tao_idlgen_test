// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:454

#ifndef _TAO_IDL_TYPEPREFIXS_2LYJXK_H_
#define _TAO_IDL_TYPEPREFIXS_2LYJXK_H_

#include /**/ "ace/pre.h"

#include "typeprefixC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Messaging/MessagingS.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
#include "tao/Messaging/AMH_Response_Handler.h"

#include /**/ "TAO_IDL_TEST_stub_export.h"
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A_B__SARG_TRAITS_)
#define _A_B__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A::B>
    : public Object_SArg_Traits_T<
        ::A::B_ptr,
        ::A::B_var,
        ::A::B_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_A_AMH_BEXCEPTIONHOLDER__SARG_TRAITS_)
#define _A_AMH_BEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::A::AMH_BExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::A::AMH_BExceptionHolder *,
            ::A::AMH_BExceptionHolder_var,
            ::A::AMH_BExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A_AMI_BHANDLER__SARG_TRAITS_)
#define _A_AMI_BHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A::AMI_BHandler>
    : public Object_SArg_Traits_T<
        ::A::AMI_BHandler_ptr,
        ::A::AMI_BHandler_var,
        ::A::AMI_BHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A_C__SARG_TRAITS_)
#define _A_C__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A::C>
    : public Object_SArg_Traits_T<
        ::A::C_ptr,
        ::A::C_var,
        ::A::C_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_A_AMH_CEXCEPTIONHOLDER__SARG_TRAITS_)
#define _A_AMH_CEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::A::AMH_CExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::A::AMH_CExceptionHolder *,
            ::A::AMH_CExceptionHolder_var,
            ::A::AMH_CExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A_AMI_CHANDLER__SARG_TRAITS_)
#define _A_AMI_CHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A::AMI_CHandler>
    : public Object_SArg_Traits_T<
        ::A::AMI_CHandler_ptr,
        ::A::AMI_CHandler_var,
        ::A::AMI_CHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_A
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_B;
  typedef AMH_B *AMH_B_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_B
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_B ();
  
  public:
    AMH_B (const AMH_B& rhs);
    virtual ~AMH_B () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    A::B *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class B;
typedef B *B_ptr;

class _TAO_B_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export B
  : public virtual PortableServer::ServantBase
{
protected:
  B ();

public:
  /// Useful for template programming.
  typedef ::A::B _stub_type;
  typedef ::A::B_ptr _stub_ptr_type;
  typedef ::A::B_var _stub_var_type;

  B (const B& rhs);
  virtual ~B () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::A::B *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_B_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_B_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_BResponseHandler;
typedef TAO_AMH_BResponseHandler *TAO_AMH_BResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_BResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::A::AMH_BResponseHandler
{
public:
  TAO_AMH_BResponseHandler () = default;
  virtual ~TAO_AMH_BResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_BHandler;
typedef AMI_BHandler *AMI_BHandler_ptr;

class _TAO_AMI_BHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_BHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_BHandler ();

public:
  /// Useful for template programming.
  typedef ::A::AMI_BHandler _stub_type;
  typedef ::A::AMI_BHandler_ptr _stub_ptr_type;
  typedef ::A::AMI_BHandler_var _stub_var_type;

  AMI_BHandler (const AMI_BHandler& rhs);
  virtual ~AMI_BHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::A::AMI_BHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_BHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_BHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class AMH_C;
typedef AMH_C *AMH_C_ptr;

class TAO_IDL_TEST_STUB_Export AMH_C
  : public virtual PortableServer::ServantBase
{
protected:
  AMH_C ();

public:
  AMH_C (const AMH_C& rhs);
  virtual ~AMH_C () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  A::C *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void op_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void op (
    A::AMH_CResponseHandler_ptr _tao_rh,
    ::A::B_ptr a
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class C;
typedef C *C_ptr;

class _TAO_C_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export C
  : public virtual PortableServer::ServantBase
{
protected:
  C ();

public:
  /// Useful for template programming.
  typedef ::A::C _stub_type;
  typedef ::A::C_ptr _stub_ptr_type;
  typedef ::A::C_var _stub_var_type;

  C (const C& rhs);
  virtual ~C () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::A::C *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op (
    ::A::B_ptr a) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_C_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_C_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_CResponseHandler;
typedef TAO_AMH_CResponseHandler *TAO_AMH_CResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_CResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::A::AMH_CResponseHandler
{
public:
  TAO_AMH_CResponseHandler () = default;
  virtual ~TAO_AMH_CResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op_excep (
    ::A::AMH_CExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_CHandler;
typedef AMI_CHandler *AMI_CHandler_ptr;

class _TAO_AMI_CHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_CHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_CHandler ();

public:
  /// Useful for template programming.
  typedef ::A::AMI_CHandler _stub_type;
  typedef ::A::AMI_CHandler_ptr _stub_ptr_type;
  typedef ::A::AMI_CHandler_var _stub_var_type;

  AMI_CHandler (const AMI_CHandler& rhs);
  virtual ~AMI_CHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::A::AMI_CHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op () = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void op_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_CHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_CHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module A

#include "typeprefixS_T.h"


#include /**/ "ace/post.h"

#endif /* ifndef */

