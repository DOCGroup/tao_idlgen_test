// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:148

#ifndef _TAO_IDL_VALUETYPEC_OVHAWH_H_
#define _TAO_IDL_VALUETYPEC_OVHAWH_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "TAO_IDL_TEST_stub_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Messaging/Messaging.h"
#include "tao/Valuetype/Sequence_T.h"
#include "tao/Sequence_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "includedC.h"

#if TAO_MAJOR_VERSION != 4 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_root/root_ch.cpp:155


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_MYVALUETYPE__VAR_OUT_CH_)
#define _MYVALUETYPE__VAR_OUT_CH_

class MyValueType;
using MyValueType_var = TAO_Value_Var_T<MyValueType>;
using MyValueType_out = TAO_Value_Out_T<MyValueType>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export MyValueType
  : public virtual ::CORBA::ValueBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = MyValueType*;
  using _var_type = MyValueType_var;
  using _out_type = MyValueType_out;

  static void _tao_any_destructor (void *);

  static MyValueType* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      MyValueType *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:598

  virtual void my_string_value (char *val) = 0;
  virtual void my_string_value (const char *val) = 0;
  virtual void my_string_value (const ::CORBA::String_var &val) = 0;
  virtual const char *my_string_value () const = 0;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

  

protected:
  MyValueType ();
  virtual ~MyValueType ();

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  MyValueType (const MyValueType &);
  void operator= (const MyValueType &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__MyValueType (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__MyValueType (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

class TAO_IDL_TEST_STUB_Export MyValueType_init
  : public virtual ::CORBA::ValueFactoryBase
{
public:

  virtual MyValueType* make_one () = 0;

  static MyValueType_init* _downcast (::CORBA::ValueFactoryBase *);

  // TAO-specific extensions
public:
  virtual const char* tao_repository_id ();

protected:
  MyValueType_init ();

protected:
  virtual ~MyValueType_init ();
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_MyValueType;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/enum_ch.cpp:39

enum ValueSort2
{
  SYMBOL_TYPE2
};

typedef ValueSort2 &ValueSort2_out;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_ValueSort2;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258



class MyValueTypeUnion;
using MyValueTypeUnion_var = ::TAO_Var_Var_T<MyValueTypeUnion>;
using MyValueTypeUnion_out = ::TAO_Out_T<MyValueTypeUnion>;

class TAO_IDL_TEST_STUB_Export MyValueTypeUnion
{
public:
  MyValueTypeUnion ();
  MyValueTypeUnion (const MyValueTypeUnion &);
  ~MyValueTypeUnion ();

  MyValueTypeUnion &operator= (const MyValueTypeUnion &);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/discriminant_ch.cpp:66

  

  void _d (ValueSort2);
  ValueSort2 _d () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  
  using _var_type = MyValueTypeUnion_var;
  using _out_type = MyValueTypeUnion_out;

  static void _tao_any_destructor (void *);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:355

  

  void symbol_val (MyValueType*);
  MyValueType* symbol_val () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/union_ch.cpp:120

  

  void _default ();
private:
  ValueSort2 disc_;

  union
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union_branch/private_ch.cpp:290

    
    MyValueType_var *symbol_val_;
  } u_;

  /// TAO extension - frees any allocated storage.
  void _reset ();
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_MyValueTypeUnion;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_RECVALUETYPE__VAR_OUT_CH_)
#define _RECVALUETYPE__VAR_OUT_CH_

class RecValueType;
using RecValueType_var = TAO_Value_Var_T<RecValueType>;
using RecValueType_out = TAO_Value_Out_T<RecValueType>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export RecValueType
  : public virtual ::CORBA::ValueBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = RecValueType*;
  using _var_type = RecValueType_var;
  using _out_type = RecValueType_out;

  static void _tao_any_destructor (void *);

  static RecValueType* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      RecValueType *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

protected:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:524

  
public:
  

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

#if !defined (_RECVALUETYPE__TAO_SEQ_RECVALUETYPE__CH_)
#define _RECVALUETYPE__TAO_SEQ_RECVALUETYPE__CH_

  

  class TAO_IDL_TEST_STUB_Export _tao_seq_RecValueType_
    : public
        ::TAO::unbounded_valuetype_sequence<
            RecValueType,
            RecValueType_var
          >
  {
  public:
    _tao_seq_RecValueType_ () = default;
    _tao_seq_RecValueType_ (::CORBA::ULong max);
    _tao_seq_RecValueType_ (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      RecValueType ** buffer,
      ::CORBA::Boolean release = false);
    _tao_seq_RecValueType_ (const _tao_seq_RecValueType_ &) = default;
    _tao_seq_RecValueType_ (_tao_seq_RecValueType_ &&) = default;
    _tao_seq_RecValueType_& operator= (const _tao_seq_RecValueType_ &) = default;
    _tao_seq_RecValueType_& operator= (_tao_seq_RecValueType_ &&) = default;
    virtual ~_tao_seq_RecValueType_ () = default;
    
  };

#endif /* end #if !defined */

protected:

  typedef _tao_seq_RecValueType_ _rec_value_types_seq;
  virtual void rec_value_types (const RecValueType::_tao_seq_RecValueType_ &) = 0;
  virtual const RecValueType::_tao_seq_RecValueType_ &rec_value_types () const = 0;
  virtual RecValueType::_tao_seq_RecValueType_ &rec_value_types () = 0;

protected:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:524

  
public:
  

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

#if !defined (_RECVALUETYPE__TAO_SEQ_RECVALUETYPE__2_CH_)
#define _RECVALUETYPE__TAO_SEQ_RECVALUETYPE__2_CH_

  

  class TAO_IDL_TEST_STUB_Export _tao_seq_RecValueType__2
    : public
        ::TAO::bounded_valuetype_sequence<
            RecValueType,
            RecValueType_var,
            2
          >
  {
  public:
    _tao_seq_RecValueType__2 () = default;
    _tao_seq_RecValueType__2 (
      ::CORBA::ULong length,
      RecValueType ** buffer,
      ::CORBA::Boolean release = false);
    _tao_seq_RecValueType__2 (const _tao_seq_RecValueType__2 &) = default;
    _tao_seq_RecValueType__2 (_tao_seq_RecValueType__2 &&) = default;
    _tao_seq_RecValueType__2& operator= (const _tao_seq_RecValueType__2 &) = default;
    _tao_seq_RecValueType__2& operator= (_tao_seq_RecValueType__2 &&) = default;
    virtual ~_tao_seq_RecValueType__2 () = default;
    
  };

#endif /* end #if !defined */

protected:

  typedef _tao_seq_RecValueType__2 _rec_value_types2_seq;
  virtual void rec_value_types2 (const RecValueType::_tao_seq_RecValueType__2 &) = 0;
  virtual const RecValueType::_tao_seq_RecValueType__2 &rec_value_types2 () const = 0;
  virtual RecValueType::_tao_seq_RecValueType__2 &rec_value_types2 () = 0;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

  

protected:
  RecValueType ();
  virtual ~RecValueType ();

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  RecValueType (const RecValueType &);
  void operator= (const RecValueType &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__RecValueType (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__RecValueType (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

class TAO_IDL_TEST_STUB_Export RecValueType_init
  : public virtual ::CORBA::ValueFactoryBase
{
public:
  RecValueType_init ();

  static RecValueType_init* _downcast (::CORBA::ValueFactoryBase *);

  virtual ::CORBA::ValueBase *create_for_unmarshal ();

  // TAO-specific extensions
public:
  virtual const char* tao_repository_id ();

protected:
  virtual ~RecValueType_init ();
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_RecValueType;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_GETSDEPRECATEDMEMBER__VAR_OUT_CH_)
#define _GETSDEPRECATEDMEMBER__VAR_OUT_CH_

class GetsDeprecatedMember;
using GetsDeprecatedMember_var = TAO_Value_Var_T<GetsDeprecatedMember>;
using GetsDeprecatedMember_out = TAO_Value_Out_T<GetsDeprecatedMember>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export GetsDeprecatedMember
  : public virtual IncludedBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = GetsDeprecatedMember*;
  using _var_type = GetsDeprecatedMember_var;
  using _out_type = GetsDeprecatedMember_out;

  static void _tao_any_destructor (void *);

  static GetsDeprecatedMember* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      GetsDeprecatedMember *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:598

  virtual void StringMember (char *val) = 0;
  virtual void StringMember (const char *val) = 0;
  virtual void StringMember (const ::CORBA::String_var &val) = 0;
  virtual const char *StringMember () const = 0;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

  

protected:
  GetsDeprecatedMember ();
  virtual ~GetsDeprecatedMember ();

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  GetsDeprecatedMember (const GetsDeprecatedMember &);
  void operator= (const GetsDeprecatedMember &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__GetsDeprecatedMember (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__GetsDeprecatedMember (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

class TAO_IDL_TEST_STUB_Export GetsDeprecatedMember_init
  : public virtual ::CORBA::ValueFactoryBase
{
public:
  GetsDeprecatedMember_init ();

  static GetsDeprecatedMember_init* _downcast (::CORBA::ValueFactoryBase *);

  virtual ::CORBA::ValueBase *create_for_unmarshal ();

  // TAO-specific extensions
public:
  virtual const char* tao_repository_id ();

protected:
  virtual ~GetsDeprecatedMember_init ();
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_GetsDeprecatedMember;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace X
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

  

#if !defined (_X_AXXX__VAR_OUT_CH_)
#define _X_AXXX__VAR_OUT_CH_

  class AXXX;
  using AXXX_var = TAO_Value_Var_T<AXXX>;
  using AXXX_out = TAO_Value_Out_T<AXXX>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

  

  class TAO_IDL_TEST_STUB_Export AXXX
    : public virtual ::CORBA::ValueBase
  {
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = AXXX*;
    using _var_type = AXXX_var;
    using _out_type = AXXX_out;

    static void _tao_any_destructor (void *);

    static AXXX* _downcast (::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        AXXX *&new_object);
    
    virtual const char* _tao_obv_repository_id () const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id ();

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

    
  public:
    virtual ::CORBA::Object_ptr make_object () = 0;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

  

protected:
  AXXX ();
  virtual ~AXXX ();

  
private:
  AXXX (const AXXX &);
  void operator= (const AXXX &);
  
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_AXXX;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_X_BXXX__VAR_OUT_CH_)
#define _X_BXXX__VAR_OUT_CH_

class BXXX;
using BXXX_var = TAO_Value_Var_T<BXXX>;
using BXXX_out = TAO_Value_Out_T<BXXX>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export BXXX
  : public virtual AXXX
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = BXXX*;
  using _var_type = BXXX_var;
  using _out_type = BXXX_out;

  static void _tao_any_destructor (void *);

  static BXXX* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      BXXX *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

  

protected:
  BXXX ();
  virtual ~BXXX ();

  
private:
  BXXX (const BXXX &);
  void operator= (const BXXX &);
  
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_BXXX;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98



#if !defined (_X_BSEQ_CH_)
#define _X_BSEQ_CH_

class BSeq;
typedef ::TAO_VarSeq_Var_T<BSeq> BSeq_var;
typedef ::TAO_Seq_Out_T<BSeq> BSeq_out;


class TAO_IDL_TEST_STUB_Export BSeq
  : public
      ::TAO::unbounded_valuetype_sequence<
          BXXX,
          BXXX_var
        >
{
public:
  BSeq () = default;
  BSeq (::CORBA::ULong max);
  BSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    BXXX ** buffer,
    ::CORBA::Boolean release = false);
  BSeq (const BSeq &) = default;
  BSeq (BSeq &&) = default;
  BSeq& operator= (const BSeq &) = default;
  BSeq& operator= (BSeq &&) = default;
  virtual ~BSeq () = default;
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  
  using _var_type = BSeq_var;
  using _out_type = BSeq_out;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_BSeq;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module X
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace ModSelection
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace SelectionDefns
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

    

#if !defined (_MODSELECTION_SELECTIONDEFNS_CRITERION__VAR_OUT_CH_)
#define _MODSELECTION_SELECTIONDEFNS_CRITERION__VAR_OUT_CH_

    class Criterion;
    using Criterion_var = TAO_Value_Var_T<Criterion>;
    using Criterion_out = TAO_Value_Out_T<Criterion>;

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

    

    class TAO_IDL_TEST_STUB_Export Criterion
      : public virtual ::CORBA::ValueBase
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = Criterion*;
      using _var_type = Criterion_var;
      using _out_type = Criterion_out;

      static void _tao_any_destructor (void *);

      static Criterion* _downcast (::CORBA::ValueBase *v);
      
      /// TAO extensions or internals
      static ::CORBA::Boolean _tao_unmarshal (
          TAO_InputCDR &strm,
          Criterion *&new_object);
      
      virtual const char* _tao_obv_repository_id () const;

      virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

      static const char* _tao_obv_static_repository_id ();

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
    
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

      
    public:
      virtual void setCriterionRequiredAttributes (
          char *&
        ) = 0;
    
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

      
    public:
      virtual ::CORBA::Boolean isValid (
          const ::CORBA::WChar *
        ) = 0;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

      
    
    protected:
      Criterion ();
      virtual ~Criterion ();

      
    private:
      Criterion (const Criterion &);
      void operator= (const Criterion &);
      
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_Criterion;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

    

#if !defined (_MODSELECTION_SELECTIONDEFNS_CRITERIONEXPR__VAR_OUT_CH_)
#define _MODSELECTION_SELECTIONDEFNS_CRITERIONEXPR__VAR_OUT_CH_

    class CriterionExpr;
    using CriterionExpr_var = TAO_Value_Var_T<CriterionExpr>;
    using CriterionExpr_out = TAO_Value_Out_T<CriterionExpr>;

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

    

    class TAO_IDL_TEST_STUB_Export CriterionExpr
      : public virtual Criterion
    {
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

      using _ptr_type = CriterionExpr*;
      using _var_type = CriterionExpr_var;
      using _out_type = CriterionExpr_out;

      static void _tao_any_destructor (void *);

      static CriterionExpr* _downcast (::CORBA::ValueBase *v);
      
      /// TAO extensions or internals
      static ::CORBA::Boolean _tao_unmarshal (
          TAO_InputCDR &strm,
          CriterionExpr *&new_object);
      
      virtual const char* _tao_obv_repository_id () const;

      virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

      static const char* _tao_obv_static_repository_id ();

      virtual ::CORBA::TypeCode_ptr _tao_type () const;
    
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

      

      struct RightCriterionInfos;
      using RightCriterionInfos_var = ::TAO_Var_Var_T<RightCriterionInfos>;
      using RightCriterionInfos_out = ::TAO_Out_T<RightCriterionInfos>;

      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

      

      struct TAO_IDL_TEST_STUB_Export RightCriterionInfos
      {
        // TAO_IDL - Generated from
        // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

        
        using _var_type = RightCriterionInfos_var;
        using _out_type = RightCriterionInfos_out;

        static void _tao_any_destructor (void *);
        
        ::CORBA::Long theCriterionId;
        ModSelection::SelectionDefns::CriterionExpr_var theRightExpr;
      };
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

      static ::CORBA::TypeCode_ptr const _tc_RightCriterionInfos;
    
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

      

      class RightCriterionExpr;
      using RightCriterionExpr_var = ::TAO_Var_Var_T<RightCriterionExpr>;
      using RightCriterionExpr_out = ::TAO_Out_T<RightCriterionExpr>;

      class TAO_IDL_TEST_STUB_Export RightCriterionExpr
      {
      public:
        RightCriterionExpr ();
        RightCriterionExpr (const RightCriterionExpr &);
        ~RightCriterionExpr ();

        RightCriterionExpr &operator= (const RightCriterionExpr &);
        // TAO_IDL - Generated from
        // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/discriminant_ch.cpp:98

        

        void _d ( ::CORBA::Boolean);
        ::CORBA::Boolean _d () const;
        // TAO_IDL - Generated from
        // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

        
        using _var_type = RightCriterionExpr_var;
        using _out_type = RightCriterionExpr_out;

        static void _tao_any_destructor (void *);
        // TAO_IDL - Generated from
        // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:568

        

        void theRightCriterionInfos (char *);
        void theRightCriterionInfos (const char *);
        void theRightCriterionInfos (const ::CORBA::String_var&);
        const char *theRightCriterionInfos () const;
        // TAO_IDL - Generated from
        // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/union_ch.cpp:120

        

        void _default ();
      private:
        ::CORBA::Boolean disc_;

        union
        {
          // TAO_IDL - Generated from
          // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union_branch/private_ch.cpp:464

          
          char *theRightCriterionInfos_;
        } u_;

        /// TAO extension - frees any allocated storage.
        void _reset ();
      };
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

      static ::CORBA::TypeCode_ptr const _tc_RightCriterionExpr;
    
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:355

      virtual void theLeftCriterion (ModSelection::SelectionDefns::Criterion *) = 0;
      virtual ModSelection::SelectionDefns::Criterion *theLeftCriterion () const = 0;
    
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:747

      virtual void theRightCriterionExpr (const ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr &) = 0;
      virtual const ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr &theRightCriterionExpr () const = 0;
      virtual ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr &theRightCriterionExpr () = 0;
    
    public:
    
    public:
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236

      
    
    protected:
      CriterionExpr ();
      virtual ~CriterionExpr ();

      virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
      virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
      virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
      
    private:
      CriterionExpr (const CriterionExpr &);
      void operator= (const CriterionExpr &);
      
    protected:
      virtual ::CORBA::Boolean
      _tao_marshal__ModSelection_SelectionDefns_CriterionExpr (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

      virtual ::CORBA::Boolean
      _tao_unmarshal__ModSelection_SelectionDefns_CriterionExpr (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:56

    class TAO_IDL_TEST_STUB_Export CriterionExpr_init
      : public virtual ::CORBA::ValueFactoryBase
    {
    public:

      virtual CriterionExpr* createWithCriterionLink (
        ::ModSelection::SelectionDefns::Criterion * theLeftCriterion,
        const char * link,
        ::ModSelection::SelectionDefns::CriterionExpr * theRightCriterion) = 0;

      virtual CriterionExpr* createWithSingleCriterion (
        ::ModSelection::SelectionDefns::Criterion * theSingleCriterion) = 0;

      static CriterionExpr_init* _downcast (::CORBA::ValueFactoryBase *);

      // TAO-specific extensions
    public:
      virtual const char* tao_repository_id ();
    
    protected:
      CriterionExpr_init ();
    
    protected:
      virtual ~CriterionExpr_init ();
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

    extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_CriterionExpr;
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module ModSelection::SelectionDefns


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module ModSelection
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Value_Traits<Messaging::ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MYVALUETYPE__ARG_TRAITS_)
#define _MYVALUETYPE__ARG_TRAITS_

  template<>
  class Arg_Traits< ::MyValueType>
    : public
        Object_Arg_Traits_T<
            ::MyValueType *,
            ::MyValueType_var,
            ::MyValueType_out,
            TAO::Value_Traits<MyValueType>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:889

  

  template<>
  class Arg_Traits< ::ValueSort2>
    : public
        Basic_Arg_Traits_T<
            ::ValueSort2,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:1041

  

  template<>
  class Arg_Traits< ::MyValueTypeUnion>
    : public
        Var_Size_Arg_Traits_T<
            ::MyValueTypeUnion,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_RECVALUETYPE__ARG_TRAITS_)
#define _RECVALUETYPE__ARG_TRAITS_

  template<>
  class Arg_Traits< ::RecValueType>
    : public
        Object_Arg_Traits_T<
            ::RecValueType *,
            ::RecValueType_var,
            ::RecValueType_out,
            TAO::Value_Traits<RecValueType>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_GETSDEPRECATEDMEMBER__ARG_TRAITS_)
#define _GETSDEPRECATEDMEMBER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::GetsDeprecatedMember>
    : public
        Object_Arg_Traits_T<
            ::GetsDeprecatedMember *,
            ::GetsDeprecatedMember_var,
            ::GetsDeprecatedMember_out,
            TAO::Value_Traits<GetsDeprecatedMember>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_X_AXXX__ARG_TRAITS_)
#define _X_AXXX__ARG_TRAITS_

  template<>
  class Arg_Traits< ::X::AXXX>
    : public
        Object_Arg_Traits_T<
            ::X::AXXX *,
            ::X::AXXX_var,
            ::X::AXXX_out,
            TAO::Value_Traits<X::AXXX>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_X_BXXX__ARG_TRAITS_)
#define _X_BXXX__ARG_TRAITS_

  template<>
  class Arg_Traits< ::X::BXXX>
    : public
        Object_Arg_Traits_T<
            ::X::BXXX *,
            ::X::BXXX_var,
            ::X::BXXX_out,
            TAO::Value_Traits<X::BXXX>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::X::BSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::X::BSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MODSELECTION_SELECTIONDEFNS_CRITERION__ARG_TRAITS_)
#define _MODSELECTION_SELECTIONDEFNS_CRITERION__ARG_TRAITS_

  template<>
  class Arg_Traits< ::ModSelection::SelectionDefns::Criterion>
    : public
        Object_Arg_Traits_T<
            ::ModSelection::SelectionDefns::Criterion *,
            ::ModSelection::SelectionDefns::Criterion_var,
            ::ModSelection::SelectionDefns::Criterion_out,
            TAO::Value_Traits<ModSelection::SelectionDefns::Criterion>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MODSELECTION_SELECTIONDEFNS_CRITERIONEXPR__ARG_TRAITS_)
#define _MODSELECTION_SELECTIONDEFNS_CRITERIONEXPR__ARG_TRAITS_

  template<>
  class Arg_Traits< ::ModSelection::SelectionDefns::CriterionExpr>
    : public
        Object_Arg_Traits_T<
            ::ModSelection::SelectionDefns::CriterionExpr *,
            ::ModSelection::SelectionDefns::CriterionExpr_var,
            ::ModSelection::SelectionDefns::CriterionExpr_out,
            TAO::Value_Traits<ModSelection::SelectionDefns::CriterionExpr>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::ModSelection::SelectionDefns::CriterionExpr::RightCriterionInfos>
    : public
        Var_Size_Arg_Traits_T<
            ::ModSelection::SelectionDefns::CriterionExpr::RightCriterionInfos,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:1041

  

  template<>
  class Arg_Traits< ::ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr>
    : public
        Var_Size_Arg_Traits_T<
            ::ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export OBV_MyValueType
  : public virtual MyValueType
{

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:598

  virtual void my_string_value (char *val);
  virtual void my_string_value (const char *val);
  virtual void my_string_value (const ::CORBA::String_var &val);
  virtual const char *my_string_value () const;

public:

public:
  OBV_MyValueType () = default;
  OBV_MyValueType (
      const char * _tao_init_my_string_value
    );
  virtual ~OBV_MyValueType ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__MyValueType (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__MyValueType (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  ::TAO::String_Manager _pd_my_string_value;
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export OBV_RecValueType
  : public virtual RecValueType,
    public virtual ::CORBA::DefaultValueRefCountBase
{

protected:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:524

  virtual void rec_value_types (const RecValueType::_tao_seq_RecValueType_ &);
  virtual const RecValueType::_tao_seq_RecValueType_ &rec_value_types () const;
  virtual RecValueType::_tao_seq_RecValueType_ &rec_value_types ();

protected:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:524

  virtual void rec_value_types2 (const RecValueType::_tao_seq_RecValueType__2 &);
  virtual const RecValueType::_tao_seq_RecValueType__2 &rec_value_types2 () const;
  virtual RecValueType::_tao_seq_RecValueType__2 &rec_value_types2 ();

public:
  OBV_RecValueType () = default;
  OBV_RecValueType (
      const ::RecValueType::_tao_seq_RecValueType_ & _tao_init_rec_value_types,
      const ::RecValueType::_tao_seq_RecValueType__2 & _tao_init_rec_value_types2
    );
  virtual ~OBV_RecValueType ();

public:
  virtual ::CORBA::ValueBase *_copy_value ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__RecValueType (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__RecValueType (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  _tao_seq_RecValueType_ _pd_rec_value_types;
  _tao_seq_RecValueType__2 _pd_rec_value_types2;
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export OBV_GetsDeprecatedMember
  : public virtual GetsDeprecatedMember,
    public virtual OBV_IncludedBase
{

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:598

  virtual void StringMember (char *val);
  virtual void StringMember (const char *val);
  virtual void StringMember (const ::CORBA::String_var &val);
  virtual const char *StringMember () const;

public:
  OBV_GetsDeprecatedMember () = default;
  OBV_GetsDeprecatedMember (
      const ::IncludedBase::_tao_seq_CORBA_Long_ & _tao_init_DeprecatedMember,
      const char * _tao_init_StringMember
    );
  virtual ~OBV_GetsDeprecatedMember ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__GetsDeprecatedMember (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__GetsDeprecatedMember (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  ::TAO::String_Manager _pd_StringMember;
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_X
{
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_ModSelection
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

  namespace SelectionDefns
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

    

    // OBV_ class
    class TAO_IDL_TEST_STUB_Export CriterionExpr
      : public virtual ModSelection::SelectionDefns::CriterionExpr
    {
  
  public:
  
  public:
  
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:355

    virtual void theLeftCriterion (ModSelection::SelectionDefns::Criterion *);
    virtual ModSelection::SelectionDefns::Criterion *theLeftCriterion () const;
  
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:747

    virtual void theRightCriterionExpr (const ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr &);
    virtual const ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr &theRightCriterionExpr () const;
    virtual ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr &theRightCriterionExpr ();
  
  public:
  
  public:
  
  protected:
    CriterionExpr () = default;
    CriterionExpr (
        ::ModSelection::SelectionDefns::Criterion * _tao_init_theLeftCriterion,
        const ::ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr & _tao_init_theRightCriterionExpr
      );
    virtual ~CriterionExpr ();
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__ModSelection_SelectionDefns_CriterionExpr (TAO_OutputCDR &, TAO_ChunkInfo &) const;

    virtual ::CORBA::Boolean
    _tao_unmarshal__ModSelection_SelectionDefns_CriterionExpr (TAO_InputCDR &, TAO_ChunkInfo &);

    ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
    ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
    virtual void truncation_hook ();
  
  private:
    ModSelection::SelectionDefns::Criterion_var _pd_theLeftCriterion;
    

    ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr _pd_theRightCriterionExpr;
    CORBA::Boolean require_truncation_ {false};
  };
}
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_MYVALUETYPE__TRAITS_)
#define _MYVALUETYPE__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<MyValueType>
  {
    static void add_ref (MyValueType *);
    static void remove_ref (MyValueType *);
    static void release (MyValueType *);
  };

#endif /* end #if !defined */

#if !defined (_RECVALUETYPE__TRAITS_)
#define _RECVALUETYPE__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<RecValueType>
  {
    static void add_ref (RecValueType *);
    static void remove_ref (RecValueType *);
    static void release (RecValueType *);
  };

#endif /* end #if !defined */

#if !defined (_GETSDEPRECATEDMEMBER__TRAITS_)
#define _GETSDEPRECATEDMEMBER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<GetsDeprecatedMember>
  {
    static void add_ref (GetsDeprecatedMember *);
    static void remove_ref (GetsDeprecatedMember *);
    static void release (GetsDeprecatedMember *);
  };

#endif /* end #if !defined */

#if !defined (_X_AXXX__TRAITS_)
#define _X_AXXX__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<X::AXXX>
  {
    static void add_ref (X::AXXX *);
    static void remove_ref (X::AXXX *);
    static void release (X::AXXX *);
  };

#endif /* end #if !defined */

#if !defined (_X_BXXX__TRAITS_)
#define _X_BXXX__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<X::BXXX>
  {
    static void add_ref (X::BXXX *);
    static void remove_ref (X::BXXX *);
    static void release (X::BXXX *);
  };

#endif /* end #if !defined */

#if !defined (_MODSELECTION_SELECTIONDEFNS_CRITERION__TRAITS_)
#define _MODSELECTION_SELECTIONDEFNS_CRITERION__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<ModSelection::SelectionDefns::Criterion>
  {
    static void add_ref (ModSelection::SelectionDefns::Criterion *);
    static void remove_ref (ModSelection::SelectionDefns::Criterion *);
    static void release (ModSelection::SelectionDefns::Criterion *);
  };

#endif /* end #if !defined */

#if !defined (_MODSELECTION_SELECTIONDEFNS_CRITERIONEXPR__TRAITS_)
#define _MODSELECTION_SELECTIONDEFNS_CRITERIONEXPR__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<ModSelection::SelectionDefns::CriterionExpr>
  {
    static void add_ref (ModSelection::SelectionDefns::CriterionExpr *);
    static void remove_ref (ModSelection::SelectionDefns::CriterionExpr *);
    static void release (ModSelection::SelectionDefns::CriterionExpr *);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, MyValueType *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, MyValueType **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, MyValueType *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/any_op_ch.cpp:31


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ValueSort2);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ValueSort2 &);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const MyValueTypeUnion &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, MyValueTypeUnion*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const MyValueTypeUnion *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RecValueType *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, RecValueType **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RecValueType *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, GetsDeprecatedMember *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, GetsDeprecatedMember **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GetsDeprecatedMember *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, X::AXXX *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, X::AXXX **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, X::AXXX *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, X::BXXX *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, X::BXXX **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, X::BXXX *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::X::BSeq &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::X::BSeq*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::X::BSeq *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ModSelection::SelectionDefns::Criterion *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ModSelection::SelectionDefns::Criterion **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ModSelection::SelectionDefns::Criterion *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ModSelection::SelectionDefns::CriterionExpr *); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ModSelection::SelectionDefns::CriterionExpr **); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ModSelection::SelectionDefns::CriterionExpr *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (MyValueType *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (MyValueType *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const MyValueType *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, MyValueType *&);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/cdr_op_ch.cpp:33


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, ValueSort2 _tao_enumerator);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, ValueSort2 &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const MyValueTypeUnion &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, MyValueTypeUnion &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (RecValueType *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (RecValueType *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RecValueType *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RecValueType *&);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_RecValueType__tao_seq_RecValueType__H_
#define _TAO_CDR_OP_RecValueType__tao_seq_RecValueType__H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const RecValueType::_tao_seq_RecValueType_ &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    RecValueType::_tao_seq_RecValueType_ &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_RecValueType__tao_seq_RecValueType__H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_RecValueType__tao_seq_RecValueType__2_H_
#define _TAO_CDR_OP_RecValueType__tao_seq_RecValueType__2_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const RecValueType::_tao_seq_RecValueType__2 &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    RecValueType::_tao_seq_RecValueType__2 &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_RecValueType__tao_seq_RecValueType__2_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (GetsDeprecatedMember *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (GetsDeprecatedMember *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const GetsDeprecatedMember *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, GetsDeprecatedMember *&);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (X::AXXX *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (X::AXXX *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const X::AXXX *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, X::AXXX *&);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (X::BXXX *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (X::BXXX *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const X::BXXX *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, X::BXXX *&);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_X_BSeq_H_
#define _TAO_CDR_OP_X_BSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const X::BSeq &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    X::BSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_X_BSeq_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (ModSelection::SelectionDefns::Criterion *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (ModSelection::SelectionDefns::Criterion *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ModSelection::SelectionDefns::Criterion *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ModSelection::SelectionDefns::Criterion *&);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (ModSelection::SelectionDefns::CriterionExpr *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (ModSelection::SelectionDefns::CriterionExpr *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ModSelection::SelectionDefns::CriterionExpr *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ModSelection::SelectionDefns::CriterionExpr *&);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ModSelection::SelectionDefns::CriterionExpr::RightCriterionInfos &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ModSelection::SelectionDefns::CriterionExpr::RightCriterionInfos &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_union/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ModSelection::SelectionDefns::CriterionExpr::RightCriterionExpr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:1648

#if defined (__ACE_INLINE__)
#include "valuetypeC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

