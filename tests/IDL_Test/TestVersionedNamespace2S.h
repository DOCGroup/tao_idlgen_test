// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:454

#ifndef _TAO_IDL_TESTVERSIONEDNAMESPACE2S_5K3RBW_H_
#define _TAO_IDL_TESTVERSIONEDNAMESPACE2S_5K3RBW_H_

#include /**/ "ace/pre.h"

#include "TestVersionedNamespace2C.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
#include "tao/Messaging/AMH_Response_Handler.h"

BEGIN_USER_VERSIONED_NAMESPACE


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64




END_USER_VERSIONED_NAMESPACE


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::M1::S1>
    : public
        Fixed_Size_SArg_Traits_T<
            ::M1::S1,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_M1_LI__SARG_TRAITS_)
#define _M1_LI__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::M1::LI>
    : public Object_SArg_Traits_T<
        ::M1::LI_ptr,
        ::M1::LI_var,
        ::M1::LI_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_M1_AMH_LIEXCEPTIONHOLDER__SARG_TRAITS_)
#define _M1_AMH_LIEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::M1::AMH_LIExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::M1::AMH_LIExceptionHolder *,
            ::M1::AMH_LIExceptionHolder_var,
            ::M1::AMH_LIExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_M1_L2__SARG_TRAITS_)
#define _M1_L2__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::M1::L2>
    : public Object_SArg_Traits_T<
        ::M1::L2_ptr,
        ::M1::L2_var,
        ::M1::L2_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_M1_AMH_L2EXCEPTIONHOLDER__SARG_TRAITS_)
#define _M1_AMH_L2EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::M1::AMH_L2ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::M1::AMH_L2ExceptionHolder *,
            ::M1::AMH_L2ExceptionHolder_var,
            ::M1::AMH_L2ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::M1::X>
    : public
        Var_Size_SArg_Traits_T<
            ::M1::X,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:1041

  

  template<>
  class SArg_Traits< ::M1::BooleanUnion1>
    : public
        Var_Size_SArg_Traits_T<
            ::M1::BooleanUnion1,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:1041

  

  template<>
  class SArg_Traits< ::M1::BooleanUnion2>
    : public
        Var_Size_SArg_Traits_T<
            ::M1::BooleanUnion2,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_M1_V__SARG_TRAITS_)
#define _M1_V__SARG_TRAITS_

  template<>
  class SArg_Traits< ::M1::V>
    : public
        Object_SArg_Traits_T<
            ::M1::V *,
            ::M1::V_var,
            ::M1::V_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::M2::M3::S2>
    : public
        Fixed_Size_SArg_Traits_T<
            ::M2::M3::S2,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_M2_M3_L3__SARG_TRAITS_)
#define _M2_M3_L3__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::M2::M3::L3>
    : public Object_SArg_Traits_T<
        ::M2::M3::L3_ptr,
        ::M2::M3::L3_var,
        ::M2::M3::L3_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_M2_M3_AMH_L3EXCEPTIONHOLDER__SARG_TRAITS_)
#define _M2_M3_AMH_L3EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::M2::M3::AMH_L3ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::M2::M3::AMH_L3ExceptionHolder *,
            ::M2::M3::AMH_L3ExceptionHolder_var,
            ::M2::M3::AMH_L3ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_M2_M3_L4__SARG_TRAITS_)
#define _M2_M3_L4__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::M2::M3::L4>
    : public Object_SArg_Traits_T<
        ::M2::M3::L4_ptr,
        ::M2::M3::L4_var,
        ::M2::M3::L4_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_M2_M3_AMH_L4EXCEPTIONHOLDER__SARG_TRAITS_)
#define _M2_M3_AMH_L4EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::M2::M3::AMH_L4ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::M2::M3::AMH_L4ExceptionHolder *,
            ::M2::M3::AMH_L4ExceptionHolder_var,
            ::M2::M3::AMH_L4ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_M2_M3_V2__SARG_TRAITS_)
#define _M2_M3_V2__SARG_TRAITS_

  template<>
  class SArg_Traits< ::M2::M3::V2>
    : public
        Object_SArg_Traits_T<
            ::M2::M3::V2 *,
            ::M2::M3::V2_var,
            ::M2::M3::V2_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_M2_M3_V3__SARG_TRAITS_)
#define _M2_M3_V3__SARG_TRAITS_

  template<>
  class SArg_Traits< ::M2::M3::V3>
    : public
        Object_SArg_Traits_T<
            ::M2::M3::V3 *,
            ::M2::M3::V3_var,
            ::M2::M3::V3_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


BEGIN_USER_VERSIONED_NAMESPACE



// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_M1
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_LI;
  typedef AMH_LI *AMH_LI_ptr;

  class  AMH_LI
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_LI ();
  
  public:
    AMH_LI (const AMH_LI& rhs);
    virtual ~AMH_LI () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    M1::LI *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void op_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void op (
      M1::AMH_LIResponseHandler_ptr _tao_rh,
      const ::M1::S1 & s
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class LI;
typedef LI *LI_ptr;

class  LI
  : public virtual PortableServer::ServantBase
{
protected:
  LI ();

public:
  /// Useful for template programming.
  typedef ::M1::LI _stub_type;
  typedef ::M1::LI_ptr _stub_ptr_type;
  typedef ::M1::LI_var _stub_var_type;

  LI (const LI& rhs);
  virtual ~LI () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::M1::LI *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op (
    const ::M1::S1 & s) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_LIResponseHandler;
typedef TAO_AMH_LIResponseHandler *TAO_AMH_LIResponseHandler_ptr;

class  TAO_AMH_LIResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::M1::AMH_LIResponseHandler
{
public:
  TAO_AMH_LIResponseHandler () = default;
  virtual ~TAO_AMH_LIResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op_excep (
    ::M1::AMH_LIExceptionHolder * holder) override;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class AMH_L2;
typedef AMH_L2 *AMH_L2_ptr;

class  AMH_L2
  : public virtual PortableServer::ServantBase
{
protected:
  AMH_L2 ();

public:
  AMH_L2 (const AMH_L2& rhs);
  virtual ~AMH_L2 () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  M1::L2 *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void op_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void op (
    M1::AMH_L2ResponseHandler_ptr _tao_rh,
    const ::M1::S1 & s
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class L2;
typedef L2 *L2_ptr;

class  L2
  : public virtual PortableServer::ServantBase
{
protected:
  L2 ();

public:
  /// Useful for template programming.
  typedef ::M1::L2 _stub_type;
  typedef ::M1::L2_ptr _stub_ptr_type;
  typedef ::M1::L2_var _stub_var_type;

  L2 (const L2& rhs);
  virtual ~L2 () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::M1::L2 *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op (
    const ::M1::S1 & s) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_L2ResponseHandler;
typedef TAO_AMH_L2ResponseHandler *TAO_AMH_L2ResponseHandler_ptr;

class  TAO_AMH_L2ResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::M1::AMH_L2ResponseHandler
{
public:
  TAO_AMH_L2ResponseHandler () = default;
  virtual ~TAO_AMH_L2ResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op_excep (
    ::M1::AMH_L2ExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module M1
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_M2
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace M3
  {
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

    class AMH_L3;
    typedef AMH_L3 *AMH_L3_ptr;

    class  AMH_L3
      : public virtual PortableServer::ServantBase
    {
    protected:
      AMH_L3 ();
    
    public:
      AMH_L3 (const AMH_L3& rhs);
      virtual ~AMH_L3 () = default;


      virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

      virtual void _dispatch (
          TAO_ServerRequest &req,
          TAO::Portable_Server::Servant_Upcall *_servant_upcall);
      
      M2::M3::L3 *_this ();

    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

    static void op_skel (
        TAO_ServerRequest &_tao_req,
        TAO::Portable_Server::Servant_Upcall *_tao_obj,
        TAO_ServantBase *_tao_servant_upcall);
      
    virtual void op (
        M2::M3::AMH_L3ResponseHandler_ptr _tao_rh,
        const ::M2::M3::S2 & s
      ) = 0;
    
  };

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class L3;
  typedef L3 *L3_ptr;

  class  L3
    : public virtual PortableServer::ServantBase
  {
  protected:
    L3 ();
  
  public:
    /// Useful for template programming.
    typedef ::M2::M3::L3 _stub_type;
    typedef ::M2::M3::L3_ptr _stub_ptr_type;
    typedef ::M2::M3::L3_var _stub_var_type;

    L3 (const L3& rhs);
    virtual ~L3 () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::M2::M3::L3 *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void op (
      const ::M2::M3::S2 & s) = 0;

    static void op_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

  class TAO_AMH_L3ResponseHandler;
  typedef TAO_AMH_L3ResponseHandler *TAO_AMH_L3ResponseHandler_ptr;

  class  TAO_AMH_L3ResponseHandler
    : public TAO_AMH_Response_Handler,
      public ::M2::M3::AMH_L3ResponseHandler
  {
  public:
    TAO_AMH_L3ResponseHandler () = default;
    virtual ~TAO_AMH_L3ResponseHandler () = default;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

    void op () override;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

    void op_excep (
      ::M2::M3::AMH_L3ExceptionHolder * holder) override;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_L4;
  typedef AMH_L4 *AMH_L4_ptr;

  class  AMH_L4
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_L4 ();
  
  public:
    AMH_L4 (const AMH_L4& rhs);
    virtual ~AMH_L4 () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    M2::M3::L4 *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void op_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void op (
      M2::M3::AMH_L4ResponseHandler_ptr _tao_rh,
      const ::M2::M3::S2 & s
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class L4;
typedef L4 *L4_ptr;

class  L4
  : public virtual PortableServer::ServantBase
{
protected:
  L4 ();

public:
  /// Useful for template programming.
  typedef ::M2::M3::L4 _stub_type;
  typedef ::M2::M3::L4_ptr _stub_ptr_type;
  typedef ::M2::M3::L4_var _stub_var_type;

  L4 (const L4& rhs);
  virtual ~L4 () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::M2::M3::L4 *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op (
    const ::M2::M3::S2 & s) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_L4ResponseHandler;
typedef TAO_AMH_L4ResponseHandler *TAO_AMH_L4ResponseHandler_ptr;

class  TAO_AMH_L4ResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::M2::M3::AMH_L4ResponseHandler
{
public:
  TAO_AMH_L4ResponseHandler () = default;
  virtual ~TAO_AMH_L4ResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op_excep (
    ::M2::M3::AMH_L4ExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module M2::M3


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module M2

END_USER_VERSIONED_NAMESPACE



#include /**/ "ace/post.h"

#endif /* ifndef */

