// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:148

#ifndef _TAO_IDL_INHERITC_JOK5PT_H_
#define _TAO_IDL_INHERITC_JOK5PT_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "TAO_IDL_TEST_stub_export.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Messaging/Messaging.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 4 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_root/root_ch.cpp:155


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace OldInherit
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742

  

#if !defined (_OLDINHERIT_ONE__VAR_OUT_CH_)
#define _OLDINHERIT_ONE__VAR_OUT_CH_

  class AMI_oneHandler;
  typedef AMI_oneHandler *AMI_oneHandler_ptr;

  class one;
  using one_ptr = one*;
  using one_var = TAO_Objref_Var_T<one>;
  using one_out = TAO_Objref_Out_T<one>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

  

  class TAO_IDL_TEST_STUB_Export one
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<one>;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = one_ptr;
    using _var_type = one_var;
    using _out_type = one_out;

    static void _tao_any_destructor (void *);

    // The static operations.
    static one_ptr _duplicate (one_ptr obj);

    static void _tao_release (one_ptr obj);

    static one_ptr _narrow (::CORBA::Object_ptr obj);
    static one_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static one_ptr _nil ();

    virtual void op_one ();

    virtual void sendc_op_one (
      ::OldInherit::AMI_oneHandler_ptr ami_handler);

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    static const char* _desc_repository_id ();
    static const char* _desc_interface_name ();
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    one ();

    // Concrete non-local interface only.
    one (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    one (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = nullptr,
        TAO_ORB_Core *orb_core = nullptr);

    virtual ~one () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    one (const one &) = delete;
    one (one &&) = delete;
    one &operator= (const one &) = delete;
    one &operator= (one &&) = delete;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563

  

#if !defined (_OLDINHERIT_AMH_ONEEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _OLDINHERIT_AMH_ONEEXCEPTIONHOLDER__VAR_OUT_CH_

  class AMH_oneExceptionHolder;
  using AMH_oneExceptionHolder_var = TAO_Value_Var_T<AMH_oneExceptionHolder>;
  using AMH_oneExceptionHolder_out = TAO_Value_Out_T<AMH_oneExceptionHolder>;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49

  

  class TAO_IDL_TEST_STUB_Export AMH_oneExceptionHolder
    : public virtual ::CORBA::DefaultValueRefCountBase
  {
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    using _ptr_type = AMH_oneExceptionHolder*;
    using _var_type = AMH_oneExceptionHolder_var;
    using _out_type = AMH_oneExceptionHolder_out;

    static void _tao_any_destructor (void *);

    AMH_oneExceptionHolder (::CORBA::Exception *ex)
      : exception (ex)
    {}

    virtual ~AMH_oneExceptionHolder ();
    virtual ::CORBA::ValueBase *_copy_value ();

    static AMH_oneExceptionHolder* _downcast (::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        AMH_oneExceptionHolder *&new_object);
    
    virtual const char* _tao_obv_repository_id () const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id ();

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  
  public:
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

    
  public:
    virtual void raise_op_one ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op_one ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_oneExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_oneExceptionHolder (const AMH_oneExceptionHolder &);
  void operator= (const AMH_oneExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldInherit_AMH_oneExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldInherit_AMH_oneExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_AMH_ONERESPONSEHANDLER__VAR_OUT_CH_)
#define _OLDINHERIT_AMH_ONERESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_oneResponseHandlerHandler;
typedef AMI_AMH_oneResponseHandlerHandler *AMI_AMH_oneResponseHandlerHandler_ptr;

class AMH_oneResponseHandler;
using AMH_oneResponseHandler_ptr = AMH_oneResponseHandler*;
using AMH_oneResponseHandler_var = TAO_Objref_Var_T<AMH_oneResponseHandler>;
using AMH_oneResponseHandler_out = TAO_Objref_Out_T<AMH_oneResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_oneResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_oneResponseHandler_ptr;
  using _var_type = AMH_oneResponseHandler_var;
  using _out_type = AMH_oneResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_oneResponseHandler_ptr _duplicate (AMH_oneResponseHandler_ptr obj);

  static void _tao_release (AMH_oneResponseHandler_ptr obj);

  static AMH_oneResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_oneResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_oneResponseHandler_ptr _nil ();

  virtual void op_one () = 0;

  virtual void op_one_excep (
    ::OldInherit::AMH_oneExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_oneResponseHandler ();

  

  virtual ~AMH_oneResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_oneResponseHandler (const AMH_oneResponseHandler &) = delete;
  AMH_oneResponseHandler (AMH_oneResponseHandler &&) = delete;
  AMH_oneResponseHandler &operator= (const AMH_oneResponseHandler &) = delete;
  AMH_oneResponseHandler &operator= (AMH_oneResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_AMI_ONEHANDLER__VAR_OUT_CH_)
#define _OLDINHERIT_AMI_ONEHANDLER__VAR_OUT_CH_

class AMI_oneHandler;
using AMI_oneHandler_ptr = AMI_oneHandler*;
using AMI_oneHandler_var = TAO_Objref_Var_T<AMI_oneHandler>;
using AMI_oneHandler_out = TAO_Objref_Out_T<AMI_oneHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_oneHandler
  : public virtual ::Messaging::ReplyHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_oneHandler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_oneHandler_ptr;
  using _var_type = AMI_oneHandler_var;
  using _out_type = AMI_oneHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_oneHandler_ptr _duplicate (AMI_oneHandler_ptr obj);

  static void _tao_release (AMI_oneHandler_ptr obj);

  static AMI_oneHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_oneHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_oneHandler_ptr _nil ();

  virtual void op_one ();

  static void
  op_one_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op_one_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_oneHandler ();

  // Concrete non-local interface only.
  AMI_oneHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_oneHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_oneHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_oneHandler (const AMI_oneHandler &) = delete;
  AMI_oneHandler (AMI_oneHandler &&) = delete;
  AMI_oneHandler &operator= (const AMI_oneHandler &) = delete;
  AMI_oneHandler &operator= (AMI_oneHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_TWO__VAR_OUT_CH_)
#define _OLDINHERIT_TWO__VAR_OUT_CH_

class AMI_twoHandler;
typedef AMI_twoHandler *AMI_twoHandler_ptr;

class two;
using two_ptr = two*;
using two_var = TAO_Objref_Var_T<two>;
using two_out = TAO_Objref_Out_T<two>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export two
  : public virtual ::OldInherit::one

{
public:
  friend class TAO::Narrow_Utils<two>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = two_ptr;
  using _var_type = two_var;
  using _out_type = two_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static two_ptr _duplicate (two_ptr obj);

  static void _tao_release (two_ptr obj);

  static two_ptr _narrow (::CORBA::Object_ptr obj);
  static two_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static two_ptr _nil ();

  virtual void op_two ();

  virtual void sendc_op_two (
    ::OldInherit::AMI_twoHandler_ptr ami_handler);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  two ();

  // Concrete non-local interface only.
  two (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  two (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~two () = default;

private:
  // Private and unimplemented for concrete interfaces.
  two (const two &) = delete;
  two (two &&) = delete;
  two &operator= (const two &) = delete;
  two &operator= (two &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_OLDINHERIT_AMH_TWOEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _OLDINHERIT_AMH_TWOEXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_twoExceptionHolder;
using AMH_twoExceptionHolder_var = TAO_Value_Var_T<AMH_twoExceptionHolder>;
using AMH_twoExceptionHolder_out = TAO_Value_Out_T<AMH_twoExceptionHolder>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export AMH_twoExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_twoExceptionHolder*;
  using _var_type = AMH_twoExceptionHolder_var;
  using _out_type = AMH_twoExceptionHolder_out;

  static void _tao_any_destructor (void *);

  AMH_twoExceptionHolder (::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_twoExceptionHolder ();
  virtual ::CORBA::ValueBase *_copy_value ();

  static AMH_twoExceptionHolder* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_twoExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op_two ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op_two ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_twoExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_twoExceptionHolder (const AMH_twoExceptionHolder &);
  void operator= (const AMH_twoExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldInherit_AMH_twoExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldInherit_AMH_twoExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_AMH_TWORESPONSEHANDLER__VAR_OUT_CH_)
#define _OLDINHERIT_AMH_TWORESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_twoResponseHandlerHandler;
typedef AMI_AMH_twoResponseHandlerHandler *AMI_AMH_twoResponseHandlerHandler_ptr;

class AMH_twoResponseHandler;
using AMH_twoResponseHandler_ptr = AMH_twoResponseHandler*;
using AMH_twoResponseHandler_var = TAO_Objref_Var_T<AMH_twoResponseHandler>;
using AMH_twoResponseHandler_out = TAO_Objref_Out_T<AMH_twoResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_twoResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_twoResponseHandler_ptr;
  using _var_type = AMH_twoResponseHandler_var;
  using _out_type = AMH_twoResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_twoResponseHandler_ptr _duplicate (AMH_twoResponseHandler_ptr obj);

  static void _tao_release (AMH_twoResponseHandler_ptr obj);

  static AMH_twoResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_twoResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_twoResponseHandler_ptr _nil ();

  virtual void op_two () = 0;

  virtual void op_two_excep (
    ::OldInherit::AMH_twoExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_twoResponseHandler ();

  

  virtual ~AMH_twoResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_twoResponseHandler (const AMH_twoResponseHandler &) = delete;
  AMH_twoResponseHandler (AMH_twoResponseHandler &&) = delete;
  AMH_twoResponseHandler &operator= (const AMH_twoResponseHandler &) = delete;
  AMH_twoResponseHandler &operator= (AMH_twoResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_AMI_TWOHANDLER__VAR_OUT_CH_)
#define _OLDINHERIT_AMI_TWOHANDLER__VAR_OUT_CH_

class AMI_twoHandler;
using AMI_twoHandler_ptr = AMI_twoHandler*;
using AMI_twoHandler_var = TAO_Objref_Var_T<AMI_twoHandler>;
using AMI_twoHandler_out = TAO_Objref_Out_T<AMI_twoHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_twoHandler
  : public virtual ::OldInherit::AMI_oneHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_twoHandler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_twoHandler_ptr;
  using _var_type = AMI_twoHandler_var;
  using _out_type = AMI_twoHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_twoHandler_ptr _duplicate (AMI_twoHandler_ptr obj);

  static void _tao_release (AMI_twoHandler_ptr obj);

  static AMI_twoHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_twoHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_twoHandler_ptr _nil ();

  virtual void op_two ();

  static void
  op_two_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op_two_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_twoHandler ();

  // Concrete non-local interface only.
  AMI_twoHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_twoHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_twoHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_twoHandler (const AMI_twoHandler &) = delete;
  AMI_twoHandler (AMI_twoHandler &&) = delete;
  AMI_twoHandler &operator= (const AMI_twoHandler &) = delete;
  AMI_twoHandler &operator= (AMI_twoHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_THREE__VAR_OUT_CH_)
#define _OLDINHERIT_THREE__VAR_OUT_CH_

class AMI_threeHandler;
typedef AMI_threeHandler *AMI_threeHandler_ptr;

class three;
using three_ptr = three*;
using three_var = TAO_Objref_Var_T<three>;
using three_out = TAO_Objref_Out_T<three>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export three
  : public virtual ::OldInherit::one

{
public:
  friend class TAO::Narrow_Utils<three>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = three_ptr;
  using _var_type = three_var;
  using _out_type = three_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static three_ptr _duplicate (three_ptr obj);

  static void _tao_release (three_ptr obj);

  static three_ptr _narrow (::CORBA::Object_ptr obj);
  static three_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static three_ptr _nil ();

  virtual void op_three ();

  virtual void sendc_op_three (
    ::OldInherit::AMI_threeHandler_ptr ami_handler);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  three ();

  // Concrete non-local interface only.
  three (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  three (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~three () = default;

private:
  // Private and unimplemented for concrete interfaces.
  three (const three &) = delete;
  three (three &&) = delete;
  three &operator= (const three &) = delete;
  three &operator= (three &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_OLDINHERIT_AMH_THREEEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _OLDINHERIT_AMH_THREEEXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_threeExceptionHolder;
using AMH_threeExceptionHolder_var = TAO_Value_Var_T<AMH_threeExceptionHolder>;
using AMH_threeExceptionHolder_out = TAO_Value_Out_T<AMH_threeExceptionHolder>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export AMH_threeExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_threeExceptionHolder*;
  using _var_type = AMH_threeExceptionHolder_var;
  using _out_type = AMH_threeExceptionHolder_out;

  static void _tao_any_destructor (void *);

  AMH_threeExceptionHolder (::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_threeExceptionHolder ();
  virtual ::CORBA::ValueBase *_copy_value ();

  static AMH_threeExceptionHolder* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_threeExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op_three ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op_three ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_threeExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_threeExceptionHolder (const AMH_threeExceptionHolder &);
  void operator= (const AMH_threeExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldInherit_AMH_threeExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldInherit_AMH_threeExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_AMH_THREERESPONSEHANDLER__VAR_OUT_CH_)
#define _OLDINHERIT_AMH_THREERESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_threeResponseHandlerHandler;
typedef AMI_AMH_threeResponseHandlerHandler *AMI_AMH_threeResponseHandlerHandler_ptr;

class AMH_threeResponseHandler;
using AMH_threeResponseHandler_ptr = AMH_threeResponseHandler*;
using AMH_threeResponseHandler_var = TAO_Objref_Var_T<AMH_threeResponseHandler>;
using AMH_threeResponseHandler_out = TAO_Objref_Out_T<AMH_threeResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_threeResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_threeResponseHandler_ptr;
  using _var_type = AMH_threeResponseHandler_var;
  using _out_type = AMH_threeResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_threeResponseHandler_ptr _duplicate (AMH_threeResponseHandler_ptr obj);

  static void _tao_release (AMH_threeResponseHandler_ptr obj);

  static AMH_threeResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_threeResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_threeResponseHandler_ptr _nil ();

  virtual void op_three () = 0;

  virtual void op_three_excep (
    ::OldInherit::AMH_threeExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_threeResponseHandler ();

  

  virtual ~AMH_threeResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_threeResponseHandler (const AMH_threeResponseHandler &) = delete;
  AMH_threeResponseHandler (AMH_threeResponseHandler &&) = delete;
  AMH_threeResponseHandler &operator= (const AMH_threeResponseHandler &) = delete;
  AMH_threeResponseHandler &operator= (AMH_threeResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_AMI_THREEHANDLER__VAR_OUT_CH_)
#define _OLDINHERIT_AMI_THREEHANDLER__VAR_OUT_CH_

class AMI_threeHandler;
using AMI_threeHandler_ptr = AMI_threeHandler*;
using AMI_threeHandler_var = TAO_Objref_Var_T<AMI_threeHandler>;
using AMI_threeHandler_out = TAO_Objref_Out_T<AMI_threeHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_threeHandler
  : public virtual ::OldInherit::AMI_oneHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_threeHandler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_threeHandler_ptr;
  using _var_type = AMI_threeHandler_var;
  using _out_type = AMI_threeHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_threeHandler_ptr _duplicate (AMI_threeHandler_ptr obj);

  static void _tao_release (AMI_threeHandler_ptr obj);

  static AMI_threeHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_threeHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_threeHandler_ptr _nil ();

  virtual void op_three ();

  static void
  op_three_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op_three_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_threeHandler ();

  // Concrete non-local interface only.
  AMI_threeHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_threeHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_threeHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_threeHandler (const AMI_threeHandler &) = delete;
  AMI_threeHandler (AMI_threeHandler &&) = delete;
  AMI_threeHandler &operator= (const AMI_threeHandler &) = delete;
  AMI_threeHandler &operator= (AMI_threeHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_FOUR__VAR_OUT_CH_)
#define _OLDINHERIT_FOUR__VAR_OUT_CH_

class AMI_fourHandler;
typedef AMI_fourHandler *AMI_fourHandler_ptr;

class four;
using four_ptr = four*;
using four_var = TAO_Objref_Var_T<four>;
using four_out = TAO_Objref_Out_T<four>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export four
  : public virtual ::OldInherit::two,
    public virtual ::OldInherit::three

{
public:
  friend class TAO::Narrow_Utils<four>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = four_ptr;
  using _var_type = four_var;
  using _out_type = four_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static four_ptr _duplicate (four_ptr obj);

  static void _tao_release (four_ptr obj);

  static four_ptr _narrow (::CORBA::Object_ptr obj);
  static four_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static four_ptr _nil ();

  virtual void op_four ();

  virtual void sendc_op_four (
    ::OldInherit::AMI_fourHandler_ptr ami_handler);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  four ();

  // Concrete non-local interface only.
  four (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  four (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~four () = default;

private:
  // Private and unimplemented for concrete interfaces.
  four (const four &) = delete;
  four (four &&) = delete;
  four &operator= (const four &) = delete;
  four &operator= (four &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_OLDINHERIT_AMH_FOUREXCEPTIONHOLDER__VAR_OUT_CH_)
#define _OLDINHERIT_AMH_FOUREXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_fourExceptionHolder;
using AMH_fourExceptionHolder_var = TAO_Value_Var_T<AMH_fourExceptionHolder>;
using AMH_fourExceptionHolder_out = TAO_Value_Out_T<AMH_fourExceptionHolder>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export AMH_fourExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_fourExceptionHolder*;
  using _var_type = AMH_fourExceptionHolder_var;
  using _out_type = AMH_fourExceptionHolder_out;

  static void _tao_any_destructor (void *);

  AMH_fourExceptionHolder (::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_fourExceptionHolder ();
  virtual ::CORBA::ValueBase *_copy_value ();

  static AMH_fourExceptionHolder* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_fourExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op_four ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op_four ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_fourExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_fourExceptionHolder (const AMH_fourExceptionHolder &);
  void operator= (const AMH_fourExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldInherit_AMH_fourExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldInherit_AMH_fourExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_AMH_FOURRESPONSEHANDLER__VAR_OUT_CH_)
#define _OLDINHERIT_AMH_FOURRESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_fourResponseHandlerHandler;
typedef AMI_AMH_fourResponseHandlerHandler *AMI_AMH_fourResponseHandlerHandler_ptr;

class AMH_fourResponseHandler;
using AMH_fourResponseHandler_ptr = AMH_fourResponseHandler*;
using AMH_fourResponseHandler_var = TAO_Objref_Var_T<AMH_fourResponseHandler>;
using AMH_fourResponseHandler_out = TAO_Objref_Out_T<AMH_fourResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_fourResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_fourResponseHandler_ptr;
  using _var_type = AMH_fourResponseHandler_var;
  using _out_type = AMH_fourResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_fourResponseHandler_ptr _duplicate (AMH_fourResponseHandler_ptr obj);

  static void _tao_release (AMH_fourResponseHandler_ptr obj);

  static AMH_fourResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_fourResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_fourResponseHandler_ptr _nil ();

  virtual void op_four () = 0;

  virtual void op_four_excep (
    ::OldInherit::AMH_fourExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_fourResponseHandler ();

  

  virtual ~AMH_fourResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_fourResponseHandler (const AMH_fourResponseHandler &) = delete;
  AMH_fourResponseHandler (AMH_fourResponseHandler &&) = delete;
  AMH_fourResponseHandler &operator= (const AMH_fourResponseHandler &) = delete;
  AMH_fourResponseHandler &operator= (AMH_fourResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_AMI_FOURHANDLER__VAR_OUT_CH_)
#define _OLDINHERIT_AMI_FOURHANDLER__VAR_OUT_CH_

class AMI_fourHandler;
using AMI_fourHandler_ptr = AMI_fourHandler*;
using AMI_fourHandler_var = TAO_Objref_Var_T<AMI_fourHandler>;
using AMI_fourHandler_out = TAO_Objref_Out_T<AMI_fourHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_fourHandler
  : public virtual ::OldInherit::AMI_twoHandler,
    public virtual ::OldInherit::AMI_threeHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_fourHandler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_fourHandler_ptr;
  using _var_type = AMI_fourHandler_var;
  using _out_type = AMI_fourHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_fourHandler_ptr _duplicate (AMI_fourHandler_ptr obj);

  static void _tao_release (AMI_fourHandler_ptr obj);

  static AMI_fourHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_fourHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_fourHandler_ptr _nil ();

  virtual void op_four ();

  static void
  op_four_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op_four_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_fourHandler ();

  // Concrete non-local interface only.
  AMI_fourHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_fourHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_fourHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_fourHandler (const AMI_fourHandler &) = delete;
  AMI_fourHandler (AMI_fourHandler &&) = delete;
  AMI_fourHandler &operator= (const AMI_fourHandler &) = delete;
  AMI_fourHandler &operator= (AMI_fourHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_FIVE__VAR_OUT_CH_)
#define _OLDINHERIT_FIVE__VAR_OUT_CH_

class AMI_fiveHandler;
typedef AMI_fiveHandler *AMI_fiveHandler_ptr;

class five;
using five_ptr = five*;
using five_var = TAO_Objref_Var_T<five>;
using five_out = TAO_Objref_Out_T<five>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export five
  : public virtual ::OldInherit::four,
    public virtual ::OldInherit::three,
    public virtual ::OldInherit::two

{
public:
  friend class TAO::Narrow_Utils<five>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = five_ptr;
  using _var_type = five_var;
  using _out_type = five_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static five_ptr _duplicate (five_ptr obj);

  static void _tao_release (five_ptr obj);

  static five_ptr _narrow (::CORBA::Object_ptr obj);
  static five_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static five_ptr _nil ();

  virtual void op_five ();

  virtual void sendc_op_five (
    ::OldInherit::AMI_fiveHandler_ptr ami_handler);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  five ();

  // Concrete non-local interface only.
  five (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  five (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~five () = default;

private:
  // Private and unimplemented for concrete interfaces.
  five (const five &) = delete;
  five (five &&) = delete;
  five &operator= (const five &) = delete;
  five &operator= (five &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:563



#if !defined (_OLDINHERIT_AMH_FIVEEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _OLDINHERIT_AMH_FIVEEXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_fiveExceptionHolder;
using AMH_fiveExceptionHolder_var = TAO_Value_Var_T<AMH_fiveExceptionHolder>;
using AMH_fiveExceptionHolder_out = TAO_Value_Out_T<AMH_fiveExceptionHolder>;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:49



class TAO_IDL_TEST_STUB_Export AMH_fiveExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_fiveExceptionHolder*;
  using _var_type = AMH_fiveExceptionHolder_var;
  using _out_type = AMH_fiveExceptionHolder_out;

  static void _tao_any_destructor (void *);

  AMH_fiveExceptionHolder (::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_fiveExceptionHolder ();
  virtual ::CORBA::ValueBase *_copy_value ();

  static AMH_fiveExceptionHolder* _downcast (::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_fiveExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id () const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id ();

  virtual ::CORBA::TypeCode_ptr _tao_type () const;

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_op_five ();

public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:397

  
public:
  virtual void raise_sendc_op_five ();
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:236



protected:
  AMH_fiveExceptionHolder ();
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t) const;
  
private:
  AMH_fiveExceptionHolder (const AMH_fiveExceptionHolder &);
  void operator= (const AMH_fiveExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldInherit_AMH_fiveExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldInherit_AMH_fiveExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_AMH_FIVERESPONSEHANDLER__VAR_OUT_CH_)
#define _OLDINHERIT_AMH_FIVERESPONSEHANDLER__VAR_OUT_CH_

class AMI_AMH_fiveResponseHandlerHandler;
typedef AMI_AMH_fiveResponseHandlerHandler *AMI_AMH_fiveResponseHandlerHandler_ptr;

class AMH_fiveResponseHandler;
using AMH_fiveResponseHandler_ptr = AMH_fiveResponseHandler*;
using AMH_fiveResponseHandler_var = TAO_Objref_Var_T<AMH_fiveResponseHandler>;
using AMH_fiveResponseHandler_out = TAO_Objref_Out_T<AMH_fiveResponseHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMH_fiveResponseHandler
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMH_fiveResponseHandler_ptr;
  using _var_type = AMH_fiveResponseHandler_var;
  using _out_type = AMH_fiveResponseHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_fiveResponseHandler_ptr _duplicate (AMH_fiveResponseHandler_ptr obj);

  static void _tao_release (AMH_fiveResponseHandler_ptr obj);

  static AMH_fiveResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_fiveResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_fiveResponseHandler_ptr _nil ();

  virtual void op_five () = 0;

  virtual void op_five_excep (
    ::OldInherit::AMH_fiveExceptionHolder * holder) = 0;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_fiveResponseHandler ();

  

  virtual ~AMH_fiveResponseHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMH_fiveResponseHandler (const AMH_fiveResponseHandler &) = delete;
  AMH_fiveResponseHandler (AMH_fiveResponseHandler &&) = delete;
  AMH_fiveResponseHandler &operator= (const AMH_fiveResponseHandler &) = delete;
  AMH_fiveResponseHandler &operator= (AMH_fiveResponseHandler &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_OLDINHERIT_AMI_FIVEHANDLER__VAR_OUT_CH_)
#define _OLDINHERIT_AMI_FIVEHANDLER__VAR_OUT_CH_

class AMI_fiveHandler;
using AMI_fiveHandler_ptr = AMI_fiveHandler*;
using AMI_fiveHandler_var = TAO_Objref_Var_T<AMI_fiveHandler>;
using AMI_fiveHandler_out = TAO_Objref_Out_T<AMI_fiveHandler>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export AMI_fiveHandler
  : public virtual ::OldInherit::AMI_fourHandler,
    public virtual ::OldInherit::AMI_threeHandler,
    public virtual ::OldInherit::AMI_twoHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_fiveHandler>;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = AMI_fiveHandler_ptr;
  using _var_type = AMI_fiveHandler_var;
  using _out_type = AMI_fiveHandler_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_fiveHandler_ptr _duplicate (AMI_fiveHandler_ptr obj);

  static void _tao_release (AMI_fiveHandler_ptr obj);

  static AMI_fiveHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_fiveHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_fiveHandler_ptr _nil ();

  virtual void op_five ();

  static void
  op_five_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void op_five_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_fiveHandler ();

  // Concrete non-local interface only.
  AMI_fiveHandler (::IOP::IOR *ior, TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_fiveHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = nullptr,
      TAO_ORB_Core *orb_core = nullptr);

  virtual ~AMI_fiveHandler () = default;

private:
  // Private and unimplemented for concrete interfaces.
  AMI_fiveHandler (const AMI_fiveHandler &) = delete;
  AMI_fiveHandler (AMI_fiveHandler &&) = delete;
  AMI_fiveHandler &operator= (const AMI_fiveHandler &) = delete;
  AMI_fiveHandler &operator= (AMI_fiveHandler &&) = delete;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module OldInherit
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Value_Traits<Messaging::ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDINHERIT_ONE__ARG_TRAITS_)
#define _OLDINHERIT_ONE__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldInherit::one>
    : public Object_Arg_Traits_T<
        ::OldInherit::one_ptr,
        ::OldInherit::one_var,
        ::OldInherit::one_out,
        TAO::Objref_Traits<OldInherit::one>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_OLDINHERIT_AMH_ONEEXCEPTIONHOLDER__ARG_TRAITS_)
#define _OLDINHERIT_AMH_ONEEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OldInherit::AMH_oneExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::OldInherit::AMH_oneExceptionHolder *,
            ::OldInherit::AMH_oneExceptionHolder_var,
            ::OldInherit::AMH_oneExceptionHolder_out,
            TAO::Value_Traits<OldInherit::AMH_oneExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDINHERIT_AMI_ONEHANDLER__ARG_TRAITS_)
#define _OLDINHERIT_AMI_ONEHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldInherit::AMI_oneHandler>
    : public Object_Arg_Traits_T<
        ::OldInherit::AMI_oneHandler_ptr,
        ::OldInherit::AMI_oneHandler_var,
        ::OldInherit::AMI_oneHandler_out,
        TAO::Objref_Traits<OldInherit::AMI_oneHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDINHERIT_TWO__ARG_TRAITS_)
#define _OLDINHERIT_TWO__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldInherit::two>
    : public Object_Arg_Traits_T<
        ::OldInherit::two_ptr,
        ::OldInherit::two_var,
        ::OldInherit::two_out,
        TAO::Objref_Traits<OldInherit::two>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_OLDINHERIT_AMH_TWOEXCEPTIONHOLDER__ARG_TRAITS_)
#define _OLDINHERIT_AMH_TWOEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OldInherit::AMH_twoExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::OldInherit::AMH_twoExceptionHolder *,
            ::OldInherit::AMH_twoExceptionHolder_var,
            ::OldInherit::AMH_twoExceptionHolder_out,
            TAO::Value_Traits<OldInherit::AMH_twoExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDINHERIT_AMI_TWOHANDLER__ARG_TRAITS_)
#define _OLDINHERIT_AMI_TWOHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldInherit::AMI_twoHandler>
    : public Object_Arg_Traits_T<
        ::OldInherit::AMI_twoHandler_ptr,
        ::OldInherit::AMI_twoHandler_var,
        ::OldInherit::AMI_twoHandler_out,
        TAO::Objref_Traits<OldInherit::AMI_twoHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDINHERIT_THREE__ARG_TRAITS_)
#define _OLDINHERIT_THREE__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldInherit::three>
    : public Object_Arg_Traits_T<
        ::OldInherit::three_ptr,
        ::OldInherit::three_var,
        ::OldInherit::three_out,
        TAO::Objref_Traits<OldInherit::three>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_OLDINHERIT_AMH_THREEEXCEPTIONHOLDER__ARG_TRAITS_)
#define _OLDINHERIT_AMH_THREEEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OldInherit::AMH_threeExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::OldInherit::AMH_threeExceptionHolder *,
            ::OldInherit::AMH_threeExceptionHolder_var,
            ::OldInherit::AMH_threeExceptionHolder_out,
            TAO::Value_Traits<OldInherit::AMH_threeExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDINHERIT_AMI_THREEHANDLER__ARG_TRAITS_)
#define _OLDINHERIT_AMI_THREEHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldInherit::AMI_threeHandler>
    : public Object_Arg_Traits_T<
        ::OldInherit::AMI_threeHandler_ptr,
        ::OldInherit::AMI_threeHandler_var,
        ::OldInherit::AMI_threeHandler_out,
        TAO::Objref_Traits<OldInherit::AMI_threeHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDINHERIT_FOUR__ARG_TRAITS_)
#define _OLDINHERIT_FOUR__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldInherit::four>
    : public Object_Arg_Traits_T<
        ::OldInherit::four_ptr,
        ::OldInherit::four_var,
        ::OldInherit::four_out,
        TAO::Objref_Traits<OldInherit::four>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_OLDINHERIT_AMH_FOUREXCEPTIONHOLDER__ARG_TRAITS_)
#define _OLDINHERIT_AMH_FOUREXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OldInherit::AMH_fourExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::OldInherit::AMH_fourExceptionHolder *,
            ::OldInherit::AMH_fourExceptionHolder_var,
            ::OldInherit::AMH_fourExceptionHolder_out,
            TAO::Value_Traits<OldInherit::AMH_fourExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDINHERIT_AMI_FOURHANDLER__ARG_TRAITS_)
#define _OLDINHERIT_AMI_FOURHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldInherit::AMI_fourHandler>
    : public Object_Arg_Traits_T<
        ::OldInherit::AMI_fourHandler_ptr,
        ::OldInherit::AMI_fourHandler_var,
        ::OldInherit::AMI_fourHandler_out,
        TAO::Objref_Traits<OldInherit::AMI_fourHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDINHERIT_FIVE__ARG_TRAITS_)
#define _OLDINHERIT_FIVE__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldInherit::five>
    : public Object_Arg_Traits_T<
        ::OldInherit::five_ptr,
        ::OldInherit::five_var,
        ::OldInherit::five_out,
        TAO::Objref_Traits<OldInherit::five>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_OLDINHERIT_AMH_FIVEEXCEPTIONHOLDER__ARG_TRAITS_)
#define _OLDINHERIT_AMH_FIVEEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OldInherit::AMH_fiveExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::OldInherit::AMH_fiveExceptionHolder *,
            ::OldInherit::AMH_fiveExceptionHolder_var,
            ::OldInherit::AMH_fiveExceptionHolder_out,
            TAO::Value_Traits<OldInherit::AMH_fiveExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OLDINHERIT_AMI_FIVEHANDLER__ARG_TRAITS_)
#define _OLDINHERIT_AMI_FIVEHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OldInherit::AMI_fiveHandler>
    : public Object_Arg_Traits_T<
        ::OldInherit::AMI_fiveHandler_ptr,
        ::OldInherit::AMI_fiveHandler_var,
        ::OldInherit::AMI_fiveHandler_out,
        TAO::Objref_Traits<OldInherit::AMI_fiveHandler>,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:43

namespace OBV_OldInherit
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43

  

  // OBV_ class
  class TAO_IDL_TEST_STUB_Export AMH_oneExceptionHolder
    : public virtual OldInherit::AMH_oneExceptionHolder
  {

protected:
  AMH_oneExceptionHolder () = default;
  virtual ~AMH_oneExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldInherit_AMH_oneExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldInherit_AMH_oneExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export AMH_twoExceptionHolder
  : public virtual OldInherit::AMH_twoExceptionHolder
{

protected:
  AMH_twoExceptionHolder () = default;
  virtual ~AMH_twoExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldInherit_AMH_twoExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldInherit_AMH_twoExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export AMH_threeExceptionHolder
  : public virtual OldInherit::AMH_threeExceptionHolder
{

protected:
  AMH_threeExceptionHolder () = default;
  virtual ~AMH_threeExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldInherit_AMH_threeExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldInherit_AMH_threeExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export AMH_fourExceptionHolder
  : public virtual OldInherit::AMH_fourExceptionHolder
{

protected:
  AMH_fourExceptionHolder () = default;
  virtual ~AMH_fourExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldInherit_AMH_fourExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldInherit_AMH_fourExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:43



// OBV_ class
class TAO_IDL_TEST_STUB_Export AMH_fiveExceptionHolder
  : public virtual OldInherit::AMH_fiveExceptionHolder
{

protected:
  AMH_fiveExceptionHolder () = default;
  virtual ~AMH_fiveExceptionHolder ();
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OldInherit_AMH_fiveExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OldInherit_AMH_fiveExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook ();

private:
  CORBA::Boolean require_truncation_ {false};
};
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_OLDINHERIT_ONE__TRAITS_)
#define _OLDINHERIT_ONE__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::one>
  {
    static ::OldInherit::one_ptr duplicate (::OldInherit::one_ptr p);
    static void release (::OldInherit::one_ptr p);
    static ::OldInherit::one_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::one_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMH_ONEEXCEPTIONHOLDER__TRAITS_)
#define _OLDINHERIT_AMH_ONEEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<OldInherit::AMH_oneExceptionHolder>
  {
    static void add_ref (OldInherit::AMH_oneExceptionHolder *);
    static void remove_ref (OldInherit::AMH_oneExceptionHolder *);
    static void release (OldInherit::AMH_oneExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMH_ONERESPONSEHANDLER__TRAITS_)
#define _OLDINHERIT_AMH_ONERESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::AMH_oneResponseHandler>
  {
    static ::OldInherit::AMH_oneResponseHandler_ptr duplicate (::OldInherit::AMH_oneResponseHandler_ptr p);
    static void release (::OldInherit::AMH_oneResponseHandler_ptr p);
    static ::OldInherit::AMH_oneResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::AMH_oneResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMI_ONEHANDLER__TRAITS_)
#define _OLDINHERIT_AMI_ONEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::AMI_oneHandler>
  {
    static ::OldInherit::AMI_oneHandler_ptr duplicate (::OldInherit::AMI_oneHandler_ptr p);
    static void release (::OldInherit::AMI_oneHandler_ptr p);
    static ::OldInherit::AMI_oneHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::AMI_oneHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_TWO__TRAITS_)
#define _OLDINHERIT_TWO__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::two>
  {
    static ::OldInherit::two_ptr duplicate (::OldInherit::two_ptr p);
    static void release (::OldInherit::two_ptr p);
    static ::OldInherit::two_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::two_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMH_TWOEXCEPTIONHOLDER__TRAITS_)
#define _OLDINHERIT_AMH_TWOEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<OldInherit::AMH_twoExceptionHolder>
  {
    static void add_ref (OldInherit::AMH_twoExceptionHolder *);
    static void remove_ref (OldInherit::AMH_twoExceptionHolder *);
    static void release (OldInherit::AMH_twoExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMH_TWORESPONSEHANDLER__TRAITS_)
#define _OLDINHERIT_AMH_TWORESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::AMH_twoResponseHandler>
  {
    static ::OldInherit::AMH_twoResponseHandler_ptr duplicate (::OldInherit::AMH_twoResponseHandler_ptr p);
    static void release (::OldInherit::AMH_twoResponseHandler_ptr p);
    static ::OldInherit::AMH_twoResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::AMH_twoResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMI_TWOHANDLER__TRAITS_)
#define _OLDINHERIT_AMI_TWOHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::AMI_twoHandler>
  {
    static ::OldInherit::AMI_twoHandler_ptr duplicate (::OldInherit::AMI_twoHandler_ptr p);
    static void release (::OldInherit::AMI_twoHandler_ptr p);
    static ::OldInherit::AMI_twoHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::AMI_twoHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_THREE__TRAITS_)
#define _OLDINHERIT_THREE__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::three>
  {
    static ::OldInherit::three_ptr duplicate (::OldInherit::three_ptr p);
    static void release (::OldInherit::three_ptr p);
    static ::OldInherit::three_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::three_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMH_THREEEXCEPTIONHOLDER__TRAITS_)
#define _OLDINHERIT_AMH_THREEEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<OldInherit::AMH_threeExceptionHolder>
  {
    static void add_ref (OldInherit::AMH_threeExceptionHolder *);
    static void remove_ref (OldInherit::AMH_threeExceptionHolder *);
    static void release (OldInherit::AMH_threeExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMH_THREERESPONSEHANDLER__TRAITS_)
#define _OLDINHERIT_AMH_THREERESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::AMH_threeResponseHandler>
  {
    static ::OldInherit::AMH_threeResponseHandler_ptr duplicate (::OldInherit::AMH_threeResponseHandler_ptr p);
    static void release (::OldInherit::AMH_threeResponseHandler_ptr p);
    static ::OldInherit::AMH_threeResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::AMH_threeResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMI_THREEHANDLER__TRAITS_)
#define _OLDINHERIT_AMI_THREEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::AMI_threeHandler>
  {
    static ::OldInherit::AMI_threeHandler_ptr duplicate (::OldInherit::AMI_threeHandler_ptr p);
    static void release (::OldInherit::AMI_threeHandler_ptr p);
    static ::OldInherit::AMI_threeHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::AMI_threeHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_FOUR__TRAITS_)
#define _OLDINHERIT_FOUR__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::four>
  {
    static ::OldInherit::four_ptr duplicate (::OldInherit::four_ptr p);
    static void release (::OldInherit::four_ptr p);
    static ::OldInherit::four_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::four_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMH_FOUREXCEPTIONHOLDER__TRAITS_)
#define _OLDINHERIT_AMH_FOUREXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<OldInherit::AMH_fourExceptionHolder>
  {
    static void add_ref (OldInherit::AMH_fourExceptionHolder *);
    static void remove_ref (OldInherit::AMH_fourExceptionHolder *);
    static void release (OldInherit::AMH_fourExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMH_FOURRESPONSEHANDLER__TRAITS_)
#define _OLDINHERIT_AMH_FOURRESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::AMH_fourResponseHandler>
  {
    static ::OldInherit::AMH_fourResponseHandler_ptr duplicate (::OldInherit::AMH_fourResponseHandler_ptr p);
    static void release (::OldInherit::AMH_fourResponseHandler_ptr p);
    static ::OldInherit::AMH_fourResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::AMH_fourResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMI_FOURHANDLER__TRAITS_)
#define _OLDINHERIT_AMI_FOURHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::AMI_fourHandler>
  {
    static ::OldInherit::AMI_fourHandler_ptr duplicate (::OldInherit::AMI_fourHandler_ptr p);
    static void release (::OldInherit::AMI_fourHandler_ptr p);
    static ::OldInherit::AMI_fourHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::AMI_fourHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_FIVE__TRAITS_)
#define _OLDINHERIT_FIVE__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::five>
  {
    static ::OldInherit::five_ptr duplicate (::OldInherit::five_ptr p);
    static void release (::OldInherit::five_ptr p);
    static ::OldInherit::five_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::five_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMH_FIVEEXCEPTIONHOLDER__TRAITS_)
#define _OLDINHERIT_AMH_FIVEEXCEPTIONHOLDER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Value_Traits<OldInherit::AMH_fiveExceptionHolder>
  {
    static void add_ref (OldInherit::AMH_fiveExceptionHolder *);
    static void remove_ref (OldInherit::AMH_fiveExceptionHolder *);
    static void release (OldInherit::AMH_fiveExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMH_FIVERESPONSEHANDLER__TRAITS_)
#define _OLDINHERIT_AMH_FIVERESPONSEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::AMH_fiveResponseHandler>
  {
    static ::OldInherit::AMH_fiveResponseHandler_ptr duplicate (::OldInherit::AMH_fiveResponseHandler_ptr p);
    static void release (::OldInherit::AMH_fiveResponseHandler_ptr p);
    static ::OldInherit::AMH_fiveResponseHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::AMH_fiveResponseHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OLDINHERIT_AMI_FIVEHANDLER__TRAITS_)
#define _OLDINHERIT_AMI_FIVEHANDLER__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::OldInherit::AMI_fiveHandler>
  {
    static ::OldInherit::AMI_fiveHandler_ptr duplicate (::OldInherit::AMI_fiveHandler_ptr p);
    static void release (::OldInherit::AMI_fiveHandler_ptr p);
    static ::OldInherit::AMI_fiveHandler_ptr nil ();
    static ::CORBA::Boolean marshal (const ::OldInherit::AMI_fiveHandler_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::one_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::one_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (OldInherit::AMH_oneExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (OldInherit::AMH_oneExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::AMH_oneExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::AMH_oneExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::AMI_oneHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::AMI_oneHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::two_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::two_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (OldInherit::AMH_twoExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (OldInherit::AMH_twoExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::AMH_twoExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::AMH_twoExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::AMI_twoHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::AMI_twoHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::three_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::three_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (OldInherit::AMH_threeExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (OldInherit::AMH_threeExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::AMH_threeExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::AMH_threeExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::AMI_threeHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::AMI_threeHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::four_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::four_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (OldInherit::AMH_fourExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (OldInherit::AMH_fourExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::AMH_fourExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::AMH_fourExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::AMI_fourHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::AMI_fourHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::five_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::five_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:452


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_IDL_TEST_STUB_Export void add_ref (OldInherit::AMH_fiveExceptionHolder *);
  extern TAO_IDL_TEST_STUB_Export void remove_ref (OldInherit::AMH_fiveExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::AMH_fiveExceptionHolder *);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::AMH_fiveExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:40



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OldInherit::AMI_fiveHandler_ptr );
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OldInherit::AMI_fiveHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:1648

#if defined (__ACE_INLINE__)
#include "inheritC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

