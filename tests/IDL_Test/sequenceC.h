// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:148

#ifndef _TAO_IDL_SEQUENCEC_0OBA4O_H_
#define _TAO_IDL_SEQUENCEC_0OBA4O_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "TAO_IDL_TEST_stub_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Messaging/Messaging.h"
#include "tao/AnyTypeCode/OctetSeqA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/OctetSeqC.h"

#if TAO_MAJOR_VERSION != 4 || TAO_MINOR_VERSION != 0 || TAO_MICRO_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258



struct myfoostruct;
using myfoostruct_var = ::TAO_Var_Var_T<myfoostruct>;
using myfoostruct_out = ::TAO_Out_T<myfoostruct>;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98



#if !defined (_MYFOOSTRUCTSEQ_CH_)
#define _MYFOOSTRUCTSEQ_CH_

class myfoostructseq;
typedef ::TAO_VarSeq_Var_T<myfoostructseq> myfoostructseq_var;
typedef ::TAO_Seq_Out_T<myfoostructseq> myfoostructseq_out;


class TAO_IDL_TEST_STUB_Export myfoostructseq
  : public
      ::TAO::unbounded_value_sequence< myfoostruct>
{
public:
  myfoostructseq () = default;
  myfoostructseq (::CORBA::ULong max);
  myfoostructseq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    myfoostruct* buffer,
    ::CORBA::Boolean release = false);
  myfoostructseq (const myfoostructseq &) = default;
  myfoostructseq (myfoostructseq &&) = default;
  myfoostructseq& operator= (const myfoostructseq &) = default;
  myfoostructseq& operator= (myfoostructseq &&) = default;
  virtual ~myfoostructseq () = default;
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  
  using _var_type = myfoostructseq_var;
  using _out_type = myfoostructseq_out;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_myfoostructseq;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47



struct TAO_IDL_TEST_STUB_Export myfoostruct
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  
  using _var_type = myfoostruct_var;
  using _out_type = myfoostruct_out;

  static void _tao_any_destructor (void *);
  
  ::TAO::String_Manager str_mem;
  myfoostructseq rec_mem;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_myfoostruct;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40



class TAO_IDL_TEST_STUB_Export nasty : public ::CORBA::UserException
{
public:
  ::TAO::String_Manager id;
  myfoostruct rec_info;

  nasty ();
  nasty (const nasty &);
  ~nasty () = default;

  nasty &operator= (const nasty &);

  static void _tao_any_destructor (void *);

  static nasty *_downcast (::CORBA::Exception *);
  static const nasty *_downcast (::CORBA::Exception const *);

  static ::CORBA::Exception *_alloc ();

  virtual ::CORBA::Exception *_tao_duplicate () const;

  virtual void _raise () const;

  virtual void _tao_encode (TAO_OutputCDR &cdr) const;
  virtual void _tao_decode (TAO_InputCDR &cdr);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

  

  nasty (
      const char * _tao_id,
      const myfoostruct & _tao_rec_info);

  virtual ::CORBA::TypeCode_ptr _tao_type () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_nasty;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98



#if !defined (_OCTETSEQSEQ_CH_)
#define _OCTETSEQSEQ_CH_

class OctetSeqSeq;
typedef ::TAO_VarSeq_Var_T<OctetSeqSeq> OctetSeqSeq_var;
typedef ::TAO_Seq_Out_T<OctetSeqSeq> OctetSeqSeq_out;


class TAO_IDL_TEST_STUB_Export OctetSeqSeq
  : public
      ::TAO::unbounded_value_sequence< CORBA::OctetSeq>
{
public:
  OctetSeqSeq () = default;
  OctetSeqSeq (::CORBA::ULong max);
  OctetSeqSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    CORBA::OctetSeq* buffer,
    ::CORBA::Boolean release = false);
  OctetSeqSeq (const OctetSeqSeq &) = default;
  OctetSeqSeq (OctetSeqSeq &&) = default;
  OctetSeqSeq& operator= (const OctetSeqSeq &) = default;
  OctetSeqSeq& operator= (OctetSeqSeq &&) = default;
  virtual ~OctetSeqSeq () = default;
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  
  using _var_type = OctetSeqSeq_var;
  using _out_type = OctetSeqSeq_out;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_OctetSeqSeq;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_interface.cpp:742



#if !defined (_SEQLOCAL__VAR_OUT_CH_)
#define _SEQLOCAL__VAR_OUT_CH_

class AMI_seqLocalHandler;
typedef AMI_seqLocalHandler *AMI_seqLocalHandler_ptr;

class seqLocal;
using seqLocal_ptr = seqLocal*;
using seqLocal_var = TAO_Objref_Var_T<seqLocal>;
using seqLocal_out = TAO_Objref_Out_T<seqLocal>;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39



class TAO_IDL_TEST_STUB_Export seqLocal
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  using _ptr_type = seqLocal_ptr;
  using _var_type = seqLocal_var;
  using _out_type = seqLocal_out;

  static void _tao_any_destructor (void *);

  // The static operations.
  static seqLocal_ptr _duplicate (seqLocal_ptr obj);

  static void _tao_release (seqLocal_ptr obj);

  static seqLocal_ptr _narrow (::CORBA::Object_ptr obj);
  static seqLocal_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static seqLocal_ptr _nil ();

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id () const;
  static const char* _desc_repository_id ();
  static const char* _desc_interface_name ();
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  seqLocal ();

  

  virtual ~seqLocal () = default;

private:
  // Private and unimplemented for concrete interfaces.
  seqLocal (const seqLocal &) = delete;
  seqLocal (seqLocal &&) = delete;
  seqLocal &operator= (const seqLocal &) = delete;
  seqLocal &operator= (seqLocal &&) = delete;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_seqLocal;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98



#if !defined (_SEQLOCALSEQ_CH_)
#define _SEQLOCALSEQ_CH_

class seqLocalSeq;
typedef ::TAO_VarSeq_Var_T<seqLocalSeq> seqLocalSeq_var;
typedef ::TAO_Seq_Out_T<seqLocalSeq> seqLocalSeq_out;


class TAO_IDL_TEST_STUB_Export seqLocalSeq
  : public
      ::TAO::unbounded_object_reference_sequence<
          seqLocal,
          seqLocal_var
        >
{
public:
  seqLocalSeq () = default;
  seqLocalSeq (::CORBA::ULong max);
  seqLocalSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    seqLocal_ptr* buffer,
    ::CORBA::Boolean release = false);
  seqLocalSeq (const seqLocalSeq &) = default;
  seqLocalSeq (seqLocalSeq &&) = default;
  seqLocalSeq& operator= (const seqLocalSeq &) = default;
  seqLocalSeq& operator= (seqLocalSeq &&) = default;
  virtual ~seqLocalSeq () = default;
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

  
  using _var_type = seqLocalSeq_var;
  using _out_type = seqLocalSeq_out;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_seqLocalSeq;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace Deployment
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

  

  struct ComponentPackageDescription;
  using ComponentPackageDescription_var = ::TAO_Var_Var_T<ComponentPackageDescription>;
  using ComponentPackageDescription_out = ::TAO_Out_T<ComponentPackageDescription>;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

#if !defined (_DEPLOYMENT_COMPONENTPACKAGEDESCRIPTIONS_CH_)
#define _DEPLOYMENT_COMPONENTPACKAGEDESCRIPTIONS_CH_

  class ComponentPackageDescriptions;
  typedef ::TAO_VarSeq_Var_T<ComponentPackageDescriptions> ComponentPackageDescriptions_var;
  typedef ::TAO_Seq_Out_T<ComponentPackageDescriptions> ComponentPackageDescriptions_out;
  

  class TAO_IDL_TEST_STUB_Export ComponentPackageDescriptions
    : public
        ::TAO::unbounded_value_sequence< ComponentPackageDescription>
  {
  public:
    ComponentPackageDescriptions () = default;
    ComponentPackageDescriptions (::CORBA::ULong max);
    ComponentPackageDescriptions (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ComponentPackageDescription* buffer,
      ::CORBA::Boolean release = false);
    ComponentPackageDescriptions (const ComponentPackageDescriptions &) = default;
    ComponentPackageDescriptions (ComponentPackageDescriptions &&) = default;
    ComponentPackageDescriptions& operator= (const ComponentPackageDescriptions &) = default;
    ComponentPackageDescriptions& operator= (ComponentPackageDescriptions &&) = default;
    virtual ~ComponentPackageDescriptions () = default;
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = ComponentPackageDescriptions_var;
    using _out_type = ComponentPackageDescriptions_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_ComponentPackageDescriptions;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

  

  struct ComponentAssemblyDescription;
  using ComponentAssemblyDescription_var = ::TAO_Var_Var_T<ComponentAssemblyDescription>;
  using ComponentAssemblyDescription_out = ::TAO_Out_T<ComponentAssemblyDescription>;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

  

  struct TAO_IDL_TEST_STUB_Export ComponentAssemblyDescription
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = ComponentAssemblyDescription_var;
    using _out_type = ComponentAssemblyDescription_out;

    static void _tao_any_destructor (void *);
    
    Deployment::ComponentPackageDescriptions instance;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_ComponentAssemblyDescription;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

#if !defined (_DEPLOYMENT_COMPONENTASSEMBLYDESCRIPTIONS_CH_)
#define _DEPLOYMENT_COMPONENTASSEMBLYDESCRIPTIONS_CH_

  class ComponentAssemblyDescriptions;
  typedef ::TAO_VarSeq_Var_T<ComponentAssemblyDescriptions> ComponentAssemblyDescriptions_var;
  typedef ::TAO_Seq_Out_T<ComponentAssemblyDescriptions> ComponentAssemblyDescriptions_out;
  

  class TAO_IDL_TEST_STUB_Export ComponentAssemblyDescriptions
    : public
        ::TAO::unbounded_value_sequence< ComponentAssemblyDescription>
  {
  public:
    ComponentAssemblyDescriptions () = default;
    ComponentAssemblyDescriptions (::CORBA::ULong max);
    ComponentAssemblyDescriptions (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ComponentAssemblyDescription* buffer,
      ::CORBA::Boolean release = false);
    ComponentAssemblyDescriptions (const ComponentAssemblyDescriptions &) = default;
    ComponentAssemblyDescriptions (ComponentAssemblyDescriptions &&) = default;
    ComponentAssemblyDescriptions& operator= (const ComponentAssemblyDescriptions &) = default;
    ComponentAssemblyDescriptions& operator= (ComponentAssemblyDescriptions &&) = default;
    virtual ~ComponentAssemblyDescriptions () = default;
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = ComponentAssemblyDescriptions_var;
    using _out_type = ComponentAssemblyDescriptions_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_ComponentAssemblyDescriptions;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

  

  struct NamedImplementationArtifact;
  using NamedImplementationArtifact_var = ::TAO_Var_Var_T<NamedImplementationArtifact>;
  using NamedImplementationArtifact_out = ::TAO_Out_T<NamedImplementationArtifact>;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

#if !defined (_DEPLOYMENT_NAMEDIMPLEMENTATIONARTIFACTS_CH_)
#define _DEPLOYMENT_NAMEDIMPLEMENTATIONARTIFACTS_CH_

  class NamedImplementationArtifacts;
  typedef ::TAO_VarSeq_Var_T<NamedImplementationArtifacts> NamedImplementationArtifacts_var;
  typedef ::TAO_Seq_Out_T<NamedImplementationArtifacts> NamedImplementationArtifacts_out;
  

  class TAO_IDL_TEST_STUB_Export NamedImplementationArtifacts
    : public
        ::TAO::unbounded_value_sequence< NamedImplementationArtifact>
  {
  public:
    NamedImplementationArtifacts () = default;
    NamedImplementationArtifacts (::CORBA::ULong max);
    NamedImplementationArtifacts (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      NamedImplementationArtifact* buffer,
      ::CORBA::Boolean release = false);
    NamedImplementationArtifacts (const NamedImplementationArtifacts &) = default;
    NamedImplementationArtifacts (NamedImplementationArtifacts &&) = default;
    NamedImplementationArtifacts& operator= (const NamedImplementationArtifacts &) = default;
    NamedImplementationArtifacts& operator= (NamedImplementationArtifacts &&) = default;
    virtual ~NamedImplementationArtifacts () = default;
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = NamedImplementationArtifacts_var;
    using _out_type = NamedImplementationArtifacts_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_NamedImplementationArtifacts;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

  

  struct TAO_IDL_TEST_STUB_Export NamedImplementationArtifact
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = NamedImplementationArtifact_var;
    using _out_type = NamedImplementationArtifact_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager str;
    Deployment::NamedImplementationArtifacts dependsOn;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_NamedImplementationArtifact;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

  

  struct MonolithicImplementationDescription;
  using MonolithicImplementationDescription_var = ::TAO_Var_Var_T<MonolithicImplementationDescription>;
  using MonolithicImplementationDescription_out = ::TAO_Out_T<MonolithicImplementationDescription>;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

  

  struct TAO_IDL_TEST_STUB_Export MonolithicImplementationDescription
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = MonolithicImplementationDescription_var;
    using _out_type = MonolithicImplementationDescription_out;

    static void _tao_any_destructor (void *);
    
    Deployment::NamedImplementationArtifacts primaryArtifact;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_MonolithicImplementationDescription;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

#if !defined (_DEPLOYMENT_MONOLITHICIMPLEMENTATIONDESCRIPTIONS_CH_)
#define _DEPLOYMENT_MONOLITHICIMPLEMENTATIONDESCRIPTIONS_CH_

  class MonolithicImplementationDescriptions;
  typedef ::TAO_VarSeq_Var_T<MonolithicImplementationDescriptions> MonolithicImplementationDescriptions_var;
  typedef ::TAO_Seq_Out_T<MonolithicImplementationDescriptions> MonolithicImplementationDescriptions_out;
  

  class TAO_IDL_TEST_STUB_Export MonolithicImplementationDescriptions
    : public
        ::TAO::unbounded_value_sequence< MonolithicImplementationDescription>
  {
  public:
    MonolithicImplementationDescriptions () = default;
    MonolithicImplementationDescriptions (::CORBA::ULong max);
    MonolithicImplementationDescriptions (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      MonolithicImplementationDescription* buffer,
      ::CORBA::Boolean release = false);
    MonolithicImplementationDescriptions (const MonolithicImplementationDescriptions &) = default;
    MonolithicImplementationDescriptions (MonolithicImplementationDescriptions &&) = default;
    MonolithicImplementationDescriptions& operator= (const MonolithicImplementationDescriptions &) = default;
    MonolithicImplementationDescriptions& operator= (MonolithicImplementationDescriptions &&) = default;
    virtual ~MonolithicImplementationDescriptions () = default;
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = MonolithicImplementationDescriptions_var;
    using _out_type = MonolithicImplementationDescriptions_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_MonolithicImplementationDescriptions;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:258

  

  struct PackagedComponentImplementation;
  using PackagedComponentImplementation_var = ::TAO_Var_Var_T<PackagedComponentImplementation>;
  using PackagedComponentImplementation_out = ::TAO_Out_T<PackagedComponentImplementation>;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

  

  struct TAO_IDL_TEST_STUB_Export PackagedComponentImplementation
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = PackagedComponentImplementation_var;
    using _out_type = PackagedComponentImplementation_out;

    static void _tao_any_destructor (void *);
    
    Deployment::ComponentAssemblyDescriptions assemblyImpl;
    Deployment::MonolithicImplementationDescriptions monolithicImpl;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_PackagedComponentImplementation;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

#if !defined (_DEPLOYMENT_PACKAGEDCOMPONENTIMPLEMENTATIONS_CH_)
#define _DEPLOYMENT_PACKAGEDCOMPONENTIMPLEMENTATIONS_CH_

  class PackagedComponentImplementations;
  typedef ::TAO_VarSeq_Var_T<PackagedComponentImplementations> PackagedComponentImplementations_var;
  typedef ::TAO_Seq_Out_T<PackagedComponentImplementations> PackagedComponentImplementations_out;
  

  class TAO_IDL_TEST_STUB_Export PackagedComponentImplementations
    : public
        ::TAO::unbounded_value_sequence< PackagedComponentImplementation>
  {
  public:
    PackagedComponentImplementations () = default;
    PackagedComponentImplementations (::CORBA::ULong max);
    PackagedComponentImplementations (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      PackagedComponentImplementation* buffer,
      ::CORBA::Boolean release = false);
    PackagedComponentImplementations (const PackagedComponentImplementations &) = default;
    PackagedComponentImplementations (PackagedComponentImplementations &&) = default;
    PackagedComponentImplementations& operator= (const PackagedComponentImplementations &) = default;
    PackagedComponentImplementations& operator= (PackagedComponentImplementations &&) = default;
    virtual ~PackagedComponentImplementations () = default;
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = PackagedComponentImplementations_var;
    using _out_type = PackagedComponentImplementations_out;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_PackagedComponentImplementations;

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

  

  struct TAO_IDL_TEST_STUB_Export ComponentPackageDescription
  {
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_type.cpp:297

    
    using _var_type = ComponentPackageDescription_var;
    using _out_type = ComponentPackageDescription_out;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager str;
    Deployment::PackagedComponentImplementations implementation;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern TAO_IDL_TEST_STUB_Export ::CORBA::TypeCode_ptr const _tc_ComponentPackageDescription;


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module Deployment
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Value_Traits<Messaging::ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::myfoostructseq>
    : public
        Var_Size_Arg_Traits_T<
            ::myfoostructseq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::myfoostruct>
    : public
        Var_Size_Arg_Traits_T<
            ::myfoostruct,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::OctetSeqSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::OctetSeqSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::seqLocalSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::seqLocalSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::Deployment::ComponentPackageDescriptions>
    : public
        Var_Size_Arg_Traits_T<
            ::Deployment::ComponentPackageDescriptions,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::Deployment::ComponentAssemblyDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::Deployment::ComponentAssemblyDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::Deployment::ComponentAssemblyDescriptions>
    : public
        Var_Size_Arg_Traits_T<
            ::Deployment::ComponentAssemblyDescriptions,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::Deployment::NamedImplementationArtifacts>
    : public
        Var_Size_Arg_Traits_T<
            ::Deployment::NamedImplementationArtifacts,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::Deployment::NamedImplementationArtifact>
    : public
        Var_Size_Arg_Traits_T<
            ::Deployment::NamedImplementationArtifact,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::Deployment::MonolithicImplementationDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::Deployment::MonolithicImplementationDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::Deployment::MonolithicImplementationDescriptions>
    : public
        Var_Size_Arg_Traits_T<
            ::Deployment::MonolithicImplementationDescriptions,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::Deployment::PackagedComponentImplementation>
    : public
        Var_Size_Arg_Traits_T<
            ::Deployment::PackagedComponentImplementation,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class Arg_Traits< ::Deployment::PackagedComponentImplementations>
    : public
        Var_Size_Arg_Traits_T<
            ::Deployment::PackagedComponentImplementations,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class Arg_Traits< ::Deployment::ComponentPackageDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::Deployment::ComponentPackageDescription,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_SEQLOCAL__TRAITS_)
#define _SEQLOCAL__TRAITS_

  template<>
  struct TAO_IDL_TEST_STUB_Export Objref_Traits< ::seqLocal>
  {
    static ::seqLocal_ptr duplicate (::seqLocal_ptr p);
    static void release (::seqLocal_ptr p);
    static ::seqLocal_ptr nil ();
    static ::CORBA::Boolean marshal (const ::seqLocal_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::myfoostructseq &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::myfoostructseq*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::myfoostructseq *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::myfoostruct &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::myfoostruct*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::myfoostruct *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const nasty &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, nasty*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const nasty *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::OctetSeqSeq &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::OctetSeqSeq*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::OctetSeqSeq *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:40




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, seqLocal_ptr); // copying
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, seqLocal_ptr *); // non-copying
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, seqLocal_ptr &);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::seqLocalSeq &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::seqLocalSeq*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::seqLocalSeq *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Deployment::ComponentPackageDescriptions &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Deployment::ComponentPackageDescriptions*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Deployment::ComponentPackageDescriptions *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Deployment::ComponentAssemblyDescription &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Deployment::ComponentAssemblyDescription*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Deployment::ComponentAssemblyDescription *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Deployment::ComponentAssemblyDescriptions &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Deployment::ComponentAssemblyDescriptions*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Deployment::ComponentAssemblyDescriptions *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Deployment::NamedImplementationArtifacts &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Deployment::NamedImplementationArtifacts*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Deployment::NamedImplementationArtifacts *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Deployment::NamedImplementationArtifact &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Deployment::NamedImplementationArtifact*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Deployment::NamedImplementationArtifact *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Deployment::MonolithicImplementationDescription &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Deployment::MonolithicImplementationDescription*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Deployment::MonolithicImplementationDescription *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Deployment::MonolithicImplementationDescriptions &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Deployment::MonolithicImplementationDescriptions*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Deployment::MonolithicImplementationDescriptions *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Deployment::PackagedComponentImplementation &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Deployment::PackagedComponentImplementation*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Deployment::PackagedComponentImplementation *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:46




TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Deployment::PackagedComponentImplementations &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Deployment::PackagedComponentImplementations*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Deployment::PackagedComponentImplementations *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, const ::Deployment::ComponentPackageDescription &); // copying version
TAO_IDL_TEST_STUB_Export void operator<<= (::CORBA::Any &, ::Deployment::ComponentPackageDescription*); // noncopying version
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Deployment::ComponentPackageDescription *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_myfoostructseq_H_
#define _TAO_CDR_OP_myfoostructseq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const myfoostructseq &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    myfoostructseq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_myfoostructseq_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const myfoostruct &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, myfoostruct &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const nasty &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, nasty &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_OctetSeqSeq_H_
#define _TAO_CDR_OP_OctetSeqSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OctetSeqSeq &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OctetSeqSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_OctetSeqSeq_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_Deployment_ComponentPackageDescriptions_H_
#define _TAO_CDR_OP_Deployment_ComponentPackageDescriptions_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::ComponentPackageDescriptions &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::ComponentPackageDescriptions &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Deployment_ComponentPackageDescriptions_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Deployment::ComponentAssemblyDescription &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Deployment::ComponentAssemblyDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_Deployment_ComponentAssemblyDescriptions_H_
#define _TAO_CDR_OP_Deployment_ComponentAssemblyDescriptions_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::ComponentAssemblyDescriptions &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::ComponentAssemblyDescriptions &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Deployment_ComponentAssemblyDescriptions_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_Deployment_NamedImplementationArtifacts_H_
#define _TAO_CDR_OP_Deployment_NamedImplementationArtifacts_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::NamedImplementationArtifacts &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::NamedImplementationArtifacts &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Deployment_NamedImplementationArtifacts_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Deployment::NamedImplementationArtifact &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Deployment::NamedImplementationArtifact &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Deployment::MonolithicImplementationDescription &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Deployment::MonolithicImplementationDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_Deployment_MonolithicImplementationDescriptions_H_
#define _TAO_CDR_OP_Deployment_MonolithicImplementationDescriptions_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::MonolithicImplementationDescriptions &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::MonolithicImplementationDescriptions &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Deployment_MonolithicImplementationDescriptions_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Deployment::PackagedComponentImplementation &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Deployment::PackagedComponentImplementation &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_Deployment_PackagedComponentImplementations_H_
#define _TAO_CDR_OP_Deployment_PackagedComponentImplementations_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Deployment::PackagedComponentImplementations &_tao_sequence);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Deployment::PackagedComponentImplementations &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Deployment_PackagedComponentImplementations_H_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Deployment::ComponentPackageDescription &);
TAO_IDL_TEST_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Deployment::ComponentPackageDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:1648

#if defined (__ACE_INLINE__)
#include "sequenceC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

