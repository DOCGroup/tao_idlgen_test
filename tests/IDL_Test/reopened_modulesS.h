// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:454

#ifndef _TAO_IDL_REOPENED_MODULESS_EXMHEC_H_
#define _TAO_IDL_REOPENED_MODULESS_EXMHEC_H_

#include /**/ "ace/pre.h"

#include "reopened_modulesC.h"
#include "reopen_include2S.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/BD_String_SArgument_T.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Messaging/MessagingS.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
#include "tao/Messaging/AMH_Response_Handler.h"

#include /**/ "TAO_IDL_TEST_stub_export.h"
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AA_BB_X1__SARG_TRAITS_)
#define _AA_BB_X1__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AA::BB::x1>
    : public Object_SArg_Traits_T<
        ::AA::BB::x1_ptr,
        ::AA::BB::x1_var,
        ::AA::BB::x1_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AA_BB_AMH_X1EXCEPTIONHOLDER__SARG_TRAITS_)
#define _AA_BB_AMH_X1EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AA::BB::AMH_x1ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AA::BB::AMH_x1ExceptionHolder *,
            ::AA::BB::AMH_x1ExceptionHolder_var,
            ::AA::BB::AMH_x1ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AA_BB_AMI_X1HANDLER__SARG_TRAITS_)
#define _AA_BB_AMI_X1HANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AA::BB::AMI_x1Handler>
    : public Object_SArg_Traits_T<
        ::AA::BB::AMI_x1Handler_ptr,
        ::AA::BB::AMI_x1Handler_var,
        ::AA::BB::AMI_x1Handler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AA_BB_CC_X2__SARG_TRAITS_)
#define _AA_BB_CC_X2__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AA::BB::CC::x2>
    : public Object_SArg_Traits_T<
        ::AA::BB::CC::x2_ptr,
        ::AA::BB::CC::x2_var,
        ::AA::BB::CC::x2_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AA_BB_CC_AMH_X2EXCEPTIONHOLDER__SARG_TRAITS_)
#define _AA_BB_CC_AMH_X2EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AA::BB::CC::AMH_x2ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AA::BB::CC::AMH_x2ExceptionHolder *,
            ::AA::BB::CC::AMH_x2ExceptionHolder_var,
            ::AA::BB::CC::AMH_x2ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AA_BB_CC_AMI_X2HANDLER__SARG_TRAITS_)
#define _AA_BB_CC_AMI_X2HANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AA::BB::CC::AMI_x2Handler>
    : public Object_SArg_Traits_T<
        ::AA::BB::CC::AMI_x2Handler_ptr,
        ::AA::BB::CC::AMI_x2Handler_var,
        ::AA::BB::CC::AMI_x2Handler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_DOT_PARTY__SARG_TRAITS_)
#define _DOT_PARTY__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::dot::Party>
    : public Object_SArg_Traits_T<
        ::dot::Party_ptr,
        ::dot::Party_var,
        ::dot::Party_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_DOT_PERSON__SARG_TRAITS_)
#define _DOT_PERSON__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::dot::Person>
    : public Object_SArg_Traits_T<
        ::dot::Person_ptr,
        ::dot::Person_var,
        ::dot::Person_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_DOT_AMH_PERSONEXCEPTIONHOLDER__SARG_TRAITS_)
#define _DOT_AMH_PERSONEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::dot::AMH_PersonExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::dot::AMH_PersonExceptionHolder *,
            ::dot::AMH_PersonExceptionHolder_var,
            ::dot::AMH_PersonExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_DOT_AMI_PERSONHANDLER__SARG_TRAITS_)
#define _DOT_AMI_PERSONHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::dot::AMI_PersonHandler>
    : public Object_SArg_Traits_T<
        ::dot::AMI_PersonHandler_ptr,
        ::dot::AMI_PersonHandler_var,
        ::dot::AMI_PersonHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_DOT_PARTY__SARG_TRAITS_)
#define _DOT_PARTY__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::dot::Party>
    : public Object_SArg_Traits_T<
        ::dot::Party_ptr,
        ::dot::Party_var,
        ::dot::Party_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_DOT_AMH_PARTYEXCEPTIONHOLDER__SARG_TRAITS_)
#define _DOT_AMH_PARTYEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::dot::AMH_PartyExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::dot::AMH_PartyExceptionHolder *,
            ::dot::AMH_PartyExceptionHolder_var,
            ::dot::AMH_PartyExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_DOT_AMI_PARTYHANDLER__SARG_TRAITS_)
#define _DOT_AMI_PARTYHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::dot::AMI_PartyHandler>
    : public Object_SArg_Traits_T<
        ::dot::AMI_PartyHandler_ptr,
        ::dot::AMI_PartyHandler_var,
        ::dot::AMI_PartyHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_OPHOLDER__SARG_TRAITS_)
#define _OPHOLDER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::OpHolder>
    : public Object_SArg_Traits_T<
        ::OpHolder_ptr,
        ::OpHolder_var,
        ::OpHolder_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_OPHOLDEREXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_OPHOLDEREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_OpHolderExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_OpHolderExceptionHolder *,
            ::AMH_OpHolderExceptionHolder_var,
            ::AMH_OpHolderExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_OPHOLDERHANDLER__SARG_TRAITS_)
#define _AMI_OPHOLDERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_OpHolderHandler>
    : public Object_SArg_Traits_T<
        ::AMI_OpHolderHandler_ptr,
        ::AMI_OpHolderHandler_var,
        ::AMI_OpHolderHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_COM_IFACE__SARG_TRAITS_)
#define _COM_IFACE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::com::IFace>
    : public Object_SArg_Traits_T<
        ::com::IFace_ptr,
        ::com::IFace_var,
        ::com::IFace_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_COM_AMH_IFACEEXCEPTIONHOLDER__SARG_TRAITS_)
#define _COM_AMH_IFACEEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::com::AMH_IFaceExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::com::AMH_IFaceExceptionHolder *,
            ::com::AMH_IFaceExceptionHolder_var,
            ::com::AMH_IFaceExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_COM_AMI_IFACEHANDLER__SARG_TRAITS_)
#define _COM_AMI_IFACEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::com::AMI_IFaceHandler>
    : public Object_SArg_Traits_T<
        ::com::AMI_IFaceHandler_ptr,
        ::com::AMI_IFaceHandler_var,
        ::com::AMI_IFaceHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_Y_Z__SARG_TRAITS_)
#define _Y_Z__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Y::Z>
    : public Object_SArg_Traits_T<
        ::Y::Z_ptr,
        ::Y::Z_var,
        ::Y::Z_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_Y_AMH_ZEXCEPTIONHOLDER__SARG_TRAITS_)
#define _Y_AMH_ZEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Y::AMH_ZExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Y::AMH_ZExceptionHolder *,
            ::Y::AMH_ZExceptionHolder_var,
            ::Y::AMH_ZExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_Y_AMI_ZHANDLER__SARG_TRAITS_)
#define _Y_AMI_ZHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Y::AMI_ZHandler>
    : public Object_SArg_Traits_T<
        ::Y::AMI_ZHandler_ptr,
        ::Y::AMI_ZHandler_var,
        ::Y::AMI_ZHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_X_BI__SARG_TRAITS_)
#define _X_BI__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::X::BI>
    : public Object_SArg_Traits_T<
        ::X::BI_ptr,
        ::X::BI_var,
        ::X::BI_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_X_AMH_BIEXCEPTIONHOLDER__SARG_TRAITS_)
#define _X_AMH_BIEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::X::AMH_BIExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::X::AMH_BIExceptionHolder *,
            ::X::AMH_BIExceptionHolder_var,
            ::X::AMH_BIExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_X_AMI_BIHANDLER__SARG_TRAITS_)
#define _X_AMI_BIHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::X::AMI_BIHandler>
    : public Object_SArg_Traits_T<
        ::X::AMI_BIHandler_ptr,
        ::X::AMI_BIHandler_var,
        ::X::AMI_BIHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_XX_BLAH_INTFC__SARG_TRAITS_)
#define _XX_BLAH_INTFC__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::XX::blah_intfc>
    : public Object_SArg_Traits_T<
        ::XX::blah_intfc_ptr,
        ::XX::blah_intfc_var,
        ::XX::blah_intfc_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_XX_AMH_BLAH_INTFCEXCEPTIONHOLDER__SARG_TRAITS_)
#define _XX_AMH_BLAH_INTFCEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::XX::AMH_blah_intfcExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::XX::AMH_blah_intfcExceptionHolder *,
            ::XX::AMH_blah_intfcExceptionHolder_var,
            ::XX::AMH_blah_intfcExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_XX_AMI_BLAH_INTFCHANDLER__SARG_TRAITS_)
#define _XX_AMI_BLAH_INTFCHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::XX::AMI_blah_intfcHandler>
    : public Object_SArg_Traits_T<
        ::XX::AMI_blah_intfcHandler_ptr,
        ::XX::AMI_blah_intfcHandler_var,
        ::XX::AMI_blah_intfcHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_XX_BLAH0__SARG_TRAITS_)
#define _XX_BLAH0__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::XX::blah0>
    : public Object_SArg_Traits_T<
        ::XX::blah0_ptr,
        ::XX::blah0_var,
        ::XX::blah0_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_XX_AMH_BLAH0EXCEPTIONHOLDER__SARG_TRAITS_)
#define _XX_AMH_BLAH0EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::XX::AMH_blah0ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::XX::AMH_blah0ExceptionHolder *,
            ::XX::AMH_blah0ExceptionHolder_var,
            ::XX::AMH_blah0ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_XX_AMI_BLAH0HANDLER__SARG_TRAITS_)
#define _XX_AMI_BLAH0HANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::XX::AMI_blah0Handler>
    : public Object_SArg_Traits_T<
        ::XX::AMI_blah0Handler_ptr,
        ::XX::AMI_blah0Handler_var,
        ::XX::AMI_blah0Handler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_FRAG_FRAG_IFACE__SARG_TRAITS_)
#define _FRAG_FRAG_IFACE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::frag::frag_iface>
    : public Object_SArg_Traits_T<
        ::frag::frag_iface_ptr,
        ::frag::frag_iface_var,
        ::frag::frag_iface_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_FRAG_AMH_FRAG_IFACEEXCEPTIONHOLDER__SARG_TRAITS_)
#define _FRAG_AMH_FRAG_IFACEEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::frag::AMH_frag_ifaceExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::frag::AMH_frag_ifaceExceptionHolder *,
            ::frag::AMH_frag_ifaceExceptionHolder_var,
            ::frag::AMH_frag_ifaceExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_FRAG_AMI_FRAG_IFACEHANDLER__SARG_TRAITS_)
#define _FRAG_AMI_FRAG_IFACEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::frag::AMI_frag_ifaceHandler>
    : public Object_SArg_Traits_T<
        ::frag::AMI_frag_ifaceHandler_ptr,
        ::frag::AMI_frag_ifaceHandler_var,
        ::frag::AMI_frag_ifaceHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_GATHER__SARG_TRAITS_)
#define _GATHER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::gather>
    : public Object_SArg_Traits_T<
        ::gather_ptr,
        ::gather_var,
        ::gather_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_AMH_GATHEREXCEPTIONHOLDER__SARG_TRAITS_)
#define _AMH_GATHEREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::AMH_gatherExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::AMH_gatherExceptionHolder *,
            ::AMH_gatherExceptionHolder_var,
            ::AMH_gatherExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_AMI_GATHERHANDLER__SARG_TRAITS_)
#define _AMI_GATHERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_gatherHandler>
    : public Object_SArg_Traits_T<
        ::AMI_gatherHandler_ptr,
        ::AMI_gatherHandler_var,
        ::AMI_gatherHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::bar>
    : public
        Fixed_Size_SArg_Traits_T<
            ::bar,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::foo::foo_struct>
    : public
        Fixed_Size_SArg_Traits_T<
            ::foo::foo_struct,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_FOO_OBJ__SARG_TRAITS_)
#define _FOO_OBJ__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::foo::obj>
    : public Object_SArg_Traits_T<
        ::foo::obj_ptr,
        ::foo::obj_var,
        ::foo::obj_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_FOO_AMH_OBJEXCEPTIONHOLDER__SARG_TRAITS_)
#define _FOO_AMH_OBJEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::foo::AMH_objExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::foo::AMH_objExceptionHolder *,
            ::foo::AMH_objExceptionHolder_var,
            ::foo::AMH_objExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_FOO_AMI_OBJHANDLER__SARG_TRAITS_)
#define _FOO_AMI_OBJHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::foo::AMI_objHandler>
    : public Object_SArg_Traits_T<
        ::foo::AMI_objHandler_ptr,
        ::foo::AMI_objHandler_var,
        ::foo::AMI_objHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class SArg_Traits< ::A::B::X2Seq>
    : public
        Var_Size_SArg_Traits_T<
            ::A::B::X2Seq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A_B_X3__SARG_TRAITS_)
#define _A_B_X3__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A::B::X3>
    : public Object_SArg_Traits_T<
        ::A::B::X3_ptr,
        ::A::B::X3_var,
        ::A::B::X3_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_A_B_AMH_X3EXCEPTIONHOLDER__SARG_TRAITS_)
#define _A_B_AMH_X3EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::A::B::AMH_X3ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::A::B::AMH_X3ExceptionHolder *,
            ::A::B::AMH_X3ExceptionHolder_var,
            ::A::B::AMH_X3ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A_B_AMI_X3HANDLER__SARG_TRAITS_)
#define _A_B_AMI_X3HANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A::B::AMI_X3Handler>
    : public Object_SArg_Traits_T<
        ::A::B::AMI_X3Handler_ptr,
        ::A::B::AMI_X3Handler_var,
        ::A::B::AMI_X3Handler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_MB_B__SARG_TRAITS_)
#define _MB_B__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::mB::B>
    : public Object_SArg_Traits_T<
        ::mB::B_ptr,
        ::mB::B_var,
        ::mB::B_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_MA_A__SARG_TRAITS_)
#define _MA_A__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::mA::A>
    : public Object_SArg_Traits_T<
        ::mA::A_ptr,
        ::mA::A_var,
        ::mA::A_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MA_AMH_AEXCEPTIONHOLDER__SARG_TRAITS_)
#define _MA_AMH_AEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::mA::AMH_AExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::mA::AMH_AExceptionHolder *,
            ::mA::AMH_AExceptionHolder_var,
            ::mA::AMH_AExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_MA_AMI_AHANDLER__SARG_TRAITS_)
#define _MA_AMI_AHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::mA::AMI_AHandler>
    : public Object_SArg_Traits_T<
        ::mA::AMI_AHandler_ptr,
        ::mA::AMI_AHandler_var,
        ::mA::AMI_AHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_MB_B__SARG_TRAITS_)
#define _MB_B__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::mB::B>
    : public Object_SArg_Traits_T<
        ::mB::B_ptr,
        ::mB::B_var,
        ::mB::B_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MB_AMH_BEXCEPTIONHOLDER__SARG_TRAITS_)
#define _MB_AMH_BEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::mB::AMH_BExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::mB::AMH_BExceptionHolder *,
            ::mB::AMH_BExceptionHolder_var,
            ::mB::AMH_BExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_MB_AMI_BHANDLER__SARG_TRAITS_)
#define _MB_AMI_BHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::mB::AMI_BHandler>
    : public Object_SArg_Traits_T<
        ::mB::AMI_BHandler_ptr,
        ::mB::AMI_BHandler_var,
        ::mB::AMI_BHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_MC_C__SARG_TRAITS_)
#define _MC_C__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::mC::C>
    : public Object_SArg_Traits_T<
        ::mC::C_ptr,
        ::mC::C_var,
        ::mC::C_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_MC_AMH_CEXCEPTIONHOLDER__SARG_TRAITS_)
#define _MC_AMH_CEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::mC::AMH_CExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::mC::AMH_CExceptionHolder *,
            ::mC::AMH_CExceptionHolder_var,
            ::mC::AMH_CExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_MC_AMI_CHANDLER__SARG_TRAITS_)
#define _MC_AMI_CHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::mC::AMI_CHandler>
    : public Object_SArg_Traits_T<
        ::mC::AMI_CHandler_ptr,
        ::mC::AMI_CHandler_var,
        ::mC::AMI_CHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_SCHMOIK_FOO__SARG_TRAITS_)
#define _SCHMOIK_FOO__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Schmoik::foo>
    : public Object_SArg_Traits_T<
        ::Schmoik::foo_ptr,
        ::Schmoik::foo_var,
        ::Schmoik::foo_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_SCHMOIK_AMH_FOOEXCEPTIONHOLDER__SARG_TRAITS_)
#define _SCHMOIK_AMH_FOOEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Schmoik::AMH_fooExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Schmoik::AMH_fooExceptionHolder *,
            ::Schmoik::AMH_fooExceptionHolder_var,
            ::Schmoik::AMH_fooExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_SCHMOIK_AMI_FOOHANDLER__SARG_TRAITS_)
#define _SCHMOIK_AMI_FOOHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Schmoik::AMI_fooHandler>
    : public Object_SArg_Traits_T<
        ::Schmoik::AMI_fooHandler_ptr,
        ::Schmoik::AMI_fooHandler_var,
        ::Schmoik::AMI_fooHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::Schmoik::bar>
    : public
        Var_Size_SArg_Traits_T<
            ::Schmoik::bar,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_THWOIK_TESTTYPE__SARG_TRAITS_)
#define _THWOIK_TESTTYPE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Thwoik::TestType>
    : public Object_SArg_Traits_T<
        ::Thwoik::TestType_ptr,
        ::Thwoik::TestType_var,
        ::Thwoik::TestType_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class SArg_Traits< ::Thwoik::ub_TestTypeSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::Thwoik::ub_TestTypeSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class SArg_Traits< ::Thwoik::bd_TestTypeSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::Thwoik::bd_TestTypeSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_THWOIK_TESTTYPE__SARG_TRAITS_)
#define _THWOIK_TESTTYPE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Thwoik::TestType>
    : public Object_SArg_Traits_T<
        ::Thwoik::TestType_ptr,
        ::Thwoik::TestType_var,
        ::Thwoik::TestType_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_THWOIK_AMH_TESTTYPEEXCEPTIONHOLDER__SARG_TRAITS_)
#define _THWOIK_AMH_TESTTYPEEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Thwoik::AMH_TestTypeExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Thwoik::AMH_TestTypeExceptionHolder *,
            ::Thwoik::AMH_TestTypeExceptionHolder_var,
            ::Thwoik::AMH_TestTypeExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_THWOIK_AMI_TESTTYPEHANDLER__SARG_TRAITS_)
#define _THWOIK_AMI_TESTTYPEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Thwoik::AMI_TestTypeHandler>
    : public Object_SArg_Traits_T<
        ::Thwoik::AMI_TestTypeHandler_ptr,
        ::Thwoik::AMI_TestTypeHandler_var,
        ::Thwoik::AMI_TestTypeHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A_MOD_FOO__SARG_TRAITS_)
#define _A_MOD_FOO__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A_mod::Foo>
    : public Object_SArg_Traits_T<
        ::A_mod::Foo_ptr,
        ::A_mod::Foo_var,
        ::A_mod::Foo_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_A_MOD_AMH_FOOEXCEPTIONHOLDER__SARG_TRAITS_)
#define _A_MOD_AMH_FOOEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::A_mod::AMH_FooExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::A_mod::AMH_FooExceptionHolder *,
            ::A_mod::AMH_FooExceptionHolder_var,
            ::A_mod::AMH_FooExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A_MOD_AMI_FOOHANDLER__SARG_TRAITS_)
#define _A_MOD_AMI_FOOHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A_mod::AMI_FooHandler>
    : public Object_SArg_Traits_T<
        ::A_mod::AMI_FooHandler_ptr,
        ::A_mod::AMI_FooHandler_var,
        ::A_mod::AMI_FooHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A_MOD_B_MOD_FOO__SARG_TRAITS_)
#define _A_MOD_B_MOD_FOO__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A_mod::B_mod::Foo>
    : public Object_SArg_Traits_T<
        ::A_mod::B_mod::Foo_ptr,
        ::A_mod::B_mod::Foo_var,
        ::A_mod::B_mod::Foo_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_A_MOD_B_MOD_AMH_FOOEXCEPTIONHOLDER__SARG_TRAITS_)
#define _A_MOD_B_MOD_AMH_FOOEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::A_mod::B_mod::AMH_FooExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::A_mod::B_mod::AMH_FooExceptionHolder *,
            ::A_mod::B_mod::AMH_FooExceptionHolder_var,
            ::A_mod::B_mod::AMH_FooExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_A_MOD_B_MOD_AMI_FOOHANDLER__SARG_TRAITS_)
#define _A_MOD_B_MOD_AMI_FOOHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A_mod::B_mod::AMI_FooHandler>
    : public Object_SArg_Traits_T<
        ::A_mod::B_mod::AMI_FooHandler_ptr,
        ::A_mod::B_mod::AMI_FooHandler_var,
        ::A_mod::B_mod::AMI_FooHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */

#if !defined (_STRINGJIM240__SARG_TRAITS_)
#define _STRINGJIM240__SARG_TRAITS_

  template<>
  class SArg_Traits<StringJIM_240>
    : public
        BD_String_SArg_Traits_T<
            CORBA::String_var,
            240,
            TAO::Any_Insert_Policy_Stream
        >
  {
  };

#endif /* end #if !defined */

#if !defined (_STRINGJIM_0240__SARG_TRAITS_)
#define _STRINGJIM_0240__SARG_TRAITS_

  template<>
  class SArg_Traits<StringJIM_0_240>
    : public
        BD_String_SArg_Traits_T<
            CORBA::String_var,
            240,
            TAO::Any_Insert_Policy_Stream
        >
  {
  };

#endif /* end #if !defined */

#if !defined (_STRINGJIM_1240__SARG_TRAITS_)
#define _STRINGJIM_1240__SARG_TRAITS_

  template<>
  class SArg_Traits<StringJIM_1_240>
    : public
        BD_String_SArg_Traits_T<
            CORBA::String_var,
            240,
            TAO::Any_Insert_Policy_Stream
        >
  {
  };

#endif /* end #if !defined */

#if !defined (_STRINGJIM_2240__SARG_TRAITS_)
#define _STRINGJIM_2240__SARG_TRAITS_

  template<>
  class SArg_Traits<StringJIM_2_240>
    : public
        BD_String_SArg_Traits_T<
            CORBA::String_var,
            240,
            TAO::Any_Insert_Policy_Stream
        >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_AA
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace BB
  {
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

    class AMH_x1;
    typedef AMH_x1 *AMH_x1_ptr;

    class TAO_IDL_TEST_STUB_Export AMH_x1
      : public virtual PortableServer::ServantBase
    {
    protected:
      AMH_x1 ();
    
    public:
      AMH_x1 (const AMH_x1& rhs);
      virtual ~AMH_x1 () = default;


      virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

      virtual void _dispatch (
          TAO_ServerRequest &req,
          TAO::Portable_Server::Servant_Upcall *_servant_upcall);
      
      AA::BB::x1 *_this ();

    virtual const char* _interface_repository_id () const;
  };

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class x1;
  typedef x1 *x1_ptr;

  class _TAO_x1_Direct_Proxy_Impl;

  class TAO_IDL_TEST_STUB_Export x1
    : public virtual PortableServer::ServantBase
  {
  protected:
    x1 ();
  
  public:
    /// Useful for template programming.
    typedef ::AA::BB::x1 _stub_type;
    typedef ::AA::BB::x1_ptr _stub_ptr_type;
    typedef ::AA::BB::x1_var _stub_var_type;

    x1 (const x1& rhs);
    virtual ~x1 () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::AA::BB::x1 *_this ();
    
    virtual const char* _interface_repository_id () const;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23

  

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class TAO_IDL_TEST_STUB_Export _TAO_x1_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_x1_Direct_Proxy_Impl ();
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

  class TAO_AMH_x1ResponseHandler;
  typedef TAO_AMH_x1ResponseHandler *TAO_AMH_x1ResponseHandler_ptr;

  class TAO_IDL_TEST_STUB_Export TAO_AMH_x1ResponseHandler
    : public TAO_AMH_Response_Handler,
      public ::AA::BB::AMH_x1ResponseHandler
  {
  public:
    TAO_AMH_x1ResponseHandler () = default;
    virtual ~TAO_AMH_x1ResponseHandler () = default;
  };

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class AMI_x1Handler;
  typedef AMI_x1Handler *AMI_x1Handler_ptr;

  class _TAO_AMI_x1Handler_Direct_Proxy_Impl;

  class TAO_IDL_TEST_STUB_Export AMI_x1Handler
    : public virtual POA_Messaging::ReplyHandler
  {
  protected:
    AMI_x1Handler ();
  
  public:
    /// Useful for template programming.
    typedef ::AA::BB::AMI_x1Handler _stub_type;
    typedef ::AA::BB::AMI_x1Handler_ptr _stub_ptr_type;
    typedef ::AA::BB::AMI_x1Handler_var _stub_var_type;

    AMI_x1Handler (const AMI_x1Handler& rhs);
    virtual ~AMI_x1Handler () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::AA::BB::AMI_x1Handler *_this ();
    
    virtual const char* _interface_repository_id () const;
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23

  

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class TAO_IDL_TEST_STUB_Export _TAO_AMI_x1Handler_Direct_Proxy_Impl
    : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_AMI_x1Handler_Direct_Proxy_Impl ();
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module AA::BB


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module AA
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_AA
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace BB
  {
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

    namespace CC
    {
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

      class AMH_x2;
      typedef AMH_x2 *AMH_x2_ptr;

      class TAO_IDL_TEST_STUB_Export AMH_x2
        : public virtual PortableServer::ServantBase
      {
      protected:
        AMH_x2 ();
      
      public:
        AMH_x2 (const AMH_x2& rhs);
        virtual ~AMH_x2 () = default;


        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest &req,
            TAO::Portable_Server::Servant_Upcall *_servant_upcall);
        
        AA::BB::CC::x2 *_this ();

      virtual const char* _interface_repository_id () const;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

      static void op1_skel (
          TAO_ServerRequest &_tao_req,
          TAO::Portable_Server::Servant_Upcall *_tao_obj,
          TAO_ServantBase *_tao_servant_upcall);
        
      virtual void op1 (
          AA::BB::CC::AMH_x2ResponseHandler_ptr _tao_rh,
          ::AA::BB::x1_ptr obj
        ) = 0;
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

      static void op2_skel (
          TAO_ServerRequest &_tao_req,
          TAO::Portable_Server::Servant_Upcall *_tao_obj,
          TAO_ServantBase *_tao_servant_upcall);
        
      virtual void op2 (
          AA::BB::CC::AMH_x2ResponseHandler_ptr _tao_rh,
          ::AA::BB::x1_ptr obj
        ) = 0;
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

      static void op3_skel (
          TAO_ServerRequest &_tao_req,
          TAO::Portable_Server::Servant_Upcall *_tao_obj,
          TAO_ServantBase *_tao_servant_upcall);
        
      virtual void op3 (
          AA::BB::CC::AMH_x2ResponseHandler_ptr _tao_rh,
          ::AA::BB::x1_ptr obj
        ) = 0;
      
    };

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

    

    class x2;
    typedef x2 *x2_ptr;

    class _TAO_x2_Direct_Proxy_Impl;

    class TAO_IDL_TEST_STUB_Export x2
      : public virtual PortableServer::ServantBase
    {
    protected:
      x2 ();
    
    public:
      /// Useful for template programming.
      typedef ::AA::BB::CC::x2 _stub_type;
      typedef ::AA::BB::CC::x2_ptr _stub_ptr_type;
      typedef ::AA::BB::CC::x2_var _stub_var_type;

      x2 (const x2& rhs);
      virtual ~x2 () = default;

      virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

      virtual void _dispatch (
          TAO_ServerRequest & req,
          TAO::Portable_Server::Servant_Upcall *servant_upcall);
      
      ::AA::BB::CC::x2 *_this ();
      
      virtual const char* _interface_repository_id () const;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

      virtual void op1 (
        ::AA::BB::x1_ptr obj) = 0;

      static void op1_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

      virtual void op2 (
        ::AA::BB::x1_ptr obj) = 0;

      static void op2_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

      virtual void op3 (
        ::AA::BB::x1_ptr obj) = 0;

      static void op3_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23

    

    ///////////////////////////////////////////////////////////////////////
    //                    Direct  Impl. Declaration
    //

    class TAO_IDL_TEST_STUB_Export _TAO_x2_Direct_Proxy_Impl
    {
    public:
      virtual ~_TAO_x2_Direct_Proxy_Impl ();
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

      static void
      op1 (
        TAO_Abstract_ServantBase *servant, TAO::Argument **args);
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

      static void
      op2 (
        TAO_Abstract_ServantBase *servant, TAO::Argument **args);
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

      static void
      op3 (
        TAO_Abstract_ServantBase *servant, TAO::Argument **args);
      
    };

    //
    //                Direct  Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

    class TAO_AMH_x2ResponseHandler;
    typedef TAO_AMH_x2ResponseHandler *TAO_AMH_x2ResponseHandler_ptr;

    class TAO_IDL_TEST_STUB_Export TAO_AMH_x2ResponseHandler
      : public TAO_AMH_Response_Handler,
        public ::AA::BB::CC::AMH_x2ResponseHandler
    {
    public:
      TAO_AMH_x2ResponseHandler () = default;
      virtual ~TAO_AMH_x2ResponseHandler () = default;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

      void op1 () override;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

      void op1_excep (
        ::AA::BB::CC::AMH_x2ExceptionHolder * holder) override;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

      void op2 () override;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

      void op2_excep (
        ::AA::BB::CC::AMH_x2ExceptionHolder * holder) override;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

      void op3 () override;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

      void op3_excep (
        ::AA::BB::CC::AMH_x2ExceptionHolder * holder) override;
    };

    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

    

    class AMI_x2Handler;
    typedef AMI_x2Handler *AMI_x2Handler_ptr;

    class _TAO_AMI_x2Handler_Direct_Proxy_Impl;

    class TAO_IDL_TEST_STUB_Export AMI_x2Handler
      : public virtual POA_Messaging::ReplyHandler
    {
    protected:
      AMI_x2Handler ();
    
    public:
      /// Useful for template programming.
      typedef ::AA::BB::CC::AMI_x2Handler _stub_type;
      typedef ::AA::BB::CC::AMI_x2Handler_ptr _stub_ptr_type;
      typedef ::AA::BB::CC::AMI_x2Handler_var _stub_var_type;

      AMI_x2Handler (const AMI_x2Handler& rhs);
      virtual ~AMI_x2Handler () = default;

      virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

      virtual void _dispatch (
          TAO_ServerRequest & req,
          TAO::Portable_Server::Servant_Upcall *servant_upcall);
      
      ::AA::BB::CC::AMI_x2Handler *_this ();
      
      virtual const char* _interface_repository_id () const;
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

      virtual void op1 () = 0;

      static void op1_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

      virtual void op1_excep (
        ::Messaging::ExceptionHolder * excep_holder) = 0;

      static void op1_excep_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

      virtual void op2 () = 0;

      static void op2_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

      virtual void op2_excep (
        ::Messaging::ExceptionHolder * excep_holder) = 0;

      static void op2_excep_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

      virtual void op3 () = 0;

      static void op3_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

      virtual void op3_excep (
        ::Messaging::ExceptionHolder * excep_holder) = 0;

      static void op3_excep_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
    };
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23

    

    ///////////////////////////////////////////////////////////////////////
    //                    Direct  Impl. Declaration
    //

    class TAO_IDL_TEST_STUB_Export _TAO_AMI_x2Handler_Direct_Proxy_Impl
      : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
    {
    public:
      virtual ~_TAO_AMI_x2Handler_Direct_Proxy_Impl ();
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

      static void
      op1 (
        TAO_Abstract_ServantBase *servant, TAO::Argument **args);
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

      static void
      op1_excep (
        TAO_Abstract_ServantBase *servant, TAO::Argument **args);
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

      static void
      op2 (
        TAO_Abstract_ServantBase *servant, TAO::Argument **args);
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

      static void
      op2_excep (
        TAO_Abstract_ServantBase *servant, TAO::Argument **args);
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

      static void
      op3 (
        TAO_Abstract_ServantBase *servant, TAO::Argument **args);
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

      static void
      op3_excep (
        TAO_Abstract_ServantBase *servant, TAO::Argument **args);
      
    };

    //
    //                Direct  Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////

    
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

  } // module AA::BB::CC


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module AA::BB


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module AA
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_dot
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_Person;
  typedef AMH_Person *AMH_Person_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_Person
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_Person ();
  
  public:
    AMH_Person (const AMH_Person& rhs);
    virtual ~AMH_Person () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    dot::Person *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void _get_someParty_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void someParty (
      dot::AMH_PersonResponseHandler_ptr _tao_rh
    ) = 0;
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void _set_someParty_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void someParty (
      dot::AMH_PersonResponseHandler_ptr _tao_rh,
      ::dot::Party_ptr someParty
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class Person;
typedef Person *Person_ptr;

class _TAO_Person_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export Person
  : public virtual PortableServer::ServantBase
{
protected:
  Person ();

public:
  /// Useful for template programming.
  typedef ::dot::Person _stub_type;
  typedef ::dot::Person_ptr _stub_ptr_type;
  typedef ::dot::Person_var _stub_var_type;

  Person (const Person& rhs);
  virtual ~Person () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::dot::Person *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::dot::Party_ptr someParty () = 0;

  static void _get_someParty_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void someParty (
    ::dot::Party_ptr someParty) = 0;

  static void _set_someParty_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_Person_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_Person_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _get_someParty (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _set_someParty (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_PersonResponseHandler;
typedef TAO_AMH_PersonResponseHandler *TAO_AMH_PersonResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_PersonResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::dot::AMH_PersonResponseHandler
{
public:
  TAO_AMH_PersonResponseHandler () = default;
  virtual ~TAO_AMH_PersonResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_someParty (
    ::dot::Party_ptr return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_someParty_excep (
    ::dot::AMH_PersonExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_someParty () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_someParty_excep (
    ::dot::AMH_PersonExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_PersonHandler;
typedef AMI_PersonHandler *AMI_PersonHandler_ptr;

class _TAO_AMI_PersonHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_PersonHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_PersonHandler ();

public:
  /// Useful for template programming.
  typedef ::dot::AMI_PersonHandler _stub_type;
  typedef ::dot::AMI_PersonHandler_ptr _stub_ptr_type;
  typedef ::dot::AMI_PersonHandler_var _stub_var_type;

  AMI_PersonHandler (const AMI_PersonHandler& rhs);
  virtual ~AMI_PersonHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::dot::AMI_PersonHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_someParty (
    ::dot::Party_ptr ami_return_val) = 0;

  static void get_someParty_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_someParty_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void get_someParty_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_someParty () = 0;

  static void set_someParty_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_someParty_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void set_someParty_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_PersonHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_PersonHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_someParty (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_someParty_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_someParty (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_someParty_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module dot
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_dot
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_Party;
  typedef AMH_Party *AMH_Party_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_Party
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_Party ();
  
  public:
    AMH_Party (const AMH_Party& rhs);
    virtual ~AMH_Party () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    dot::Party *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void _get_somePerson_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void somePerson (
      dot::AMH_PartyResponseHandler_ptr _tao_rh
    ) = 0;
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void _set_somePerson_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void somePerson (
      dot::AMH_PartyResponseHandler_ptr _tao_rh,
      ::dot::Person_ptr somePerson
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class Party;
typedef Party *Party_ptr;

class _TAO_Party_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export Party
  : public virtual PortableServer::ServantBase
{
protected:
  Party ();

public:
  /// Useful for template programming.
  typedef ::dot::Party _stub_type;
  typedef ::dot::Party_ptr _stub_ptr_type;
  typedef ::dot::Party_var _stub_var_type;

  Party (const Party& rhs);
  virtual ~Party () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::dot::Party *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::dot::Person_ptr somePerson () = 0;

  static void _get_somePerson_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void somePerson (
    ::dot::Person_ptr somePerson) = 0;

  static void _set_somePerson_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_Party_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_Party_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _get_somePerson (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _set_somePerson (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_PartyResponseHandler;
typedef TAO_AMH_PartyResponseHandler *TAO_AMH_PartyResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_PartyResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::dot::AMH_PartyResponseHandler
{
public:
  TAO_AMH_PartyResponseHandler () = default;
  virtual ~TAO_AMH_PartyResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_somePerson (
    ::dot::Person_ptr return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_somePerson_excep (
    ::dot::AMH_PartyExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_somePerson () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_somePerson_excep (
    ::dot::AMH_PartyExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_PartyHandler;
typedef AMI_PartyHandler *AMI_PartyHandler_ptr;

class _TAO_AMI_PartyHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_PartyHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_PartyHandler ();

public:
  /// Useful for template programming.
  typedef ::dot::AMI_PartyHandler _stub_type;
  typedef ::dot::AMI_PartyHandler_ptr _stub_ptr_type;
  typedef ::dot::AMI_PartyHandler_var _stub_var_type;

  AMI_PartyHandler (const AMI_PartyHandler& rhs);
  virtual ~AMI_PartyHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::dot::AMI_PartyHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_somePerson (
    ::dot::Person_ptr ami_return_val) = 0;

  static void get_somePerson_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_somePerson_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void get_somePerson_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_somePerson () = 0;

  static void set_somePerson_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_somePerson_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void set_somePerson_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_PartyHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_PartyHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_somePerson (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_somePerson_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_somePerson (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_somePerson_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module dot
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_Outside
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace Reopened
  {
    
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

  } // module Outside::Reopened
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace Reopened
  {
    
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

  } // module Outside::Reopened


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Outside
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_OpHolder;
typedef POA_AMH_OpHolder *POA_AMH_OpHolder_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_OpHolder
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_OpHolder ();

public:
  POA_AMH_OpHolder (const POA_AMH_OpHolder& rhs);
  virtual ~POA_AMH_OpHolder () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  OpHolder *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void Operation_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void Operation (
    AMH_OpHolderResponseHandler_ptr _tao_rh,
    ::Outside::Tricky p1,
    ::Outside::Reopened::Newdef p3
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_OpHolder;
typedef POA_OpHolder *POA_OpHolder_ptr;

class _TAO_OpHolder_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_OpHolder
  : public virtual PortableServer::ServantBase
{
protected:
  POA_OpHolder ();

public:
  /// Useful for template programming.
  typedef ::OpHolder _stub_type;
  typedef ::OpHolder_ptr _stub_ptr_type;
  typedef ::OpHolder_var _stub_var_type;

  POA_OpHolder (const POA_OpHolder& rhs);
  virtual ~POA_OpHolder () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::OpHolder *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void Operation (
    ::Outside::Tricky p1,
    ::Outside::Reopened::Tricky_out p2,
    ::Outside::Reopened::Newdef & p3) = 0;

  static void Operation_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_OpHolder_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_OpHolder_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  Operation (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_OpHolderResponseHandler;
typedef POA_TAO_AMH_OpHolderResponseHandler *POA_TAO_AMH_OpHolderResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_OpHolderResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_OpHolderResponseHandler
{
public:
  POA_TAO_AMH_OpHolderResponseHandler () = default;
  virtual ~POA_TAO_AMH_OpHolderResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void Operation (
    ::Outside::Reopened::Tricky p2,
    ::Outside::Reopened::Newdef p3) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void Operation_excep (
    ::AMH_OpHolderExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_OpHolderHandler;
typedef POA_AMI_OpHolderHandler *POA_AMI_OpHolderHandler_ptr;

class _TAO_AMI_OpHolderHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_OpHolderHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_OpHolderHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_OpHolderHandler _stub_type;
  typedef ::AMI_OpHolderHandler_ptr _stub_ptr_type;
  typedef ::AMI_OpHolderHandler_var _stub_var_type;

  POA_AMI_OpHolderHandler (const POA_AMI_OpHolderHandler& rhs);
  virtual ~POA_AMI_OpHolderHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_OpHolderHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void Operation (
    ::Outside::Reopened::Tricky p2,
    ::Outside::Reopened::Newdef p3) = 0;

  static void Operation_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void Operation_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void Operation_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_OpHolderHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_OpHolderHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  Operation (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  Operation_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_com
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace mr
  {
    
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

  } // module com::mr


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module com
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_com
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_IFace;
  typedef AMH_IFace *AMH_IFace_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_IFace
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_IFace ();
  
  public:
    AMH_IFace (const AMH_IFace& rhs);
    virtual ~AMH_IFace () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    com::IFace *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void getInfo_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void getInfo (
      com::AMH_IFaceResponseHandler_ptr _tao_rh
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class IFace;
typedef IFace *IFace_ptr;

class _TAO_IFace_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export IFace
  : public virtual PortableServer::ServantBase
{
protected:
  IFace ();

public:
  /// Useful for template programming.
  typedef ::com::IFace _stub_type;
  typedef ::com::IFace_ptr _stub_ptr_type;
  typedef ::com::IFace_var _stub_var_type;

  IFace (const IFace& rhs);
  virtual ~IFace () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::com::IFace *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::com::mr::info getInfo () = 0;

  static void getInfo_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_IFace_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_IFace_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getInfo (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_IFaceResponseHandler;
typedef TAO_AMH_IFaceResponseHandler *TAO_AMH_IFaceResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_IFaceResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::com::AMH_IFaceResponseHandler
{
public:
  TAO_AMH_IFaceResponseHandler () = default;
  virtual ~TAO_AMH_IFaceResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void getInfo (
    ::com::mr::info return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void getInfo_excep (
    ::com::AMH_IFaceExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_IFaceHandler;
typedef AMI_IFaceHandler *AMI_IFaceHandler_ptr;

class _TAO_AMI_IFaceHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_IFaceHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_IFaceHandler ();

public:
  /// Useful for template programming.
  typedef ::com::AMI_IFaceHandler _stub_type;
  typedef ::com::AMI_IFaceHandler_ptr _stub_ptr_type;
  typedef ::com::AMI_IFaceHandler_var _stub_var_type;

  AMI_IFaceHandler (const AMI_IFaceHandler& rhs);
  virtual ~AMI_IFaceHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::com::AMI_IFaceHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void getInfo (
    ::com::mr::info ami_return_val) = 0;

  static void getInfo_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void getInfo_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void getInfo_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_IFaceHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_IFaceHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getInfo (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  getInfo_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module com
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_Y
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_Z;
  typedef AMH_Z *AMH_Z_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_Z
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_Z ();
  
  public:
    AMH_Z (const AMH_Z& rhs);
    virtual ~AMH_Z () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    Y::Z *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class Z;
typedef Z *Z_ptr;

class _TAO_Z_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export Z
  : public virtual PortableServer::ServantBase
{
protected:
  Z ();

public:
  /// Useful for template programming.
  typedef ::Y::Z _stub_type;
  typedef ::Y::Z_ptr _stub_ptr_type;
  typedef ::Y::Z_var _stub_var_type;

  Z (const Z& rhs);
  virtual ~Z () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Y::Z *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_Z_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_Z_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_ZResponseHandler;
typedef TAO_AMH_ZResponseHandler *TAO_AMH_ZResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_ZResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::Y::AMH_ZResponseHandler
{
public:
  TAO_AMH_ZResponseHandler () = default;
  virtual ~TAO_AMH_ZResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_ZHandler;
typedef AMI_ZHandler *AMI_ZHandler_ptr;

class _TAO_AMI_ZHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_ZHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_ZHandler ();

public:
  /// Useful for template programming.
  typedef ::Y::AMI_ZHandler _stub_type;
  typedef ::Y::AMI_ZHandler_ptr _stub_ptr_type;
  typedef ::Y::AMI_ZHandler_var _stub_var_type;

  AMI_ZHandler (const AMI_ZHandler& rhs);
  virtual ~AMI_ZHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Y::AMI_ZHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_ZHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_ZHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Y
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_X
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_BI;
  typedef AMH_BI *AMH_BI_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_BI
    : public virtual POA_Y::AMH_Z
      
  {
  protected:
    AMH_BI ();
  
  public:
    AMH_BI (const AMH_BI& rhs);
    virtual ~AMH_BI () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    X::BI *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void method_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void method (
      X::AMH_BIResponseHandler_ptr _tao_rh
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class BI;
typedef BI *BI_ptr;

class _TAO_BI_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export BI
  : public virtual POA_Y::Z
{
protected:
  BI ();

public:
  /// Useful for template programming.
  typedef ::X::BI _stub_type;
  typedef ::X::BI_ptr _stub_ptr_type;
  typedef ::X::BI_var _stub_var_type;

  BI (const BI& rhs);
  virtual ~BI () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::X::BI *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void method () = 0;

  static void method_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_BI_Direct_Proxy_Impl
  : public virtual ::POA_Y::_TAO_Z_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_BI_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  method (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_BIResponseHandler;
typedef TAO_AMH_BIResponseHandler *TAO_AMH_BIResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_BIResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::X::AMH_BIResponseHandler
{
public:
  TAO_AMH_BIResponseHandler () = default;
  virtual ~TAO_AMH_BIResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void method () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void method_excep (
    ::X::AMH_BIExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_BIHandler;
typedef AMI_BIHandler *AMI_BIHandler_ptr;

class _TAO_AMI_BIHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_BIHandler
  : public virtual POA_Y::AMI_ZHandler
{
protected:
  AMI_BIHandler ();

public:
  /// Useful for template programming.
  typedef ::X::AMI_BIHandler _stub_type;
  typedef ::X::AMI_BIHandler_ptr _stub_ptr_type;
  typedef ::X::AMI_BIHandler_var _stub_var_type;

  AMI_BIHandler (const AMI_BIHandler& rhs);
  virtual ~AMI_BIHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::X::AMI_BIHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void method () = 0;

  static void method_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void method_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void method_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_BIHandler_Direct_Proxy_Impl
  : public virtual ::POA_Y::_TAO_AMI_ZHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_BIHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  method (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  method_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module X
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_XX
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_blah_intfc;
  typedef AMH_blah_intfc *AMH_blah_intfc_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_blah_intfc
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_blah_intfc ();
  
  public:
    AMH_blah_intfc (const AMH_blah_intfc& rhs);
    virtual ~AMH_blah_intfc () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    XX::blah_intfc *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void op1_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void op1 (
      XX::AMH_blah_intfcResponseHandler_ptr _tao_rh
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class blah_intfc;
typedef blah_intfc *blah_intfc_ptr;

class _TAO_blah_intfc_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export blah_intfc
  : public virtual PortableServer::ServantBase
{
protected:
  blah_intfc ();

public:
  /// Useful for template programming.
  typedef ::XX::blah_intfc _stub_type;
  typedef ::XX::blah_intfc_ptr _stub_ptr_type;
  typedef ::XX::blah_intfc_var _stub_var_type;

  blah_intfc (const blah_intfc& rhs);
  virtual ~blah_intfc () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::XX::blah_intfc *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op1 () = 0;

  static void op1_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_blah_intfc_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_blah_intfc_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op1 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_blah_intfcResponseHandler;
typedef TAO_AMH_blah_intfcResponseHandler *TAO_AMH_blah_intfcResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_blah_intfcResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::XX::AMH_blah_intfcResponseHandler
{
public:
  TAO_AMH_blah_intfcResponseHandler () = default;
  virtual ~TAO_AMH_blah_intfcResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op1 () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op1_excep (
    ::XX::AMH_blah_intfcExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_blah_intfcHandler;
typedef AMI_blah_intfcHandler *AMI_blah_intfcHandler_ptr;

class _TAO_AMI_blah_intfcHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_blah_intfcHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_blah_intfcHandler ();

public:
  /// Useful for template programming.
  typedef ::XX::AMI_blah_intfcHandler _stub_type;
  typedef ::XX::AMI_blah_intfcHandler_ptr _stub_ptr_type;
  typedef ::XX::AMI_blah_intfcHandler_var _stub_var_type;

  AMI_blah_intfcHandler (const AMI_blah_intfcHandler& rhs);
  virtual ~AMI_blah_intfcHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::XX::AMI_blah_intfcHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op1 () = 0;

  static void op1_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op1_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void op1_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_blah_intfcHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_blah_intfcHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op1 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op1_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class AMH_blah0;
typedef AMH_blah0 *AMH_blah0_ptr;

class TAO_IDL_TEST_STUB_Export AMH_blah0
  : public virtual POA_XX::AMH_blah_intfc
    
{
protected:
  AMH_blah0 ();

public:
  AMH_blah0 (const AMH_blah0& rhs);
  virtual ~AMH_blah0 () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  XX::blah0 *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void op0_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void op0 (
    XX::AMH_blah0ResponseHandler_ptr _tao_rh
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class blah0;
typedef blah0 *blah0_ptr;

class _TAO_blah0_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export blah0
  : public virtual POA_XX::blah_intfc
{
protected:
  blah0 ();

public:
  /// Useful for template programming.
  typedef ::XX::blah0 _stub_type;
  typedef ::XX::blah0_ptr _stub_ptr_type;
  typedef ::XX::blah0_var _stub_var_type;

  blah0 (const blah0& rhs);
  virtual ~blah0 () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::XX::blah0 *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op0 () = 0;

  static void op0_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_blah0_Direct_Proxy_Impl
  : public virtual ::POA_XX::_TAO_blah_intfc_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_blah0_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op0 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_blah0ResponseHandler;
typedef TAO_AMH_blah0ResponseHandler *TAO_AMH_blah0ResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_blah0ResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::XX::AMH_blah0ResponseHandler
{
public:
  TAO_AMH_blah0ResponseHandler () = default;
  virtual ~TAO_AMH_blah0ResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op0 () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op0_excep (
    ::XX::AMH_blah0ExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_blah0Handler;
typedef AMI_blah0Handler *AMI_blah0Handler_ptr;

class _TAO_AMI_blah0Handler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_blah0Handler
  : public virtual POA_XX::AMI_blah_intfcHandler
{
protected:
  AMI_blah0Handler ();

public:
  /// Useful for template programming.
  typedef ::XX::AMI_blah0Handler _stub_type;
  typedef ::XX::AMI_blah0Handler_ptr _stub_ptr_type;
  typedef ::XX::AMI_blah0Handler_var _stub_var_type;

  AMI_blah0Handler (const AMI_blah0Handler& rhs);
  virtual ~AMI_blah0Handler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::XX::AMI_blah0Handler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op0 () = 0;

  static void op0_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op0_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void op0_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_blah0Handler_Direct_Proxy_Impl
  : public virtual ::POA_XX::_TAO_AMI_blah_intfcHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_blah0Handler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op0 (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op0_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module XX
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_frag
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_frag_iface;
  typedef AMH_frag_iface *AMH_frag_iface_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_frag_iface
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_frag_iface ();
  
  public:
    AMH_frag_iface (const AMH_frag_iface& rhs);
    virtual ~AMH_frag_iface () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    frag::frag_iface *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class frag_iface;
typedef frag_iface *frag_iface_ptr;

class _TAO_frag_iface_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export frag_iface
  : public virtual PortableServer::ServantBase
{
protected:
  frag_iface ();

public:
  /// Useful for template programming.
  typedef ::frag::frag_iface _stub_type;
  typedef ::frag::frag_iface_ptr _stub_ptr_type;
  typedef ::frag::frag_iface_var _stub_var_type;

  frag_iface (const frag_iface& rhs);
  virtual ~frag_iface () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::frag::frag_iface *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_frag_iface_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_frag_iface_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_frag_ifaceResponseHandler;
typedef TAO_AMH_frag_ifaceResponseHandler *TAO_AMH_frag_ifaceResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_frag_ifaceResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::frag::AMH_frag_ifaceResponseHandler
{
public:
  TAO_AMH_frag_ifaceResponseHandler () = default;
  virtual ~TAO_AMH_frag_ifaceResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_frag_ifaceHandler;
typedef AMI_frag_ifaceHandler *AMI_frag_ifaceHandler_ptr;

class _TAO_AMI_frag_ifaceHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_frag_ifaceHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_frag_ifaceHandler ();

public:
  /// Useful for template programming.
  typedef ::frag::AMI_frag_ifaceHandler _stub_type;
  typedef ::frag::AMI_frag_ifaceHandler_ptr _stub_ptr_type;
  typedef ::frag::AMI_frag_ifaceHandler_var _stub_var_type;

  AMI_frag_ifaceHandler (const AMI_frag_ifaceHandler& rhs);
  virtual ~AMI_frag_ifaceHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::frag::AMI_frag_ifaceHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_frag_ifaceHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_frag_ifaceHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module frag
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_frag
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module frag
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

class POA_AMH_gather;
typedef POA_AMH_gather *POA_AMH_gather_ptr;

class TAO_IDL_TEST_STUB_Export POA_AMH_gather
  : public virtual PortableServer::ServantBase
{
protected:
  POA_AMH_gather ();

public:
  POA_AMH_gather (const POA_AMH_gather& rhs);
  virtual ~POA_AMH_gather () = default;


  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest &req,
      TAO::Portable_Server::Servant_Upcall *_servant_upcall);
  
  gather *_this ();

virtual const char* _interface_repository_id () const;
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

static void op_skel (
    TAO_ServerRequest &_tao_req,
    TAO::Portable_Server::Servant_Upcall *_tao_obj,
    TAO_ServantBase *_tao_servant_upcall);
  
virtual void op (
    AMH_gatherResponseHandler_ptr _tao_rh,
    const ::frag::dub_seq & inarg,
    const ::frag::pug & inoutarg
  ) = 0;

};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_gather;
typedef POA_gather *POA_gather_ptr;

class _TAO_gather_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_gather
  : public virtual PortableServer::ServantBase
{
protected:
  POA_gather ();

public:
  /// Useful for template programming.
  typedef ::gather _stub_type;
  typedef ::gather_ptr _stub_ptr_type;
  typedef ::gather_var _stub_var_type;

  POA_gather (const POA_gather& rhs);
  virtual ~POA_gather () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::gather *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::frag::ret_long op (
    const ::frag::dub_seq & inarg,
    ::frag::pug & inoutarg,
    ::frag::frag_iface_out outarg) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_gather_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_gather_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class POA_TAO_AMH_gatherResponseHandler;
typedef POA_TAO_AMH_gatherResponseHandler *POA_TAO_AMH_gatherResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export POA_TAO_AMH_gatherResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::AMH_gatherResponseHandler
{
public:
  POA_TAO_AMH_gatherResponseHandler () = default;
  virtual ~POA_TAO_AMH_gatherResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op (
    ::frag::ret_long return_value,
    const ::frag::pug & inoutarg,
    ::frag::frag_iface_ptr outarg) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op_excep (
    ::AMH_gatherExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class POA_AMI_gatherHandler;
typedef POA_AMI_gatherHandler *POA_AMI_gatherHandler_ptr;

class _TAO_AMI_gatherHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export POA_AMI_gatherHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_gatherHandler ();

public:
  /// Useful for template programming.
  typedef ::AMI_gatherHandler _stub_type;
  typedef ::AMI_gatherHandler_ptr _stub_ptr_type;
  typedef ::AMI_gatherHandler_var _stub_var_type;

  POA_AMI_gatherHandler (const POA_AMI_gatherHandler& rhs);
  virtual ~POA_AMI_gatherHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::AMI_gatherHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op (
    ::frag::ret_long ami_return_val,
    const ::frag::pug & inoutarg,
    ::frag::frag_iface_ptr outarg) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void op_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_gatherHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_gatherHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_foo
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module foo
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_foo
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_obj;
  typedef AMH_obj *AMH_obj_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_obj
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_obj ();
  
  public:
    AMH_obj (const AMH_obj& rhs);
    virtual ~AMH_obj () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    foo::obj *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void op_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void op (
      foo::AMH_objResponseHandler_ptr _tao_rh,
      const ::bar & inarg
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class obj;
typedef obj *obj_ptr;

class _TAO_obj_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export obj
  : public virtual PortableServer::ServantBase
{
protected:
  obj ();

public:
  /// Useful for template programming.
  typedef ::foo::obj _stub_type;
  typedef ::foo::obj_ptr _stub_ptr_type;
  typedef ::foo::obj_var _stub_var_type;

  obj (const obj& rhs);
  virtual ~obj () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::foo::obj *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op (
    const ::bar & inarg) = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_obj_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_obj_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_objResponseHandler;
typedef TAO_AMH_objResponseHandler *TAO_AMH_objResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_objResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::foo::AMH_objResponseHandler
{
public:
  TAO_AMH_objResponseHandler () = default;
  virtual ~TAO_AMH_objResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void op_excep (
    ::foo::AMH_objExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_objHandler;
typedef AMI_objHandler *AMI_objHandler_ptr;

class _TAO_AMI_objHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_objHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_objHandler ();

public:
  /// Useful for template programming.
  typedef ::foo::AMI_objHandler _stub_type;
  typedef ::foo::AMI_objHandler_ptr _stub_ptr_type;
  typedef ::foo::AMI_objHandler_var _stub_var_type;

  AMI_objHandler (const AMI_objHandler& rhs);
  virtual ~AMI_objHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::foo::AMI_objHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op () = 0;

  static void op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void op_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void op_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_objHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_objHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  op_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module foo
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_A
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace B
  {
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

    class AMH_X3;
    typedef AMH_X3 *AMH_X3_ptr;

    class TAO_IDL_TEST_STUB_Export AMH_X3
      : public virtual POA_A::B::AMH_X1
        , public virtual POA_A::B::AMH_X2
        
    {
    protected:
      AMH_X3 ();
    
    public:
      AMH_X3 (const AMH_X3& rhs);
      virtual ~AMH_X3 () = default;


      virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

      virtual void _dispatch (
          TAO_ServerRequest &req,
          TAO::Portable_Server::Servant_Upcall *_servant_upcall);
      
      A::B::X3 *_this ();

    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

    static void getSeqOfX2_skel (
        TAO_ServerRequest &_tao_req,
        TAO::Portable_Server::Servant_Upcall *_tao_obj,
        TAO_ServantBase *_tao_servant_upcall);
      
    virtual void getSeqOfX2 (
        A::B::AMH_X3ResponseHandler_ptr _tao_rh
      ) = 0;
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

    static void getX3_skel (
        TAO_ServerRequest &_tao_req,
        TAO::Portable_Server::Servant_Upcall *_tao_obj,
        TAO_ServantBase *_tao_servant_upcall);
      
    virtual void getX3 (
        A::B::AMH_X3ResponseHandler_ptr _tao_rh
      ) = 0;
    
  };

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class X3;
  typedef X3 *X3_ptr;

  class _TAO_X3_Direct_Proxy_Impl;

  class TAO_IDL_TEST_STUB_Export X3
    : public virtual POA_A::B::X1,
      public virtual POA_A::B::X2
  {
  protected:
    X3 ();
  
  public:
    /// Useful for template programming.
    typedef ::A::B::X3 _stub_type;
    typedef ::A::B::X3_ptr _stub_ptr_type;
    typedef ::A::B::X3_var _stub_var_type;

    X3 (const X3& rhs);
    virtual ~X3 () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::A::B::X3 *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual ::A::B::X2Seq * getSeqOfX2 () = 0;

    static void getSeqOfX2_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual char * getX3 () = 0;

    static void getX3_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23

  

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class TAO_IDL_TEST_STUB_Export _TAO_X3_Direct_Proxy_Impl
    : public virtual ::POA_A::B::_TAO_X1_Direct_Proxy_Impl,
      public virtual ::POA_A::B::_TAO_X2_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_X3_Direct_Proxy_Impl ();
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    getSeqOfX2 (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    getX3 (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

  class TAO_AMH_X3ResponseHandler;
  typedef TAO_AMH_X3ResponseHandler *TAO_AMH_X3ResponseHandler_ptr;

  class TAO_IDL_TEST_STUB_Export TAO_AMH_X3ResponseHandler
    : public TAO_AMH_Response_Handler,
      public ::A::B::AMH_X3ResponseHandler
  {
  public:
    TAO_AMH_X3ResponseHandler () = default;
    virtual ~TAO_AMH_X3ResponseHandler () = default;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

    void getSeqOfX2 (
      const ::A::B::X2Seq & return_value) override;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

    void getSeqOfX2_excep (
      ::A::B::AMH_X3ExceptionHolder * holder) override;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

    void getX3 (
      const char * return_value) override;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

    void getX3_excep (
      ::A::B::AMH_X3ExceptionHolder * holder) override;
  };

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class AMI_X3Handler;
  typedef AMI_X3Handler *AMI_X3Handler_ptr;

  class _TAO_AMI_X3Handler_Direct_Proxy_Impl;

  class TAO_IDL_TEST_STUB_Export AMI_X3Handler
    : public virtual POA_A::B::AMI_X1Handler,
      public virtual POA_A::B::AMI_X2Handler
  {
  protected:
    AMI_X3Handler ();
  
  public:
    /// Useful for template programming.
    typedef ::A::B::AMI_X3Handler _stub_type;
    typedef ::A::B::AMI_X3Handler_ptr _stub_ptr_type;
    typedef ::A::B::AMI_X3Handler_var _stub_var_type;

    AMI_X3Handler (const AMI_X3Handler& rhs);
    virtual ~AMI_X3Handler () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::A::B::AMI_X3Handler *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void getSeqOfX2 (
      const ::A::B::X2Seq & ami_return_val) = 0;

    static void getSeqOfX2_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void getSeqOfX2_excep (
      ::Messaging::ExceptionHolder * excep_holder) = 0;

    static void getSeqOfX2_excep_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void getX3 (
      const char * ami_return_val) = 0;

    static void getX3_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void getX3_excep (
      ::Messaging::ExceptionHolder * excep_holder) = 0;

    static void getX3_excep_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23

  

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class TAO_IDL_TEST_STUB_Export _TAO_AMI_X3Handler_Direct_Proxy_Impl
    : public virtual ::POA_A::B::_TAO_AMI_X1Handler_Direct_Proxy_Impl,
      public virtual ::POA_A::B::_TAO_AMI_X2Handler_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_AMI_X3Handler_Direct_Proxy_Impl ();
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    getSeqOfX2 (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    getSeqOfX2_excep (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    getX3 (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    getX3_excep (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module A::B


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module A
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_mB
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module mB
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_mA
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_A;
  typedef AMH_A *AMH_A_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_A
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_A ();
  
  public:
    AMH_A (const AMH_A& rhs);
    virtual ~AMH_A () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    mA::A *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void _get_theB_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void theB (
      mA::AMH_AResponseHandler_ptr _tao_rh
    ) = 0;
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void _set_theB_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void theB (
      mA::AMH_AResponseHandler_ptr _tao_rh,
      ::mB::B_ptr theB
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class A;
typedef A *A_ptr;

class _TAO_A_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export A
  : public virtual PortableServer::ServantBase
{
protected:
  A ();

public:
  /// Useful for template programming.
  typedef ::mA::A _stub_type;
  typedef ::mA::A_ptr _stub_ptr_type;
  typedef ::mA::A_var _stub_var_type;

  A (const A& rhs);
  virtual ~A () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::mA::A *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::mB::B_ptr theB () = 0;

  static void _get_theB_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void theB (
    ::mB::B_ptr theB) = 0;

  static void _set_theB_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_A_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_A_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _get_theB (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _set_theB (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_AResponseHandler;
typedef TAO_AMH_AResponseHandler *TAO_AMH_AResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_AResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::mA::AMH_AResponseHandler
{
public:
  TAO_AMH_AResponseHandler () = default;
  virtual ~TAO_AMH_AResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_theB (
    ::mB::B_ptr return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_theB_excep (
    ::mA::AMH_AExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_theB () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_theB_excep (
    ::mA::AMH_AExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_AHandler;
typedef AMI_AHandler *AMI_AHandler_ptr;

class _TAO_AMI_AHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_AHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_AHandler ();

public:
  /// Useful for template programming.
  typedef ::mA::AMI_AHandler _stub_type;
  typedef ::mA::AMI_AHandler_ptr _stub_ptr_type;
  typedef ::mA::AMI_AHandler_var _stub_var_type;

  AMI_AHandler (const AMI_AHandler& rhs);
  virtual ~AMI_AHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::mA::AMI_AHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_theB (
    ::mB::B_ptr ami_return_val) = 0;

  static void get_theB_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_theB_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void get_theB_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_theB () = 0;

  static void set_theB_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_theB_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void set_theB_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_AHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_AHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_theB (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_theB_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_theB (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_theB_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module mA
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_mB
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_B;
  typedef AMH_B *AMH_B_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_B
    : public virtual POA_mA::AMH_A
      
  {
  protected:
    AMH_B ();
  
  public:
    AMH_B (const AMH_B& rhs);
    virtual ~AMH_B () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    mB::B *_this ();

  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void _get_theA_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void theA (
      mB::AMH_BResponseHandler_ptr _tao_rh
    ) = 0;
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

  static void _set_theA_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void theA (
      mB::AMH_BResponseHandler_ptr _tao_rh,
      ::mA::A_ptr theA
    ) = 0;
  
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class B;
typedef B *B_ptr;

class _TAO_B_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export B
  : public virtual POA_mA::A
{
protected:
  B ();

public:
  /// Useful for template programming.
  typedef ::mB::B _stub_type;
  typedef ::mB::B_ptr _stub_ptr_type;
  typedef ::mB::B_var _stub_var_type;

  B (const B& rhs);
  virtual ~B () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::mB::B *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual ::mA::A_ptr theA () = 0;

  static void _get_theA_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void theA (
    ::mA::A_ptr theA) = 0;

  static void _set_theA_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_B_Direct_Proxy_Impl
  : public virtual ::POA_mA::_TAO_A_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_B_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _get_theA (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  _set_theA (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_BResponseHandler;
typedef TAO_AMH_BResponseHandler *TAO_AMH_BResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_BResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::mB::AMH_BResponseHandler
{
public:
  TAO_AMH_BResponseHandler () = default;
  virtual ~TAO_AMH_BResponseHandler () = default;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_theA (
    ::mA::A_ptr return_value) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void get_theA_excep (
    ::mB::AMH_BExceptionHolder * holder) override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_theA () override;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

  void set_theA_excep (
    ::mB::AMH_BExceptionHolder * holder) override;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_BHandler;
typedef AMI_BHandler *AMI_BHandler_ptr;

class _TAO_AMI_BHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_BHandler
  : public virtual POA_mA::AMI_AHandler
{
protected:
  AMI_BHandler ();

public:
  /// Useful for template programming.
  typedef ::mB::AMI_BHandler _stub_type;
  typedef ::mB::AMI_BHandler_ptr _stub_ptr_type;
  typedef ::mB::AMI_BHandler_var _stub_var_type;

  AMI_BHandler (const AMI_BHandler& rhs);
  virtual ~AMI_BHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::mB::AMI_BHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_theA (
    ::mA::A_ptr ami_return_val) = 0;

  static void get_theA_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void get_theA_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void get_theA_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_theA () = 0;

  static void set_theA_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

  virtual void set_theA_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void set_theA_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_BHandler_Direct_Proxy_Impl
  : public virtual ::POA_mA::_TAO_AMI_AHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_BHandler_Direct_Proxy_Impl ();
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_theA (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  get_theA_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_theA (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

  static void
  set_theA_excep (
    TAO_Abstract_ServantBase *servant, TAO::Argument **args);
  
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module mB
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_mC
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_C;
  typedef AMH_C *AMH_C_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_C
    : public virtual POA_mB::AMH_B
      
  {
  protected:
    AMH_C ();
  
  public:
    AMH_C (const AMH_C& rhs);
    virtual ~AMH_C () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    mC::C *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class C;
typedef C *C_ptr;

class _TAO_C_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export C
  : public virtual POA_mB::B
{
protected:
  C ();

public:
  /// Useful for template programming.
  typedef ::mC::C _stub_type;
  typedef ::mC::C_ptr _stub_ptr_type;
  typedef ::mC::C_var _stub_var_type;

  C (const C& rhs);
  virtual ~C () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::mC::C *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_C_Direct_Proxy_Impl
  : public virtual ::POA_mB::_TAO_B_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_C_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_CResponseHandler;
typedef TAO_AMH_CResponseHandler *TAO_AMH_CResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_CResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::mC::AMH_CResponseHandler
{
public:
  TAO_AMH_CResponseHandler () = default;
  virtual ~TAO_AMH_CResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_CHandler;
typedef AMI_CHandler *AMI_CHandler_ptr;

class _TAO_AMI_CHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_CHandler
  : public virtual POA_mB::AMI_BHandler
{
protected:
  AMI_CHandler ();

public:
  /// Useful for template programming.
  typedef ::mC::AMI_CHandler _stub_type;
  typedef ::mC::AMI_CHandler_ptr _stub_ptr_type;
  typedef ::mC::AMI_CHandler_var _stub_var_type;

  AMI_CHandler (const AMI_CHandler& rhs);
  virtual ~AMI_CHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::mC::AMI_CHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_CHandler_Direct_Proxy_Impl
  : public virtual ::POA_mB::_TAO_AMI_BHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_CHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module mC
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_Schmoik
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_foo;
  typedef AMH_foo *AMH_foo_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_foo
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_foo ();
  
  public:
    AMH_foo (const AMH_foo& rhs);
    virtual ~AMH_foo () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    Schmoik::foo *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class foo;
typedef foo *foo_ptr;

class _TAO_foo_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export foo
  : public virtual PortableServer::ServantBase
{
protected:
  foo ();

public:
  /// Useful for template programming.
  typedef ::Schmoik::foo _stub_type;
  typedef ::Schmoik::foo_ptr _stub_ptr_type;
  typedef ::Schmoik::foo_var _stub_var_type;

  foo (const foo& rhs);
  virtual ~foo () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Schmoik::foo *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_foo_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_foo_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_fooResponseHandler;
typedef TAO_AMH_fooResponseHandler *TAO_AMH_fooResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_fooResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::Schmoik::AMH_fooResponseHandler
{
public:
  TAO_AMH_fooResponseHandler () = default;
  virtual ~TAO_AMH_fooResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_fooHandler;
typedef AMI_fooHandler *AMI_fooHandler_ptr;

class _TAO_AMI_fooHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_fooHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_fooHandler ();

public:
  /// Useful for template programming.
  typedef ::Schmoik::AMI_fooHandler _stub_type;
  typedef ::Schmoik::AMI_fooHandler_ptr _stub_ptr_type;
  typedef ::Schmoik::AMI_fooHandler_var _stub_var_type;

  AMI_fooHandler (const AMI_fooHandler& rhs);
  virtual ~AMI_fooHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Schmoik::AMI_fooHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_fooHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_fooHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Schmoik
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_Schmoik
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Schmoik
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_Schmoik
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Schmoik
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_Thwoik
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Thwoik
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_Thwoik
{
  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Thwoik
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_Thwoik
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_TestType;
  typedef AMH_TestType *AMH_TestType_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_TestType
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_TestType ();
  
  public:
    AMH_TestType (const AMH_TestType& rhs);
    virtual ~AMH_TestType () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    Thwoik::TestType *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class TestType;
typedef TestType *TestType_ptr;

class _TAO_TestType_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export TestType
  : public virtual PortableServer::ServantBase
{
protected:
  TestType ();

public:
  /// Useful for template programming.
  typedef ::Thwoik::TestType _stub_type;
  typedef ::Thwoik::TestType_ptr _stub_ptr_type;
  typedef ::Thwoik::TestType_var _stub_var_type;

  TestType (const TestType& rhs);
  virtual ~TestType () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Thwoik::TestType *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_TestType_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_TestType_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_TestTypeResponseHandler;
typedef TAO_AMH_TestTypeResponseHandler *TAO_AMH_TestTypeResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_TestTypeResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::Thwoik::AMH_TestTypeResponseHandler
{
public:
  TAO_AMH_TestTypeResponseHandler () = default;
  virtual ~TAO_AMH_TestTypeResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_TestTypeHandler;
typedef AMI_TestTypeHandler *AMI_TestTypeHandler_ptr;

class _TAO_AMI_TestTypeHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_TestTypeHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_TestTypeHandler ();

public:
  /// Useful for template programming.
  typedef ::Thwoik::AMI_TestTypeHandler _stub_type;
  typedef ::Thwoik::AMI_TestTypeHandler_ptr _stub_ptr_type;
  typedef ::Thwoik::AMI_TestTypeHandler_var _stub_var_type;

  AMI_TestTypeHandler (const AMI_TestTypeHandler& rhs);
  virtual ~AMI_TestTypeHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Thwoik::AMI_TestTypeHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_TestTypeHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_TestTypeHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Thwoik
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_A_mod
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_Foo;
  typedef AMH_Foo *AMH_Foo_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_Foo
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_Foo ();
  
  public:
    AMH_Foo (const AMH_Foo& rhs);
    virtual ~AMH_Foo () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    A_mod::Foo *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class Foo;
typedef Foo *Foo_ptr;

class _TAO_Foo_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export Foo
  : public virtual PortableServer::ServantBase
{
protected:
  Foo ();

public:
  /// Useful for template programming.
  typedef ::A_mod::Foo _stub_type;
  typedef ::A_mod::Foo_ptr _stub_ptr_type;
  typedef ::A_mod::Foo_var _stub_var_type;

  Foo (const Foo& rhs);
  virtual ~Foo () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::A_mod::Foo *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_Foo_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_Foo_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_FooResponseHandler;
typedef TAO_AMH_FooResponseHandler *TAO_AMH_FooResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_FooResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::A_mod::AMH_FooResponseHandler
{
public:
  TAO_AMH_FooResponseHandler () = default;
  virtual ~TAO_AMH_FooResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_FooHandler;
typedef AMI_FooHandler *AMI_FooHandler_ptr;

class _TAO_AMI_FooHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_FooHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  AMI_FooHandler ();

public:
  /// Useful for template programming.
  typedef ::A_mod::AMI_FooHandler _stub_type;
  typedef ::A_mod::AMI_FooHandler_ptr _stub_ptr_type;
  typedef ::A_mod::AMI_FooHandler_var _stub_var_type;

  AMI_FooHandler (const AMI_FooHandler& rhs);
  virtual ~AMI_FooHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::A_mod::AMI_FooHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_FooHandler_Direct_Proxy_Impl
  : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_FooHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace B_mod
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

  class AMH_Foo;
  typedef AMH_Foo *AMH_Foo_ptr;

  class TAO_IDL_TEST_STUB_Export AMH_Foo
    : public virtual POA_A_mod::AMH_Foo
      
  {
  protected:
    AMH_Foo ();
  
  public:
    AMH_Foo (const AMH_Foo& rhs);
    virtual ~AMH_Foo () = default;


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    A_mod::B_mod::Foo *_this ();

  virtual const char* _interface_repository_id () const;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class Foo;
typedef Foo *Foo_ptr;

class _TAO_Foo_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export Foo
  : public virtual POA_A_mod::Foo
{
protected:
  Foo ();

public:
  /// Useful for template programming.
  typedef ::A_mod::B_mod::Foo _stub_type;
  typedef ::A_mod::B_mod::Foo_ptr _stub_ptr_type;
  typedef ::A_mod::B_mod::Foo_var _stub_var_type;

  Foo (const Foo& rhs);
  virtual ~Foo () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::A_mod::B_mod::Foo *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_Foo_Direct_Proxy_Impl
  : public virtual ::POA_A_mod::_TAO_Foo_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_Foo_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

class TAO_AMH_FooResponseHandler;
typedef TAO_AMH_FooResponseHandler *TAO_AMH_FooResponseHandler_ptr;

class TAO_IDL_TEST_STUB_Export TAO_AMH_FooResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::A_mod::B_mod::AMH_FooResponseHandler
{
public:
  TAO_AMH_FooResponseHandler () = default;
  virtual ~TAO_AMH_FooResponseHandler () = default;
};


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72



class AMI_FooHandler;
typedef AMI_FooHandler *AMI_FooHandler_ptr;

class _TAO_AMI_FooHandler_Direct_Proxy_Impl;

class TAO_IDL_TEST_STUB_Export AMI_FooHandler
  : public virtual POA_A_mod::AMI_FooHandler
{
protected:
  AMI_FooHandler ();

public:
  /// Useful for template programming.
  typedef ::A_mod::B_mod::AMI_FooHandler _stub_type;
  typedef ::A_mod::B_mod::AMI_FooHandler_ptr _stub_ptr_type;
  typedef ::A_mod::B_mod::AMI_FooHandler_var _stub_var_type;

  AMI_FooHandler (const AMI_FooHandler& rhs);
  virtual ~AMI_FooHandler () = default;

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::A_mod::B_mod::AMI_FooHandler *_this ();
  
  virtual const char* _interface_repository_id () const;
};
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23



///////////////////////////////////////////////////////////////////////
//                    Direct  Impl. Declaration
//

class TAO_IDL_TEST_STUB_Export _TAO_AMI_FooHandler_Direct_Proxy_Impl
  : public virtual ::POA_A_mod::_TAO_AMI_FooHandler_Direct_Proxy_Impl
{
public:
  virtual ~_TAO_AMI_FooHandler_Direct_Proxy_Impl ();
};

//
//                Direct  Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////




// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module A_mod::B_mod


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module A_mod
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_m1
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace m2
  {
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

    namespace m3a
    {
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

      namespace m4a
      {
        
      
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

      } // module m1::m2::m3a::m4a
    
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

    } // module m1::m2::m3a
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

  } // module m1::m2


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module m1
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_m1
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace m2
  {
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

    namespace m3a
    {
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

      namespace m4b
      {
        
      
      
      // TAO_IDL - Generated from
      // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

      } // module m1::m2::m3a::m4b
    
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

    } // module m1::m2::m3a
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

  } // module m1::m2


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module m1
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_m1
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace m2
  {
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

    namespace m3b
    {
      
    
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

    } // module m1::m2::m3b
  
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

  } // module m1::m2


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module m1

#include "reopened_modulesS_T.h"


#include /**/ "ace/post.h"

#endif /* ifndef */

