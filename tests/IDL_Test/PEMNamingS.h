// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:454

#ifndef _TAO_IDL_PEMNAMINGS_J6B3KM_H_
#define _TAO_IDL_PEMNAMINGS_J6B3KM_H_

#include /**/ "ace/pre.h"

#include "PEMNamingC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Messaging/MessagingS.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
#include "tao/Messaging/AMH_Response_Handler.h"

#include /**/ "TAO_IDL_TEST_stub_export.h"
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:889

  

  template<>
  class SArg_Traits< ::Plesk::TBool>
    : public
        Basic_SArg_Traits_T<
            ::Plesk::TBool,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::Plesk::TProperty>
    : public
        Var_Size_SArg_Traits_T<
            ::Plesk::TProperty,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:671

  

  template<>
  class SArg_Traits< ::Plesk::TPropertyList>
    : public
        Var_Size_SArg_Traits_T<
            ::Plesk::TPropertyList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::Plesk::Naming::NamingContext>
    : public
        Var_Size_SArg_Traits_T<
            ::Plesk::Naming::NamingContext,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_PLESK_NAMING_OBJECTRESOLVER__SARG_TRAITS_)
#define _PLESK_NAMING_OBJECTRESOLVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Plesk::Naming::ObjectResolver>
    : public Object_SArg_Traits_T<
        ::Plesk::Naming::ObjectResolver_ptr,
        ::Plesk::Naming::ObjectResolver_var,
        ::Plesk::Naming::ObjectResolver_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:298

  

#if !defined (_PLESK_NAMING_AMH_OBJECTRESOLVEREXCEPTIONHOLDER__SARG_TRAITS_)
#define _PLESK_NAMING_AMH_OBJECTRESOLVEREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Plesk::Naming::AMH_ObjectResolverExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Plesk::Naming::AMH_ObjectResolverExceptionHolder *,
            ::Plesk::Naming::AMH_ObjectResolverExceptionHolder_var,
            ::Plesk::Naming::AMH_ObjectResolverExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_PLESK_NAMING_AMI_OBJECTRESOLVERHANDLER__SARG_TRAITS_)
#define _PLESK_NAMING_AMI_OBJECTRESOLVERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Plesk::Naming::AMI_ObjectResolverHandler>
    : public Object_SArg_Traits_T<
        ::Plesk::Naming::AMI_ObjectResolverHandler_ptr,
        ::Plesk::Naming::AMI_ObjectResolverHandler_var,
        ::Plesk::Naming::AMI_ObjectResolverHandler_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_Plesk
{
  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

  namespace Naming
  {
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_sh.cpp:45

    class AMH_ObjectResolver;
    typedef AMH_ObjectResolver *AMH_ObjectResolver_ptr;

    class TAO_IDL_TEST_STUB_Export AMH_ObjectResolver
      : public virtual PortableServer::ServantBase
    {
    protected:
      AMH_ObjectResolver ();
    
    public:
      AMH_ObjectResolver (const AMH_ObjectResolver& rhs);
      virtual ~AMH_ObjectResolver () = default;


      virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

      virtual void _dispatch (
          TAO_ServerRequest &req,
          TAO::Portable_Server::Servant_Upcall *_servant_upcall);
      
      Plesk::Naming::ObjectResolver *_this ();

    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

    static void resolve_skel (
        TAO_ServerRequest &_tao_req,
        TAO::Portable_Server::Servant_Upcall *_tao_obj,
        TAO_ServantBase *_tao_servant_upcall);
      
    virtual void resolve (
        Plesk::Naming::AMH_ObjectResolverResponseHandler_ptr _tao_rh,
        const char * service_type,
        ::Plesk::TObjectID sc_id
      ) = 0;
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_sh.cpp:126

    static void resolve_sc_skel (
        TAO_ServerRequest &_tao_req,
        TAO::Portable_Server::Servant_Upcall *_tao_obj,
        TAO_ServantBase *_tao_servant_upcall);
      
    virtual void resolve_sc (
        Plesk::Naming::AMH_ObjectResolverResponseHandler_ptr _tao_rh,
        const char * service_type,
        const char * version,
        ::Plesk::TObjectID sc_id
      ) = 0;
    
  };

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class ObjectResolver;
  typedef ObjectResolver *ObjectResolver_ptr;

  class _TAO_ObjectResolver_Direct_Proxy_Impl;

  class TAO_IDL_TEST_STUB_Export ObjectResolver
    : public virtual PortableServer::ServantBase
  {
  protected:
    ObjectResolver ();
  
  public:
    /// Useful for template programming.
    typedef ::Plesk::Naming::ObjectResolver _stub_type;
    typedef ::Plesk::Naming::ObjectResolver_ptr _stub_ptr_type;
    typedef ::Plesk::Naming::ObjectResolver_var _stub_var_type;

    ObjectResolver (const ObjectResolver& rhs) = default;
    virtual ~ObjectResolver () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Plesk::Naming::ObjectResolver *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual ::CORBA::Object_ptr resolve (
      const char * service_type,
      ::Plesk::TObjectID & sc_id) = 0;

    static void resolve_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual ::CORBA::Object_ptr resolve_sc (
      const char * service_type,
      const char * version,
      ::Plesk::TObjectID & sc_id) = 0;

    static void resolve_sc_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23

  

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class TAO_IDL_TEST_STUB_Export _TAO_ObjectResolver_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_ObjectResolver_Direct_Proxy_Impl ();
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    resolve (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    resolve_sc (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/amh_rh_sh.cpp:49

  class TAO_AMH_ObjectResolverResponseHandler;
  typedef TAO_AMH_ObjectResolverResponseHandler *TAO_AMH_ObjectResolverResponseHandler_ptr;

  class TAO_IDL_TEST_STUB_Export TAO_AMH_ObjectResolverResponseHandler
    : public TAO_AMH_Response_Handler,
      public ::Plesk::Naming::AMH_ObjectResolverResponseHandler
  {
  public:
    TAO_AMH_ObjectResolverResponseHandler () = default;
    virtual ~TAO_AMH_ObjectResolverResponseHandler () = default;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

    void resolve (
      ::CORBA::Object_ptr return_value,
      ::Plesk::TObjectID sc_id) override;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

    void resolve_excep (
      ::Plesk::Naming::AMH_ObjectResolverExceptionHolder * holder) override;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

    void resolve_sc (
      ::CORBA::Object_ptr return_value,
      ::Plesk::TObjectID sc_id) override;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:59

    void resolve_sc_excep (
      ::Plesk::Naming::AMH_ObjectResolverExceptionHolder * holder) override;
  };

  
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class AMI_ObjectResolverHandler;
  typedef AMI_ObjectResolverHandler *AMI_ObjectResolverHandler_ptr;

  class _TAO_AMI_ObjectResolverHandler_Direct_Proxy_Impl;

  class TAO_IDL_TEST_STUB_Export AMI_ObjectResolverHandler
    : public virtual POA_Messaging::ReplyHandler
  {
  protected:
    AMI_ObjectResolverHandler ();
  
  public:
    /// Useful for template programming.
    typedef ::Plesk::Naming::AMI_ObjectResolverHandler _stub_type;
    typedef ::Plesk::Naming::AMI_ObjectResolverHandler_ptr _stub_ptr_type;
    typedef ::Plesk::Naming::AMI_ObjectResolverHandler_var _stub_var_type;

    AMI_ObjectResolverHandler (const AMI_ObjectResolverHandler& rhs) = default;
    virtual ~AMI_ObjectResolverHandler () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Plesk::Naming::AMI_ObjectResolverHandler *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void resolve (
      ::CORBA::Object_ptr ami_return_val,
      ::Plesk::TObjectID sc_id) = 0;

    static void resolve_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void resolve_excep (
      ::Messaging::ExceptionHolder * excep_holder) = 0;

    static void resolve_excep_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void resolve_sc (
      ::CORBA::Object_ptr ami_return_val,
      ::Plesk::TObjectID sc_id) = 0;

    static void resolve_sc_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void resolve_sc_excep (
      ::Messaging::ExceptionHolder * excep_holder) = 0;

    static void resolve_sc_excep_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };
  // TAO_IDL - Generated from
  // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:23

  

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class TAO_IDL_TEST_STUB_Export _TAO_AMI_ObjectResolverHandler_Direct_Proxy_Impl
    : public virtual ::POA_Messaging::_TAO_ReplyHandler_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_AMI_ObjectResolverHandler_Direct_Proxy_Impl ();
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    resolve (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    resolve_excep (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    resolve_sc (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
    // TAO_IDL - Generated from
    // /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:25

    static void
    resolve_sc_excep (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Plesk::Naming


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module Plesk

#include "PEMNamingS_T.h"


#include /**/ "ace/post.h"

#endif /* ifndef */

