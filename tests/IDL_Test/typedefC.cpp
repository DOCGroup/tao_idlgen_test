// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:372


#include "typedefC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Messaging/Asynch_Invocation_Adapter.h"
#include "tao/Messaging/ExceptionHolder_i.h"
#include "tao/Object_T.h"
#include "cstring"
#include "memory"

#if !defined (__ACE_INLINE__)
#include "typedefC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_cs.cpp:89

TAO_A5_slice *
TAO_A5_dup (const TAO_A5_slice *_tao_src_array)
{
  TAO_A5_slice *_tao_dup_array = TAO_A5_alloc ();
  
  if (_tao_dup_array)
    {
      TAO_A5_copy (_tao_dup_array, _tao_src_array);
    }
  
  return _tao_dup_array;
}

TAO_A5_slice *
TAO_A5_alloc ()
{
  TAO_A5_slice *retval {};
  ACE_NEW_RETURN (retval, ::CORBA::Char[5], nullptr);
  return retval;
}

void
TAO_A5_free (TAO_A5_slice *_tao_slice)
{
  delete [] _tao_slice;
}

void
TAO_A5_copy (
    TAO_A5_slice * _tao_to,
    const TAO_A5_slice *_tao_from)
{
  // Copy each individual element.
  for (::CORBA::ULong i0 = 0; i0 < 5; ++i0)
    {
      _tao_to[i0] = _tao_from[i0];
    }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_cs.cpp:89

TAO_M5_slice *
TAO_M5_dup (const TAO_M5_slice *_tao_src_array)
{
  TAO_M5_slice *_tao_dup_array = TAO_M5_alloc ();
  
  if (_tao_dup_array)
    {
      TAO_M5_copy (_tao_dup_array, _tao_src_array);
    }
  
  return _tao_dup_array;
}

TAO_M5_slice *
TAO_M5_alloc ()
{
  TAO_M5_slice *retval {};
  ACE_NEW_RETURN (retval, TAO_J5[5], nullptr);
  return retval;
}

void
TAO_M5_free (TAO_M5_slice *_tao_slice)
{
  delete [] _tao_slice;
}

void
TAO_M5_copy (
    TAO_M5_slice * _tao_to,
    const TAO_M5_slice *_tao_from)
{
  // Copy each individual element.
  for (::CORBA::ULong i0 = 0; i0 < 5; ++i0)
    {
      // call the underlying _copy
      TAO_J5_copy (_tao_to[i0], _tao_from[i0]);
    }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/array_cs.cpp:89

TAO_Z5_slice *
TAO_Z5_dup (const TAO_Z5_slice *_tao_src_array)
{
  TAO_Z5_slice *_tao_dup_array = TAO_Z5_alloc ();
  
  if (_tao_dup_array)
    {
      TAO_Z5_copy (_tao_dup_array, _tao_src_array);
    }
  
  return _tao_dup_array;
}

TAO_Z5_slice *
TAO_Z5_alloc ()
{
  TAO_Z5_slice *retval {};
  ACE_NEW_RETURN (retval, TAO_V5[5], nullptr);
  return retval;
}

void
TAO_Z5_free (TAO_Z5_slice *_tao_slice)
{
  delete [] _tao_slice;
}

void
TAO_Z5_copy (
    TAO_Z5_slice * _tao_to,
    const TAO_Z5_slice *_tao_from)
{
  // Copy each individual element.
  for (::CORBA::ULong i0 = 0; i0 < 5; ++i0)
    {
      // call the underlying _copy
      TAO_V5_copy (_tao_to[i0], _tao_from[i0]);
    }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for TestModule::TestInterface.

TestModule::TestInterface_ptr
TAO::Objref_Traits<TestModule::TestInterface>::duplicate (TestModule::TestInterface_ptr p)
{
  return TestModule::TestInterface::_duplicate (p);
}

void
TAO::Objref_Traits<TestModule::TestInterface>::release (TestModule::TestInterface_ptr p)
{
  ::CORBA::release (p);
}

TestModule::TestInterface_ptr
TAO::Objref_Traits<TestModule::TestInterface>::nil ()
{
  return TestModule::TestInterface::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<TestModule::TestInterface>::marshal (const TestModule::TestInterface_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
TestModule::TestInterface::set_typedef_1 (
  const char * typ1)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::typedef_1_32>::in_arg_val _tao_typ1 (typ1);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_typ1)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "set_typedef_1",
      13,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
TestModule::TestInterface::set_typedef_2 (
  const char * typ2)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::typedef_2_32>::in_arg_val _tao_typ2 (typ2);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_typ2)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "set_typedef_2",
      13,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/ami_cs.cpp:54



void
TestModule::TestInterface::sendc_set_typedef_1 (
  ::TestModule::AMI_TestInterfaceHandler_ptr ami_handler,
  const char * typ1)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::typedef_1_32>::in_arg_val _tao_typ1 (typ1);

  TAO::Argument *_the_tao_operation_signature[] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_typ1)
    };

  TAO::Asynch_Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "set_typedef_1",
      13,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _invocation_call.invoke (
      ami_handler,
      &TestModule::AMI_TestInterfaceHandler::set_typedef_1_reply_stub
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/ami_cs.cpp:54



void
TestModule::TestInterface::sendc_set_typedef_2 (
  ::TestModule::AMI_TestInterfaceHandler_ptr ami_handler,
  const char * typ2)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::typedef_2_32>::in_arg_val _tao_typ2 (typ2);

  TAO::Argument *_the_tao_operation_signature[] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_typ2)
    };

  TAO::Asynch_Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "set_typedef_2",
      13,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _invocation_call.invoke (
      ami_handler,
      &TestModule::AMI_TestInterfaceHandler::set_typedef_2_reply_stub
    );
}

TestModule::TestInterface::TestInterface ()
{
}
void
TestModule::TestInterface::_tao_any_destructor (void *_tao_void_pointer)
{
  TestInterface *_tao_tmp_pointer =
    static_cast<TestInterface *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

TestModule::TestInterface_ptr
TestModule::TestInterface::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<TestInterface>::narrow (_tao_objref, "IDL:TestModule/TestInterface:1.0");
}

TestModule::TestInterface_ptr
TestModule::TestInterface::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<TestInterface>::unchecked_narrow (_tao_objref);
}

TestModule::TestInterface_ptr
TestModule::TestInterface::_nil ()
{
  return nullptr;
}

TestModule::TestInterface_ptr
TestModule::TestInterface::_duplicate (TestInterface_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
TestModule::TestInterface::_tao_release (TestInterface_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
TestModule::TestInterface::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:TestModule/TestInterface:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* TestModule::TestInterface::_interface_repository_id () const
{
  return "IDL:TestModule/TestInterface:1.0";
}

const char* TestModule::TestInterface::_desc_repository_id ()
{
  return "IDL:TestModule/TestInterface:1.0";
}

const char* TestModule::TestInterface::_desc_interface_name ()
{
  return "TestInterface";
}

::CORBA::Boolean
TestModule::TestInterface::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:52



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


void
TAO::Value_Traits<TestModule::AMH_TestInterfaceExceptionHolder>::add_ref (TestModule::AMH_TestInterfaceExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<TestModule::AMH_TestInterfaceExceptionHolder>::remove_ref (TestModule::AMH_TestInterfaceExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<TestModule::AMH_TestInterfaceExceptionHolder>::release (TestModule::AMH_TestInterfaceExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

TAO_END_VERSIONED_NAMESPACE_DECL



TestModule::AMH_TestInterfaceExceptionHolder *
TestModule::AMH_TestInterfaceExceptionHolder::_downcast (::CORBA::ValueBase *v)
{
  return dynamic_cast<::TestModule::AMH_TestInterfaceExceptionHolder *> (v);
}

const char *
TestModule::AMH_TestInterfaceExceptionHolder::_tao_obv_repository_id () const
{
  return this->_tao_obv_static_repository_id ();
}

void
TestModule::AMH_TestInterfaceExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
TestModule::AMH_TestInterfaceExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_TestInterfaceExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_TestInterfaceExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

TestModule::AMH_TestInterfaceExceptionHolder::~AMH_TestInterfaceExceptionHolder ()
{}

::CORBA::ValueBase *
TestModule::AMH_TestInterfaceExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_TestInterfaceExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
TestModule::AMH_TestInterfaceExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
TestModule::AMH_TestInterfaceExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
TestModule::AMH_TestInterfaceExceptionHolder::_tao_match_formal_type (ptrdiff_t) const
{
  return false;
}

::CORBA::Boolean
TestModule::AMH_TestInterfaceExceptionHolder::_tao_marshal__TestModule_AMH_TestInterfaceExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
TestModule::AMH_TestInterfaceExceptionHolder::_tao_unmarshal__TestModule_AMH_TestInterfaceExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
TestModule::AMH_TestInterfaceExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_TestInterfaceExceptionHolder *&new_object)
{
  ::CORBA::ValueBase *base {};
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_TestInterfaceExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_TestInterfaceExceptionHolder::_downcast (base);
  if (nullptr == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
TestModule::AMH_TestInterfaceExceptionHolder::raise_set_typedef_1 ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
TestModule::AMH_TestInterfaceExceptionHolder::raise_set_typedef_2 ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
TestModule::AMH_TestInterfaceExceptionHolder::raise_sendc_set_typedef_1 ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
TestModule::AMH_TestInterfaceExceptionHolder::raise_sendc_set_typedef_2 ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for TestModule::AMH_TestInterfaceResponseHandler.

TestModule::AMH_TestInterfaceResponseHandler_ptr
TAO::Objref_Traits<TestModule::AMH_TestInterfaceResponseHandler>::duplicate (TestModule::AMH_TestInterfaceResponseHandler_ptr p)
{
  return TestModule::AMH_TestInterfaceResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<TestModule::AMH_TestInterfaceResponseHandler>::release (TestModule::AMH_TestInterfaceResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

TestModule::AMH_TestInterfaceResponseHandler_ptr
TAO::Objref_Traits<TestModule::AMH_TestInterfaceResponseHandler>::nil ()
{
  return TestModule::AMH_TestInterfaceResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<TestModule::AMH_TestInterfaceResponseHandler>::marshal (const TestModule::AMH_TestInterfaceResponseHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



TestModule::AMH_TestInterfaceResponseHandler::AMH_TestInterfaceResponseHandler ()
{}void
TestModule::AMH_TestInterfaceResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_TestInterfaceResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_TestInterfaceResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

TestModule::AMH_TestInterfaceResponseHandler_ptr
TestModule::AMH_TestInterfaceResponseHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_TestInterfaceResponseHandler::_duplicate (
      dynamic_cast<AMH_TestInterfaceResponseHandler_ptr> (_tao_objref));
}

TestModule::AMH_TestInterfaceResponseHandler_ptr
TestModule::AMH_TestInterfaceResponseHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_TestInterfaceResponseHandler::_duplicate (
      dynamic_cast<AMH_TestInterfaceResponseHandler_ptr> (_tao_objref));
}

TestModule::AMH_TestInterfaceResponseHandler_ptr
TestModule::AMH_TestInterfaceResponseHandler::_nil ()
{
  return nullptr;
}

TestModule::AMH_TestInterfaceResponseHandler_ptr
TestModule::AMH_TestInterfaceResponseHandler::_duplicate (AMH_TestInterfaceResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
TestModule::AMH_TestInterfaceResponseHandler::_tao_release (AMH_TestInterfaceResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
TestModule::AMH_TestInterfaceResponseHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:TestModule/AMH_TestInterfaceResponseHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* TestModule::AMH_TestInterfaceResponseHandler::_interface_repository_id () const
{
  return "IDL:TestModule/AMH_TestInterfaceResponseHandler:1.0";
}

const char* TestModule::AMH_TestInterfaceResponseHandler::_desc_repository_id ()
{
  return "IDL:TestModule/AMH_TestInterfaceResponseHandler:1.0";
}

const char* TestModule::AMH_TestInterfaceResponseHandler::_desc_interface_name ()
{
  return "AMH_TestInterfaceResponseHandler";
}

::CORBA::Boolean
TestModule::AMH_TestInterfaceResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for TestModule::AMI_TestInterfaceHandler.

TestModule::AMI_TestInterfaceHandler_ptr
TAO::Objref_Traits<TestModule::AMI_TestInterfaceHandler>::duplicate (TestModule::AMI_TestInterfaceHandler_ptr p)
{
  return TestModule::AMI_TestInterfaceHandler::_duplicate (p);
}

void
TAO::Objref_Traits<TestModule::AMI_TestInterfaceHandler>::release (TestModule::AMI_TestInterfaceHandler_ptr p)
{
  ::CORBA::release (p);
}

TestModule::AMI_TestInterfaceHandler_ptr
TAO::Objref_Traits<TestModule::AMI_TestInterfaceHandler>::nil ()
{
  return TestModule::AMI_TestInterfaceHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<TestModule::AMI_TestInterfaceHandler>::marshal (const TestModule::AMI_TestInterfaceHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
TestModule::AMI_TestInterfaceHandler::set_typedef_1 ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "set_typedef_1",
      13,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);
}

void
TestModule::AMI_TestInterfaceHandler::set_typedef_1_reply_stub (
  TAO_InputCDR &_tao_in,
  ::Messaging::ReplyHandler_ptr _tao_reply_handler,
  ::CORBA::ULong reply_status)
{
  // Retrieve Reply Handler object.
  TestModule::AMI_TestInterfaceHandler_var _tao_reply_handler_object =
    TestModule::AMI_TestInterfaceHandler::_narrow (_tao_reply_handler);

  // Exception handling
  switch (reply_status)
  {
    case TAO_AMI_REPLY_OK:
    {
      // Demarshall all the arguments.
      // Invoke the call back method.
      _tao_reply_handler_object->set_typedef_1 (
          
        );
      break;
    }
    case TAO_AMI_REPLY_USER_EXCEPTION:
    case TAO_AMI_REPLY_SYSTEM_EXCEPTION:
    {
      const ACE_Message_Block* cdr = _tao_in.start ();
      ::CORBA::OctetSeq _tao_marshaled_exception (
          static_cast <CORBA::ULong> (cdr->length ()),
          static_cast <CORBA::ULong> (cdr->length ()),
          reinterpret_cast <unsigned char*> (cdr->rd_ptr ()),
          0);
      ::Messaging::ExceptionHolder* exception_holder_ptr {};
      ACE_NEW (
          exception_holder_ptr,
          ::TAO::ExceptionHolder (
            (reply_status == TAO_AMI_REPLY_SYSTEM_EXCEPTION),
            _tao_in.byte_order (),
            _tao_marshaled_exception,
            0,
            0,
            _tao_in.char_translator (),
            _tao_in.wchar_translator ()));
        
      ::Messaging::ExceptionHolder_var exception_holder_var = exception_holder_ptr;
      _tao_reply_handler_object->set_typedef_1_excep (
          exception_holder_var);
      break;
    }
    case TAO_AMI_REPLY_NOT_OK:
      // @@ Michael: Not even the spec mentions this case.
      //             We have to think about this case.
      break;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
TestModule::AMI_TestInterfaceHandler::set_typedef_1_excep (
  ::Messaging::ExceptionHolder * excep_holder)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder (excep_holder);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_excep_holder)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "set_typedef_1_excep",
      19,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
TestModule::AMI_TestInterfaceHandler::set_typedef_2 ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "set_typedef_2",
      13,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);
}

void
TestModule::AMI_TestInterfaceHandler::set_typedef_2_reply_stub (
  TAO_InputCDR &_tao_in,
  ::Messaging::ReplyHandler_ptr _tao_reply_handler,
  ::CORBA::ULong reply_status)
{
  // Retrieve Reply Handler object.
  TestModule::AMI_TestInterfaceHandler_var _tao_reply_handler_object =
    TestModule::AMI_TestInterfaceHandler::_narrow (_tao_reply_handler);

  // Exception handling
  switch (reply_status)
  {
    case TAO_AMI_REPLY_OK:
    {
      // Demarshall all the arguments.
      // Invoke the call back method.
      _tao_reply_handler_object->set_typedef_2 (
          
        );
      break;
    }
    case TAO_AMI_REPLY_USER_EXCEPTION:
    case TAO_AMI_REPLY_SYSTEM_EXCEPTION:
    {
      const ACE_Message_Block* cdr = _tao_in.start ();
      ::CORBA::OctetSeq _tao_marshaled_exception (
          static_cast <CORBA::ULong> (cdr->length ()),
          static_cast <CORBA::ULong> (cdr->length ()),
          reinterpret_cast <unsigned char*> (cdr->rd_ptr ()),
          0);
      ::Messaging::ExceptionHolder* exception_holder_ptr {};
      ACE_NEW (
          exception_holder_ptr,
          ::TAO::ExceptionHolder (
            (reply_status == TAO_AMI_REPLY_SYSTEM_EXCEPTION),
            _tao_in.byte_order (),
            _tao_marshaled_exception,
            0,
            0,
            _tao_in.char_translator (),
            _tao_in.wchar_translator ()));
        
      ::Messaging::ExceptionHolder_var exception_holder_var = exception_holder_ptr;
      _tao_reply_handler_object->set_typedef_2_excep (
          exception_holder_var);
      break;
    }
    case TAO_AMI_REPLY_NOT_OK:
      // @@ Michael: Not even the spec mentions this case.
      //             We have to think about this case.
      break;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
TestModule::AMI_TestInterfaceHandler::set_typedef_2_excep (
  ::Messaging::ExceptionHolder * excep_holder)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder (excep_holder);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_excep_holder)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "set_typedef_2_excep",
      19,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}

TestModule::AMI_TestInterfaceHandler::AMI_TestInterfaceHandler ()
{
}
void
TestModule::AMI_TestInterfaceHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_TestInterfaceHandler *_tao_tmp_pointer =
    static_cast<AMI_TestInterfaceHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

TestModule::AMI_TestInterfaceHandler_ptr
TestModule::AMI_TestInterfaceHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_TestInterfaceHandler>::narrow (_tao_objref, "IDL:TestModule/AMI_TestInterfaceHandler:1.0");
}

TestModule::AMI_TestInterfaceHandler_ptr
TestModule::AMI_TestInterfaceHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_TestInterfaceHandler>::unchecked_narrow (_tao_objref);
}

TestModule::AMI_TestInterfaceHandler_ptr
TestModule::AMI_TestInterfaceHandler::_nil ()
{
  return nullptr;
}

TestModule::AMI_TestInterfaceHandler_ptr
TestModule::AMI_TestInterfaceHandler::_duplicate (AMI_TestInterfaceHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
TestModule::AMI_TestInterfaceHandler::_tao_release (AMI_TestInterfaceHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
TestModule::AMI_TestInterfaceHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:TestModule/AMI_TestInterfaceHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* TestModule::AMI_TestInterfaceHandler::_interface_repository_id () const
{
  return "IDL:TestModule/AMI_TestInterfaceHandler:1.0";
}

const char* TestModule::AMI_TestInterfaceHandler::_desc_repository_id ()
{
  return "IDL:TestModule/AMI_TestInterfaceHandler:1.0";
}

const char* TestModule::AMI_TestInterfaceHandler::_desc_interface_name ()
{
  return "AMI_TestInterfaceHandler";
}

::CORBA::Boolean
TestModule::AMI_TestInterfaceHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2124::Foo.

bug_2124::Foo_ptr
TAO::Objref_Traits<bug_2124::Foo>::duplicate (bug_2124::Foo_ptr p)
{
  return bug_2124::Foo::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2124::Foo>::release (bug_2124::Foo_ptr p)
{
  ::CORBA::release (p);
}

bug_2124::Foo_ptr
TAO::Objref_Traits<bug_2124::Foo>::nil ()
{
  return bug_2124::Foo::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2124::Foo>::marshal (const bug_2124::Foo_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2124::Foo::op1 (
  const char * s)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::MyString_10>::in_arg_val _tao_s (s);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_s)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "op1",
      3,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2124::Foo::op2 (
  const char * s)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::OtherString_10>::in_arg_val _tao_s (s);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_s)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "op2",
      3,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/ami_cs.cpp:54



void
bug_2124::Foo::sendc_op1 (
  ::bug_2124::AMI_FooHandler_ptr ami_handler,
  const char * s)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::MyString_10>::in_arg_val _tao_s (s);

  TAO::Argument *_the_tao_operation_signature[] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_s)
    };

  TAO::Asynch_Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "op1",
      3,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _invocation_call.invoke (
      ami_handler,
      &bug_2124::AMI_FooHandler::op1_reply_stub
    );
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/ami_cs.cpp:54



void
bug_2124::Foo::sendc_op2 (
  ::bug_2124::AMI_FooHandler_ptr ami_handler,
  const char * s)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::OtherString_10>::in_arg_val _tao_s (s);

  TAO::Argument *_the_tao_operation_signature[] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_s)
    };

  TAO::Asynch_Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "op2",
      3,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _invocation_call.invoke (
      ami_handler,
      &bug_2124::AMI_FooHandler::op2_reply_stub
    );
}

bug_2124::Foo::Foo ()
{
}
void
bug_2124::Foo::_tao_any_destructor (void *_tao_void_pointer)
{
  Foo *_tao_tmp_pointer =
    static_cast<Foo *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2124::Foo_ptr
bug_2124::Foo::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<Foo>::narrow (_tao_objref, "IDL:bug_2124/Foo:1.0");
}

bug_2124::Foo_ptr
bug_2124::Foo::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<Foo>::unchecked_narrow (_tao_objref);
}

bug_2124::Foo_ptr
bug_2124::Foo::_nil ()
{
  return nullptr;
}

bug_2124::Foo_ptr
bug_2124::Foo::_duplicate (Foo_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2124::Foo::_tao_release (Foo_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2124::Foo::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:bug_2124/Foo:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* bug_2124::Foo::_interface_repository_id () const
{
  return "IDL:bug_2124/Foo:1.0";
}

const char* bug_2124::Foo::_desc_repository_id ()
{
  return "IDL:bug_2124/Foo:1.0";
}

const char* bug_2124::Foo::_desc_interface_name ()
{
  return "Foo";
}

::CORBA::Boolean
bug_2124::Foo::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:52



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


void
TAO::Value_Traits<bug_2124::AMH_FooExceptionHolder>::add_ref (bug_2124::AMH_FooExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<bug_2124::AMH_FooExceptionHolder>::remove_ref (bug_2124::AMH_FooExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<bug_2124::AMH_FooExceptionHolder>::release (bug_2124::AMH_FooExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

TAO_END_VERSIONED_NAMESPACE_DECL



bug_2124::AMH_FooExceptionHolder *
bug_2124::AMH_FooExceptionHolder::_downcast (::CORBA::ValueBase *v)
{
  return dynamic_cast<::bug_2124::AMH_FooExceptionHolder *> (v);
}

const char *
bug_2124::AMH_FooExceptionHolder::_tao_obv_repository_id () const
{
  return this->_tao_obv_static_repository_id ();
}

void
bug_2124::AMH_FooExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
bug_2124::AMH_FooExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_FooExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_FooExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

bug_2124::AMH_FooExceptionHolder::~AMH_FooExceptionHolder ()
{}

::CORBA::ValueBase *
bug_2124::AMH_FooExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_FooExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
bug_2124::AMH_FooExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
bug_2124::AMH_FooExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
bug_2124::AMH_FooExceptionHolder::_tao_match_formal_type (ptrdiff_t) const
{
  return false;
}

::CORBA::Boolean
bug_2124::AMH_FooExceptionHolder::_tao_marshal__bug_2124_AMH_FooExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
bug_2124::AMH_FooExceptionHolder::_tao_unmarshal__bug_2124_AMH_FooExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
bug_2124::AMH_FooExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_FooExceptionHolder *&new_object)
{
  ::CORBA::ValueBase *base {};
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_FooExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_FooExceptionHolder::_downcast (base);
  if (nullptr == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
bug_2124::AMH_FooExceptionHolder::raise_op1 ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
bug_2124::AMH_FooExceptionHolder::raise_op2 ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
bug_2124::AMH_FooExceptionHolder::raise_sendc_op1 ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
bug_2124::AMH_FooExceptionHolder::raise_sendc_op2 ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2124::AMH_FooResponseHandler.

bug_2124::AMH_FooResponseHandler_ptr
TAO::Objref_Traits<bug_2124::AMH_FooResponseHandler>::duplicate (bug_2124::AMH_FooResponseHandler_ptr p)
{
  return bug_2124::AMH_FooResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2124::AMH_FooResponseHandler>::release (bug_2124::AMH_FooResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

bug_2124::AMH_FooResponseHandler_ptr
TAO::Objref_Traits<bug_2124::AMH_FooResponseHandler>::nil ()
{
  return bug_2124::AMH_FooResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2124::AMH_FooResponseHandler>::marshal (const bug_2124::AMH_FooResponseHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



bug_2124::AMH_FooResponseHandler::AMH_FooResponseHandler ()
{}void
bug_2124::AMH_FooResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_FooResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_FooResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2124::AMH_FooResponseHandler_ptr
bug_2124::AMH_FooResponseHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_FooResponseHandler::_duplicate (
      dynamic_cast<AMH_FooResponseHandler_ptr> (_tao_objref));
}

bug_2124::AMH_FooResponseHandler_ptr
bug_2124::AMH_FooResponseHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_FooResponseHandler::_duplicate (
      dynamic_cast<AMH_FooResponseHandler_ptr> (_tao_objref));
}

bug_2124::AMH_FooResponseHandler_ptr
bug_2124::AMH_FooResponseHandler::_nil ()
{
  return nullptr;
}

bug_2124::AMH_FooResponseHandler_ptr
bug_2124::AMH_FooResponseHandler::_duplicate (AMH_FooResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2124::AMH_FooResponseHandler::_tao_release (AMH_FooResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2124::AMH_FooResponseHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:bug_2124/AMH_FooResponseHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* bug_2124::AMH_FooResponseHandler::_interface_repository_id () const
{
  return "IDL:bug_2124/AMH_FooResponseHandler:1.0";
}

const char* bug_2124::AMH_FooResponseHandler::_desc_repository_id ()
{
  return "IDL:bug_2124/AMH_FooResponseHandler:1.0";
}

const char* bug_2124::AMH_FooResponseHandler::_desc_interface_name ()
{
  return "AMH_FooResponseHandler";
}

::CORBA::Boolean
bug_2124::AMH_FooResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2124::AMI_FooHandler.

bug_2124::AMI_FooHandler_ptr
TAO::Objref_Traits<bug_2124::AMI_FooHandler>::duplicate (bug_2124::AMI_FooHandler_ptr p)
{
  return bug_2124::AMI_FooHandler::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2124::AMI_FooHandler>::release (bug_2124::AMI_FooHandler_ptr p)
{
  ::CORBA::release (p);
}

bug_2124::AMI_FooHandler_ptr
TAO::Objref_Traits<bug_2124::AMI_FooHandler>::nil ()
{
  return bug_2124::AMI_FooHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2124::AMI_FooHandler>::marshal (const bug_2124::AMI_FooHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2124::AMI_FooHandler::op1 ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "op1",
      3,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);
}

void
bug_2124::AMI_FooHandler::op1_reply_stub (
  TAO_InputCDR &_tao_in,
  ::Messaging::ReplyHandler_ptr _tao_reply_handler,
  ::CORBA::ULong reply_status)
{
  // Retrieve Reply Handler object.
  bug_2124::AMI_FooHandler_var _tao_reply_handler_object =
    bug_2124::AMI_FooHandler::_narrow (_tao_reply_handler);

  // Exception handling
  switch (reply_status)
  {
    case TAO_AMI_REPLY_OK:
    {
      // Demarshall all the arguments.
      // Invoke the call back method.
      _tao_reply_handler_object->op1 (
          
        );
      break;
    }
    case TAO_AMI_REPLY_USER_EXCEPTION:
    case TAO_AMI_REPLY_SYSTEM_EXCEPTION:
    {
      const ACE_Message_Block* cdr = _tao_in.start ();
      ::CORBA::OctetSeq _tao_marshaled_exception (
          static_cast <CORBA::ULong> (cdr->length ()),
          static_cast <CORBA::ULong> (cdr->length ()),
          reinterpret_cast <unsigned char*> (cdr->rd_ptr ()),
          0);
      ::Messaging::ExceptionHolder* exception_holder_ptr {};
      ACE_NEW (
          exception_holder_ptr,
          ::TAO::ExceptionHolder (
            (reply_status == TAO_AMI_REPLY_SYSTEM_EXCEPTION),
            _tao_in.byte_order (),
            _tao_marshaled_exception,
            0,
            0,
            _tao_in.char_translator (),
            _tao_in.wchar_translator ()));
        
      ::Messaging::ExceptionHolder_var exception_holder_var = exception_holder_ptr;
      _tao_reply_handler_object->op1_excep (
          exception_holder_var);
      break;
    }
    case TAO_AMI_REPLY_NOT_OK:
      // @@ Michael: Not even the spec mentions this case.
      //             We have to think about this case.
      break;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2124::AMI_FooHandler::op1_excep (
  ::Messaging::ExceptionHolder * excep_holder)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder (excep_holder);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_excep_holder)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "op1_excep",
      9,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2124::AMI_FooHandler::op2 ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "op2",
      3,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);
}

void
bug_2124::AMI_FooHandler::op2_reply_stub (
  TAO_InputCDR &_tao_in,
  ::Messaging::ReplyHandler_ptr _tao_reply_handler,
  ::CORBA::ULong reply_status)
{
  // Retrieve Reply Handler object.
  bug_2124::AMI_FooHandler_var _tao_reply_handler_object =
    bug_2124::AMI_FooHandler::_narrow (_tao_reply_handler);

  // Exception handling
  switch (reply_status)
  {
    case TAO_AMI_REPLY_OK:
    {
      // Demarshall all the arguments.
      // Invoke the call back method.
      _tao_reply_handler_object->op2 (
          
        );
      break;
    }
    case TAO_AMI_REPLY_USER_EXCEPTION:
    case TAO_AMI_REPLY_SYSTEM_EXCEPTION:
    {
      const ACE_Message_Block* cdr = _tao_in.start ();
      ::CORBA::OctetSeq _tao_marshaled_exception (
          static_cast <CORBA::ULong> (cdr->length ()),
          static_cast <CORBA::ULong> (cdr->length ()),
          reinterpret_cast <unsigned char*> (cdr->rd_ptr ()),
          0);
      ::Messaging::ExceptionHolder* exception_holder_ptr {};
      ACE_NEW (
          exception_holder_ptr,
          ::TAO::ExceptionHolder (
            (reply_status == TAO_AMI_REPLY_SYSTEM_EXCEPTION),
            _tao_in.byte_order (),
            _tao_marshaled_exception,
            0,
            0,
            _tao_in.char_translator (),
            _tao_in.wchar_translator ()));
        
      ::Messaging::ExceptionHolder_var exception_holder_var = exception_holder_ptr;
      _tao_reply_handler_object->op2_excep (
          exception_holder_var);
      break;
    }
    case TAO_AMI_REPLY_NOT_OK:
      // @@ Michael: Not even the spec mentions this case.
      //             We have to think about this case.
      break;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2124::AMI_FooHandler::op2_excep (
  ::Messaging::ExceptionHolder * excep_holder)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder (excep_holder);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_excep_holder)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "op2_excep",
      9,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}

bug_2124::AMI_FooHandler::AMI_FooHandler ()
{
}
void
bug_2124::AMI_FooHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_FooHandler *_tao_tmp_pointer =
    static_cast<AMI_FooHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2124::AMI_FooHandler_ptr
bug_2124::AMI_FooHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_FooHandler>::narrow (_tao_objref, "IDL:bug_2124/AMI_FooHandler:1.0");
}

bug_2124::AMI_FooHandler_ptr
bug_2124::AMI_FooHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_FooHandler>::unchecked_narrow (_tao_objref);
}

bug_2124::AMI_FooHandler_ptr
bug_2124::AMI_FooHandler::_nil ()
{
  return nullptr;
}

bug_2124::AMI_FooHandler_ptr
bug_2124::AMI_FooHandler::_duplicate (AMI_FooHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2124::AMI_FooHandler::_tao_release (AMI_FooHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2124::AMI_FooHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:bug_2124/AMI_FooHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* bug_2124::AMI_FooHandler::_interface_repository_id () const
{
  return "IDL:bug_2124/AMI_FooHandler:1.0";
}

const char* bug_2124::AMI_FooHandler::_desc_repository_id ()
{
  return "IDL:bug_2124/AMI_FooHandler:1.0";
}

const char* bug_2124::AMI_FooHandler::_desc_interface_name ()
{
  return "AMI_FooHandler";
}

::CORBA::Boolean
bug_2124::AMI_FooHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2122::One::Whatever.

bug_2122::One::Whatever_ptr
TAO::Objref_Traits<bug_2122::One::Whatever>::duplicate (bug_2122::One::Whatever_ptr p)
{
  return bug_2122::One::Whatever::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2122::One::Whatever>::release (bug_2122::One::Whatever_ptr p)
{
  ::CORBA::release (p);
}

bug_2122::One::Whatever_ptr
TAO::Objref_Traits<bug_2122::One::Whatever>::nil ()
{
  return bug_2122::One::Whatever::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2122::One::Whatever>::marshal (const bug_2122::One::Whatever_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2122::One::Whatever::someOp (
  const char * s)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::MyString_40>::in_arg_val _tao_s (s);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_s)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "someOp",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/ami_cs.cpp:54



void
bug_2122::One::Whatever::sendc_someOp (
  ::bug_2122::One::AMI_WhateverHandler_ptr ami_handler,
  const char * s)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::MyString_40>::in_arg_val _tao_s (s);

  TAO::Argument *_the_tao_operation_signature[] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_s)
    };

  TAO::Asynch_Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "someOp",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _invocation_call.invoke (
      ami_handler,
      &bug_2122::One::AMI_WhateverHandler::someOp_reply_stub
    );
}

bug_2122::One::Whatever::Whatever ()
{
}
void
bug_2122::One::Whatever::_tao_any_destructor (void *_tao_void_pointer)
{
  Whatever *_tao_tmp_pointer =
    static_cast<Whatever *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2122::One::Whatever_ptr
bug_2122::One::Whatever::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<Whatever>::narrow (_tao_objref, "IDL:bug_2122/One/Whatever:1.0");
}

bug_2122::One::Whatever_ptr
bug_2122::One::Whatever::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<Whatever>::unchecked_narrow (_tao_objref);
}

bug_2122::One::Whatever_ptr
bug_2122::One::Whatever::_nil ()
{
  return nullptr;
}

bug_2122::One::Whatever_ptr
bug_2122::One::Whatever::_duplicate (Whatever_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2122::One::Whatever::_tao_release (Whatever_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2122::One::Whatever::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:bug_2122/One/Whatever:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* bug_2122::One::Whatever::_interface_repository_id () const
{
  return "IDL:bug_2122/One/Whatever:1.0";
}

const char* bug_2122::One::Whatever::_desc_repository_id ()
{
  return "IDL:bug_2122/One/Whatever:1.0";
}

const char* bug_2122::One::Whatever::_desc_interface_name ()
{
  return "Whatever";
}

::CORBA::Boolean
bug_2122::One::Whatever::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:52



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


void
TAO::Value_Traits<bug_2122::One::AMH_WhateverExceptionHolder>::add_ref (bug_2122::One::AMH_WhateverExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<bug_2122::One::AMH_WhateverExceptionHolder>::remove_ref (bug_2122::One::AMH_WhateverExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<bug_2122::One::AMH_WhateverExceptionHolder>::release (bug_2122::One::AMH_WhateverExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

TAO_END_VERSIONED_NAMESPACE_DECL



bug_2122::One::AMH_WhateverExceptionHolder *
bug_2122::One::AMH_WhateverExceptionHolder::_downcast (::CORBA::ValueBase *v)
{
  return dynamic_cast<::bug_2122::One::AMH_WhateverExceptionHolder *> (v);
}

const char *
bug_2122::One::AMH_WhateverExceptionHolder::_tao_obv_repository_id () const
{
  return this->_tao_obv_static_repository_id ();
}

void
bug_2122::One::AMH_WhateverExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
bug_2122::One::AMH_WhateverExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_WhateverExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_WhateverExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

bug_2122::One::AMH_WhateverExceptionHolder::~AMH_WhateverExceptionHolder ()
{}

::CORBA::ValueBase *
bug_2122::One::AMH_WhateverExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_WhateverExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
bug_2122::One::AMH_WhateverExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
bug_2122::One::AMH_WhateverExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
bug_2122::One::AMH_WhateverExceptionHolder::_tao_match_formal_type (ptrdiff_t) const
{
  return false;
}

::CORBA::Boolean
bug_2122::One::AMH_WhateverExceptionHolder::_tao_marshal__bug_2122_One_AMH_WhateverExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
bug_2122::One::AMH_WhateverExceptionHolder::_tao_unmarshal__bug_2122_One_AMH_WhateverExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
bug_2122::One::AMH_WhateverExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_WhateverExceptionHolder *&new_object)
{
  ::CORBA::ValueBase *base {};
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_WhateverExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_WhateverExceptionHolder::_downcast (base);
  if (nullptr == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
bug_2122::One::AMH_WhateverExceptionHolder::raise_someOp ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
bug_2122::One::AMH_WhateverExceptionHolder::raise_sendc_someOp ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2122::One::AMH_WhateverResponseHandler.

bug_2122::One::AMH_WhateverResponseHandler_ptr
TAO::Objref_Traits<bug_2122::One::AMH_WhateverResponseHandler>::duplicate (bug_2122::One::AMH_WhateverResponseHandler_ptr p)
{
  return bug_2122::One::AMH_WhateverResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2122::One::AMH_WhateverResponseHandler>::release (bug_2122::One::AMH_WhateverResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

bug_2122::One::AMH_WhateverResponseHandler_ptr
TAO::Objref_Traits<bug_2122::One::AMH_WhateverResponseHandler>::nil ()
{
  return bug_2122::One::AMH_WhateverResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2122::One::AMH_WhateverResponseHandler>::marshal (const bug_2122::One::AMH_WhateverResponseHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



bug_2122::One::AMH_WhateverResponseHandler::AMH_WhateverResponseHandler ()
{}void
bug_2122::One::AMH_WhateverResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_WhateverResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_WhateverResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2122::One::AMH_WhateverResponseHandler_ptr
bug_2122::One::AMH_WhateverResponseHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_WhateverResponseHandler::_duplicate (
      dynamic_cast<AMH_WhateverResponseHandler_ptr> (_tao_objref));
}

bug_2122::One::AMH_WhateverResponseHandler_ptr
bug_2122::One::AMH_WhateverResponseHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_WhateverResponseHandler::_duplicate (
      dynamic_cast<AMH_WhateverResponseHandler_ptr> (_tao_objref));
}

bug_2122::One::AMH_WhateverResponseHandler_ptr
bug_2122::One::AMH_WhateverResponseHandler::_nil ()
{
  return nullptr;
}

bug_2122::One::AMH_WhateverResponseHandler_ptr
bug_2122::One::AMH_WhateverResponseHandler::_duplicate (AMH_WhateverResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2122::One::AMH_WhateverResponseHandler::_tao_release (AMH_WhateverResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2122::One::AMH_WhateverResponseHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:bug_2122/One/AMH_WhateverResponseHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* bug_2122::One::AMH_WhateverResponseHandler::_interface_repository_id () const
{
  return "IDL:bug_2122/One/AMH_WhateverResponseHandler:1.0";
}

const char* bug_2122::One::AMH_WhateverResponseHandler::_desc_repository_id ()
{
  return "IDL:bug_2122/One/AMH_WhateverResponseHandler:1.0";
}

const char* bug_2122::One::AMH_WhateverResponseHandler::_desc_interface_name ()
{
  return "AMH_WhateverResponseHandler";
}

::CORBA::Boolean
bug_2122::One::AMH_WhateverResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2122::One::AMI_WhateverHandler.

bug_2122::One::AMI_WhateverHandler_ptr
TAO::Objref_Traits<bug_2122::One::AMI_WhateverHandler>::duplicate (bug_2122::One::AMI_WhateverHandler_ptr p)
{
  return bug_2122::One::AMI_WhateverHandler::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2122::One::AMI_WhateverHandler>::release (bug_2122::One::AMI_WhateverHandler_ptr p)
{
  ::CORBA::release (p);
}

bug_2122::One::AMI_WhateverHandler_ptr
TAO::Objref_Traits<bug_2122::One::AMI_WhateverHandler>::nil ()
{
  return bug_2122::One::AMI_WhateverHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2122::One::AMI_WhateverHandler>::marshal (const bug_2122::One::AMI_WhateverHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2122::One::AMI_WhateverHandler::someOp ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "someOp",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);
}

void
bug_2122::One::AMI_WhateverHandler::someOp_reply_stub (
  TAO_InputCDR &_tao_in,
  ::Messaging::ReplyHandler_ptr _tao_reply_handler,
  ::CORBA::ULong reply_status)
{
  // Retrieve Reply Handler object.
  bug_2122::One::AMI_WhateverHandler_var _tao_reply_handler_object =
    bug_2122::One::AMI_WhateverHandler::_narrow (_tao_reply_handler);

  // Exception handling
  switch (reply_status)
  {
    case TAO_AMI_REPLY_OK:
    {
      // Demarshall all the arguments.
      // Invoke the call back method.
      _tao_reply_handler_object->someOp (
          
        );
      break;
    }
    case TAO_AMI_REPLY_USER_EXCEPTION:
    case TAO_AMI_REPLY_SYSTEM_EXCEPTION:
    {
      const ACE_Message_Block* cdr = _tao_in.start ();
      ::CORBA::OctetSeq _tao_marshaled_exception (
          static_cast <CORBA::ULong> (cdr->length ()),
          static_cast <CORBA::ULong> (cdr->length ()),
          reinterpret_cast <unsigned char*> (cdr->rd_ptr ()),
          0);
      ::Messaging::ExceptionHolder* exception_holder_ptr {};
      ACE_NEW (
          exception_holder_ptr,
          ::TAO::ExceptionHolder (
            (reply_status == TAO_AMI_REPLY_SYSTEM_EXCEPTION),
            _tao_in.byte_order (),
            _tao_marshaled_exception,
            0,
            0,
            _tao_in.char_translator (),
            _tao_in.wchar_translator ()));
        
      ::Messaging::ExceptionHolder_var exception_holder_var = exception_holder_ptr;
      _tao_reply_handler_object->someOp_excep (
          exception_holder_var);
      break;
    }
    case TAO_AMI_REPLY_NOT_OK:
      // @@ Michael: Not even the spec mentions this case.
      //             We have to think about this case.
      break;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2122::One::AMI_WhateverHandler::someOp_excep (
  ::Messaging::ExceptionHolder * excep_holder)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder (excep_holder);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_excep_holder)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "someOp_excep",
      12,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}

bug_2122::One::AMI_WhateverHandler::AMI_WhateverHandler ()
{
}
void
bug_2122::One::AMI_WhateverHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_WhateverHandler *_tao_tmp_pointer =
    static_cast<AMI_WhateverHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2122::One::AMI_WhateverHandler_ptr
bug_2122::One::AMI_WhateverHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_WhateverHandler>::narrow (_tao_objref, "IDL:bug_2122/One/AMI_WhateverHandler:1.0");
}

bug_2122::One::AMI_WhateverHandler_ptr
bug_2122::One::AMI_WhateverHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_WhateverHandler>::unchecked_narrow (_tao_objref);
}

bug_2122::One::AMI_WhateverHandler_ptr
bug_2122::One::AMI_WhateverHandler::_nil ()
{
  return nullptr;
}

bug_2122::One::AMI_WhateverHandler_ptr
bug_2122::One::AMI_WhateverHandler::_duplicate (AMI_WhateverHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2122::One::AMI_WhateverHandler::_tao_release (AMI_WhateverHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2122::One::AMI_WhateverHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:bug_2122/One/AMI_WhateverHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* bug_2122::One::AMI_WhateverHandler::_interface_repository_id () const
{
  return "IDL:bug_2122/One/AMI_WhateverHandler:1.0";
}

const char* bug_2122::One::AMI_WhateverHandler::_desc_repository_id ()
{
  return "IDL:bug_2122/One/AMI_WhateverHandler:1.0";
}

const char* bug_2122::One::AMI_WhateverHandler::_desc_interface_name ()
{
  return "AMI_WhateverHandler";
}

::CORBA::Boolean
bug_2122::One::AMI_WhateverHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2122::Two::WhoCares.

bug_2122::Two::WhoCares_ptr
TAO::Objref_Traits<bug_2122::Two::WhoCares>::duplicate (bug_2122::Two::WhoCares_ptr p)
{
  return bug_2122::Two::WhoCares::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2122::Two::WhoCares>::release (bug_2122::Two::WhoCares_ptr p)
{
  ::CORBA::release (p);
}

bug_2122::Two::WhoCares_ptr
TAO::Objref_Traits<bug_2122::Two::WhoCares>::nil ()
{
  return bug_2122::Two::WhoCares::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2122::Two::WhoCares>::marshal (const bug_2122::Two::WhoCares_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2122::Two::WhoCares::someOp (
  const char * s)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::MyString_100>::in_arg_val _tao_s (s);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_s)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "someOp",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/ami_cs.cpp:54



void
bug_2122::Two::WhoCares::sendc_someOp (
  ::bug_2122::Two::AMI_WhoCaresHandler_ptr ami_handler,
  const char * s)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::MyString_100>::in_arg_val _tao_s (s);

  TAO::Argument *_the_tao_operation_signature[] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_s)
    };

  TAO::Asynch_Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "someOp",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _invocation_call.invoke (
      ami_handler,
      &bug_2122::Two::AMI_WhoCaresHandler::someOp_reply_stub
    );
}

bug_2122::Two::WhoCares::WhoCares ()
{
}
void
bug_2122::Two::WhoCares::_tao_any_destructor (void *_tao_void_pointer)
{
  WhoCares *_tao_tmp_pointer =
    static_cast<WhoCares *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2122::Two::WhoCares_ptr
bug_2122::Two::WhoCares::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<WhoCares>::narrow (_tao_objref, "IDL:bug_2122/Two/WhoCares:1.0");
}

bug_2122::Two::WhoCares_ptr
bug_2122::Two::WhoCares::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<WhoCares>::unchecked_narrow (_tao_objref);
}

bug_2122::Two::WhoCares_ptr
bug_2122::Two::WhoCares::_nil ()
{
  return nullptr;
}

bug_2122::Two::WhoCares_ptr
bug_2122::Two::WhoCares::_duplicate (WhoCares_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2122::Two::WhoCares::_tao_release (WhoCares_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2122::Two::WhoCares::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:bug_2122/Two/WhoCares:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* bug_2122::Two::WhoCares::_interface_repository_id () const
{
  return "IDL:bug_2122/Two/WhoCares:1.0";
}

const char* bug_2122::Two::WhoCares::_desc_repository_id ()
{
  return "IDL:bug_2122/Two/WhoCares:1.0";
}

const char* bug_2122::Two::WhoCares::_desc_interface_name ()
{
  return "WhoCares";
}

::CORBA::Boolean
bug_2122::Two::WhoCares::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:52



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


void
TAO::Value_Traits<bug_2122::Two::AMH_WhoCaresExceptionHolder>::add_ref (bug_2122::Two::AMH_WhoCaresExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<bug_2122::Two::AMH_WhoCaresExceptionHolder>::remove_ref (bug_2122::Two::AMH_WhoCaresExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<bug_2122::Two::AMH_WhoCaresExceptionHolder>::release (bug_2122::Two::AMH_WhoCaresExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

TAO_END_VERSIONED_NAMESPACE_DECL



bug_2122::Two::AMH_WhoCaresExceptionHolder *
bug_2122::Two::AMH_WhoCaresExceptionHolder::_downcast (::CORBA::ValueBase *v)
{
  return dynamic_cast<::bug_2122::Two::AMH_WhoCaresExceptionHolder *> (v);
}

const char *
bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_obv_repository_id () const
{
  return this->_tao_obv_static_repository_id ();
}

void
bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_WhoCaresExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_WhoCaresExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

bug_2122::Two::AMH_WhoCaresExceptionHolder::~AMH_WhoCaresExceptionHolder ()
{}

::CORBA::ValueBase *
bug_2122::Two::AMH_WhoCaresExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_WhoCaresExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_match_formal_type (ptrdiff_t) const
{
  return false;
}

::CORBA::Boolean
bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_marshal__bug_2122_Two_AMH_WhoCaresExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_unmarshal__bug_2122_Two_AMH_WhoCaresExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_WhoCaresExceptionHolder *&new_object)
{
  ::CORBA::ValueBase *base {};
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_WhoCaresExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_WhoCaresExceptionHolder::_downcast (base);
  if (nullptr == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
bug_2122::Two::AMH_WhoCaresExceptionHolder::raise_someOp ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
bug_2122::Two::AMH_WhoCaresExceptionHolder::raise_sendc_someOp ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2122::Two::AMH_WhoCaresResponseHandler.

bug_2122::Two::AMH_WhoCaresResponseHandler_ptr
TAO::Objref_Traits<bug_2122::Two::AMH_WhoCaresResponseHandler>::duplicate (bug_2122::Two::AMH_WhoCaresResponseHandler_ptr p)
{
  return bug_2122::Two::AMH_WhoCaresResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2122::Two::AMH_WhoCaresResponseHandler>::release (bug_2122::Two::AMH_WhoCaresResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

bug_2122::Two::AMH_WhoCaresResponseHandler_ptr
TAO::Objref_Traits<bug_2122::Two::AMH_WhoCaresResponseHandler>::nil ()
{
  return bug_2122::Two::AMH_WhoCaresResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2122::Two::AMH_WhoCaresResponseHandler>::marshal (const bug_2122::Two::AMH_WhoCaresResponseHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



bug_2122::Two::AMH_WhoCaresResponseHandler::AMH_WhoCaresResponseHandler ()
{}void
bug_2122::Two::AMH_WhoCaresResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_WhoCaresResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_WhoCaresResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2122::Two::AMH_WhoCaresResponseHandler_ptr
bug_2122::Two::AMH_WhoCaresResponseHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_WhoCaresResponseHandler::_duplicate (
      dynamic_cast<AMH_WhoCaresResponseHandler_ptr> (_tao_objref));
}

bug_2122::Two::AMH_WhoCaresResponseHandler_ptr
bug_2122::Two::AMH_WhoCaresResponseHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_WhoCaresResponseHandler::_duplicate (
      dynamic_cast<AMH_WhoCaresResponseHandler_ptr> (_tao_objref));
}

bug_2122::Two::AMH_WhoCaresResponseHandler_ptr
bug_2122::Two::AMH_WhoCaresResponseHandler::_nil ()
{
  return nullptr;
}

bug_2122::Two::AMH_WhoCaresResponseHandler_ptr
bug_2122::Two::AMH_WhoCaresResponseHandler::_duplicate (AMH_WhoCaresResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2122::Two::AMH_WhoCaresResponseHandler::_tao_release (AMH_WhoCaresResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2122::Two::AMH_WhoCaresResponseHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:bug_2122/Two/AMH_WhoCaresResponseHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* bug_2122::Two::AMH_WhoCaresResponseHandler::_interface_repository_id () const
{
  return "IDL:bug_2122/Two/AMH_WhoCaresResponseHandler:1.0";
}

const char* bug_2122::Two::AMH_WhoCaresResponseHandler::_desc_repository_id ()
{
  return "IDL:bug_2122/Two/AMH_WhoCaresResponseHandler:1.0";
}

const char* bug_2122::Two::AMH_WhoCaresResponseHandler::_desc_interface_name ()
{
  return "AMH_WhoCaresResponseHandler";
}

::CORBA::Boolean
bug_2122::Two::AMH_WhoCaresResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2122::Two::AMI_WhoCaresHandler.

bug_2122::Two::AMI_WhoCaresHandler_ptr
TAO::Objref_Traits<bug_2122::Two::AMI_WhoCaresHandler>::duplicate (bug_2122::Two::AMI_WhoCaresHandler_ptr p)
{
  return bug_2122::Two::AMI_WhoCaresHandler::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2122::Two::AMI_WhoCaresHandler>::release (bug_2122::Two::AMI_WhoCaresHandler_ptr p)
{
  ::CORBA::release (p);
}

bug_2122::Two::AMI_WhoCaresHandler_ptr
TAO::Objref_Traits<bug_2122::Two::AMI_WhoCaresHandler>::nil ()
{
  return bug_2122::Two::AMI_WhoCaresHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2122::Two::AMI_WhoCaresHandler>::marshal (const bug_2122::Two::AMI_WhoCaresHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2122::Two::AMI_WhoCaresHandler::someOp ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "someOp",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);
}

void
bug_2122::Two::AMI_WhoCaresHandler::someOp_reply_stub (
  TAO_InputCDR &_tao_in,
  ::Messaging::ReplyHandler_ptr _tao_reply_handler,
  ::CORBA::ULong reply_status)
{
  // Retrieve Reply Handler object.
  bug_2122::Two::AMI_WhoCaresHandler_var _tao_reply_handler_object =
    bug_2122::Two::AMI_WhoCaresHandler::_narrow (_tao_reply_handler);

  // Exception handling
  switch (reply_status)
  {
    case TAO_AMI_REPLY_OK:
    {
      // Demarshall all the arguments.
      // Invoke the call back method.
      _tao_reply_handler_object->someOp (
          
        );
      break;
    }
    case TAO_AMI_REPLY_USER_EXCEPTION:
    case TAO_AMI_REPLY_SYSTEM_EXCEPTION:
    {
      const ACE_Message_Block* cdr = _tao_in.start ();
      ::CORBA::OctetSeq _tao_marshaled_exception (
          static_cast <CORBA::ULong> (cdr->length ()),
          static_cast <CORBA::ULong> (cdr->length ()),
          reinterpret_cast <unsigned char*> (cdr->rd_ptr ()),
          0);
      ::Messaging::ExceptionHolder* exception_holder_ptr {};
      ACE_NEW (
          exception_holder_ptr,
          ::TAO::ExceptionHolder (
            (reply_status == TAO_AMI_REPLY_SYSTEM_EXCEPTION),
            _tao_in.byte_order (),
            _tao_marshaled_exception,
            0,
            0,
            _tao_in.char_translator (),
            _tao_in.wchar_translator ()));
        
      ::Messaging::ExceptionHolder_var exception_holder_var = exception_holder_ptr;
      _tao_reply_handler_object->someOp_excep (
          exception_holder_var);
      break;
    }
    case TAO_AMI_REPLY_NOT_OK:
      // @@ Michael: Not even the spec mentions this case.
      //             We have to think about this case.
      break;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2122::Two::AMI_WhoCaresHandler::someOp_excep (
  ::Messaging::ExceptionHolder * excep_holder)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder (excep_holder);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_excep_holder)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "someOp_excep",
      12,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}

bug_2122::Two::AMI_WhoCaresHandler::AMI_WhoCaresHandler ()
{
}
void
bug_2122::Two::AMI_WhoCaresHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_WhoCaresHandler *_tao_tmp_pointer =
    static_cast<AMI_WhoCaresHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2122::Two::AMI_WhoCaresHandler_ptr
bug_2122::Two::AMI_WhoCaresHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_WhoCaresHandler>::narrow (_tao_objref, "IDL:bug_2122/Two/AMI_WhoCaresHandler:1.0");
}

bug_2122::Two::AMI_WhoCaresHandler_ptr
bug_2122::Two::AMI_WhoCaresHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_WhoCaresHandler>::unchecked_narrow (_tao_objref);
}

bug_2122::Two::AMI_WhoCaresHandler_ptr
bug_2122::Two::AMI_WhoCaresHandler::_nil ()
{
  return nullptr;
}

bug_2122::Two::AMI_WhoCaresHandler_ptr
bug_2122::Two::AMI_WhoCaresHandler::_duplicate (AMI_WhoCaresHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2122::Two::AMI_WhoCaresHandler::_tao_release (AMI_WhoCaresHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2122::Two::AMI_WhoCaresHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:bug_2122/Two/AMI_WhoCaresHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* bug_2122::Two::AMI_WhoCaresHandler::_interface_repository_id () const
{
  return "IDL:bug_2122/Two/AMI_WhoCaresHandler:1.0";
}

const char* bug_2122::Two::AMI_WhoCaresHandler::_desc_repository_id ()
{
  return "IDL:bug_2122/Two/AMI_WhoCaresHandler:1.0";
}

const char* bug_2122::Two::AMI_WhoCaresHandler::_desc_interface_name ()
{
  return "AMI_WhoCaresHandler";
}

::CORBA::Boolean
bug_2122::Two::AMI_WhoCaresHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2122::Three::WhoCares.

bug_2122::Three::WhoCares_ptr
TAO::Objref_Traits<bug_2122::Three::WhoCares>::duplicate (bug_2122::Three::WhoCares_ptr p)
{
  return bug_2122::Three::WhoCares::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2122::Three::WhoCares>::release (bug_2122::Three::WhoCares_ptr p)
{
  ::CORBA::release (p);
}

bug_2122::Three::WhoCares_ptr
TAO::Objref_Traits<bug_2122::Three::WhoCares>::nil ()
{
  return bug_2122::Three::WhoCares::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2122::Three::WhoCares>::marshal (const bug_2122::Three::WhoCares_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2122::Three::WhoCares::someOp (
  const char * s)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::MyString_100>::in_arg_val _tao_s (s);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_s)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "someOp",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/ami_cs.cpp:54



void
bug_2122::Three::WhoCares::sendc_someOp (
  ::bug_2122::Three::AMI_WhoCaresHandler_ptr ami_handler,
  const char * s)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::TAO::MyString_100>::in_arg_val _tao_s (s);

  TAO::Argument *_the_tao_operation_signature[] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_s)
    };

  TAO::Asynch_Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "someOp",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _invocation_call.invoke (
      ami_handler,
      &bug_2122::Three::AMI_WhoCaresHandler::someOp_reply_stub
    );
}

bug_2122::Three::WhoCares::WhoCares ()
{
}
void
bug_2122::Three::WhoCares::_tao_any_destructor (void *_tao_void_pointer)
{
  WhoCares *_tao_tmp_pointer =
    static_cast<WhoCares *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2122::Three::WhoCares_ptr
bug_2122::Three::WhoCares::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<WhoCares>::narrow (_tao_objref, "IDL:bug_2122/Three/WhoCares:1.0");
}

bug_2122::Three::WhoCares_ptr
bug_2122::Three::WhoCares::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<WhoCares>::unchecked_narrow (_tao_objref);
}

bug_2122::Three::WhoCares_ptr
bug_2122::Three::WhoCares::_nil ()
{
  return nullptr;
}

bug_2122::Three::WhoCares_ptr
bug_2122::Three::WhoCares::_duplicate (WhoCares_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2122::Three::WhoCares::_tao_release (WhoCares_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2122::Three::WhoCares::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:bug_2122/Three/WhoCares:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* bug_2122::Three::WhoCares::_interface_repository_id () const
{
  return "IDL:bug_2122/Three/WhoCares:1.0";
}

const char* bug_2122::Three::WhoCares::_desc_repository_id ()
{
  return "IDL:bug_2122/Three/WhoCares:1.0";
}

const char* bug_2122::Three::WhoCares::_desc_interface_name ()
{
  return "WhoCares";
}

::CORBA::Boolean
bug_2122::Three::WhoCares::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:52



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


void
TAO::Value_Traits<bug_2122::Three::AMH_WhoCaresExceptionHolder>::add_ref (bug_2122::Three::AMH_WhoCaresExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<bug_2122::Three::AMH_WhoCaresExceptionHolder>::remove_ref (bug_2122::Three::AMH_WhoCaresExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<bug_2122::Three::AMH_WhoCaresExceptionHolder>::release (bug_2122::Three::AMH_WhoCaresExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

TAO_END_VERSIONED_NAMESPACE_DECL



bug_2122::Three::AMH_WhoCaresExceptionHolder *
bug_2122::Three::AMH_WhoCaresExceptionHolder::_downcast (::CORBA::ValueBase *v)
{
  return dynamic_cast<::bug_2122::Three::AMH_WhoCaresExceptionHolder *> (v);
}

const char *
bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_obv_repository_id () const
{
  return this->_tao_obv_static_repository_id ();
}

void
bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_WhoCaresExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_WhoCaresExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

bug_2122::Three::AMH_WhoCaresExceptionHolder::~AMH_WhoCaresExceptionHolder ()
{}

::CORBA::ValueBase *
bug_2122::Three::AMH_WhoCaresExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_WhoCaresExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_match_formal_type (ptrdiff_t) const
{
  return false;
}

::CORBA::Boolean
bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_marshal__bug_2122_Three_AMH_WhoCaresExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_unmarshal__bug_2122_Three_AMH_WhoCaresExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_WhoCaresExceptionHolder *&new_object)
{
  ::CORBA::ValueBase *base {};
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_WhoCaresExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_WhoCaresExceptionHolder::_downcast (base);
  if (nullptr == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
bug_2122::Three::AMH_WhoCaresExceptionHolder::raise_someOp ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:442

void
bug_2122::Three::AMH_WhoCaresExceptionHolder::raise_sendc_someOp ()
{
  std::unique_ptr< ::CORBA::Exception> safety (this->exception);
  this->exception->_raise ();
}

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2122::Three::AMH_WhoCaresResponseHandler.

bug_2122::Three::AMH_WhoCaresResponseHandler_ptr
TAO::Objref_Traits<bug_2122::Three::AMH_WhoCaresResponseHandler>::duplicate (bug_2122::Three::AMH_WhoCaresResponseHandler_ptr p)
{
  return bug_2122::Three::AMH_WhoCaresResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2122::Three::AMH_WhoCaresResponseHandler>::release (bug_2122::Three::AMH_WhoCaresResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

bug_2122::Three::AMH_WhoCaresResponseHandler_ptr
TAO::Objref_Traits<bug_2122::Three::AMH_WhoCaresResponseHandler>::nil ()
{
  return bug_2122::Three::AMH_WhoCaresResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2122::Three::AMH_WhoCaresResponseHandler>::marshal (const bug_2122::Three::AMH_WhoCaresResponseHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



bug_2122::Three::AMH_WhoCaresResponseHandler::AMH_WhoCaresResponseHandler ()
{}void
bug_2122::Three::AMH_WhoCaresResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_WhoCaresResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_WhoCaresResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2122::Three::AMH_WhoCaresResponseHandler_ptr
bug_2122::Three::AMH_WhoCaresResponseHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_WhoCaresResponseHandler::_duplicate (
      dynamic_cast<AMH_WhoCaresResponseHandler_ptr> (_tao_objref));
}

bug_2122::Three::AMH_WhoCaresResponseHandler_ptr
bug_2122::Three::AMH_WhoCaresResponseHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_WhoCaresResponseHandler::_duplicate (
      dynamic_cast<AMH_WhoCaresResponseHandler_ptr> (_tao_objref));
}

bug_2122::Three::AMH_WhoCaresResponseHandler_ptr
bug_2122::Three::AMH_WhoCaresResponseHandler::_nil ()
{
  return nullptr;
}

bug_2122::Three::AMH_WhoCaresResponseHandler_ptr
bug_2122::Three::AMH_WhoCaresResponseHandler::_duplicate (AMH_WhoCaresResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2122::Three::AMH_WhoCaresResponseHandler::_tao_release (AMH_WhoCaresResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2122::Three::AMH_WhoCaresResponseHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:bug_2122/Three/AMH_WhoCaresResponseHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* bug_2122::Three::AMH_WhoCaresResponseHandler::_interface_repository_id () const
{
  return "IDL:bug_2122/Three/AMH_WhoCaresResponseHandler:1.0";
}

const char* bug_2122::Three::AMH_WhoCaresResponseHandler::_desc_repository_id ()
{
  return "IDL:bug_2122/Three/AMH_WhoCaresResponseHandler:1.0";
}

const char* bug_2122::Three::AMH_WhoCaresResponseHandler::_desc_interface_name ()
{
  return "AMH_WhoCaresResponseHandler";
}

::CORBA::Boolean
bug_2122::Three::AMH_WhoCaresResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for bug_2122::Three::AMI_WhoCaresHandler.

bug_2122::Three::AMI_WhoCaresHandler_ptr
TAO::Objref_Traits<bug_2122::Three::AMI_WhoCaresHandler>::duplicate (bug_2122::Three::AMI_WhoCaresHandler_ptr p)
{
  return bug_2122::Three::AMI_WhoCaresHandler::_duplicate (p);
}

void
TAO::Objref_Traits<bug_2122::Three::AMI_WhoCaresHandler>::release (bug_2122::Three::AMI_WhoCaresHandler_ptr p)
{
  ::CORBA::release (p);
}

bug_2122::Three::AMI_WhoCaresHandler_ptr
TAO::Objref_Traits<bug_2122::Three::AMI_WhoCaresHandler>::nil ()
{
  return bug_2122::Three::AMI_WhoCaresHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<bug_2122::Three::AMI_WhoCaresHandler>::marshal (const bug_2122::Three::AMI_WhoCaresHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2122::Three::AMI_WhoCaresHandler::someOp ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "someOp",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);
}

void
bug_2122::Three::AMI_WhoCaresHandler::someOp_reply_stub (
  TAO_InputCDR &_tao_in,
  ::Messaging::ReplyHandler_ptr _tao_reply_handler,
  ::CORBA::ULong reply_status)
{
  // Retrieve Reply Handler object.
  bug_2122::Three::AMI_WhoCaresHandler_var _tao_reply_handler_object =
    bug_2122::Three::AMI_WhoCaresHandler::_narrow (_tao_reply_handler);

  // Exception handling
  switch (reply_status)
  {
    case TAO_AMI_REPLY_OK:
    {
      // Demarshall all the arguments.
      // Invoke the call back method.
      _tao_reply_handler_object->someOp (
          
        );
      break;
    }
    case TAO_AMI_REPLY_USER_EXCEPTION:
    case TAO_AMI_REPLY_SYSTEM_EXCEPTION:
    {
      const ACE_Message_Block* cdr = _tao_in.start ();
      ::CORBA::OctetSeq _tao_marshaled_exception (
          static_cast <CORBA::ULong> (cdr->length ()),
          static_cast <CORBA::ULong> (cdr->length ()),
          reinterpret_cast <unsigned char*> (cdr->rd_ptr ()),
          0);
      ::Messaging::ExceptionHolder* exception_holder_ptr {};
      ACE_NEW (
          exception_holder_ptr,
          ::TAO::ExceptionHolder (
            (reply_status == TAO_AMI_REPLY_SYSTEM_EXCEPTION),
            _tao_in.byte_order (),
            _tao_marshaled_exception,
            0,
            0,
            _tao_in.char_translator (),
            _tao_in.wchar_translator ()));
        
      ::Messaging::ExceptionHolder_var exception_holder_var = exception_holder_ptr;
      _tao_reply_handler_object->someOp_excep (
          exception_holder_var);
      break;
    }
    case TAO_AMI_REPLY_NOT_OK:
      // @@ Michael: Not even the spec mentions this case.
      //             We have to think about this case.
      break;
  }
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_operation/operation_cs.cpp:87

void
bug_2122::Three::AMI_WhoCaresHandler::someOp_excep (
  ::Messaging::ExceptionHolder * excep_holder)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder (excep_holder);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_excep_holder)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "someOp_excep",
      12,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}

bug_2122::Three::AMI_WhoCaresHandler::AMI_WhoCaresHandler ()
{
}
void
bug_2122::Three::AMI_WhoCaresHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_WhoCaresHandler *_tao_tmp_pointer =
    static_cast<AMI_WhoCaresHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

bug_2122::Three::AMI_WhoCaresHandler_ptr
bug_2122::Three::AMI_WhoCaresHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_WhoCaresHandler>::narrow (_tao_objref, "IDL:bug_2122/Three/AMI_WhoCaresHandler:1.0");
}

bug_2122::Three::AMI_WhoCaresHandler_ptr
bug_2122::Three::AMI_WhoCaresHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_WhoCaresHandler>::unchecked_narrow (_tao_objref);
}

bug_2122::Three::AMI_WhoCaresHandler_ptr
bug_2122::Three::AMI_WhoCaresHandler::_nil ()
{
  return nullptr;
}

bug_2122::Three::AMI_WhoCaresHandler_ptr
bug_2122::Three::AMI_WhoCaresHandler::_duplicate (AMI_WhoCaresHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
bug_2122::Three::AMI_WhoCaresHandler::_tao_release (AMI_WhoCaresHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
bug_2122::Three::AMI_WhoCaresHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:bug_2122/Three/AMI_WhoCaresHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* bug_2122::Three::AMI_WhoCaresHandler::_interface_repository_id () const
{
  return "IDL:bug_2122/Three/AMI_WhoCaresHandler:1.0";
}

const char* bug_2122::Three::AMI_WhoCaresHandler::_desc_repository_id ()
{
  return "IDL:bug_2122/Three/AMI_WhoCaresHandler:1.0";
}

const char* bug_2122::Three::AMI_WhoCaresHandler::_desc_interface_name ()
{
  return "AMI_WhoCaresHandler";
}

::CORBA::Boolean
bug_2122::Three::AMI_WhoCaresHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_COMMALIST_FOO_CS_)
#define _COMMALIST_FOO_CS_

CommaList::Foo::Foo (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< ::CORBA::Double> (max)
{}

CommaList::Foo::Foo (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Double * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< ::CORBA::Double>
    (max, length, buffer, release)
{}

void CommaList::Foo::_tao_any_destructor (
    void * _tao_void_pointer)
{
  Foo * _tao_tmp_pointer =
    static_cast<Foo *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_COMMALIST_DUBBLE_CS_)
#define _COMMALIST_DUBBLE_CS_

CommaList::Dubble::Dubble (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< ::CORBA::Double> (max)
{}

CommaList::Dubble::Dubble (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Double * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< ::CORBA::Double>
    (max, length, buffer, release)
{}

void CommaList::Dubble::_tao_any_destructor (
    void * _tao_void_pointer)
{
  Dubble * _tao_tmp_pointer =
    static_cast<Dubble *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_COMMALIST_DUBBEL_CS_)
#define _COMMALIST_DUBBEL_CS_

CommaList::Dubbel::Dubbel (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< ::CORBA::Double> (max)
{}

CommaList::Dubbel::Dubbel (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Double * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< ::CORBA::Double>
    (max, length, buffer, release)
{}

void CommaList::Dubbel::_tao_any_destructor (
    void * _tao_void_pointer)
{
  Dubbel * _tao_tmp_pointer =
    static_cast<Dubbel *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_COMMALIST_TOIL_CS_)
#define _COMMALIST_TOIL_CS_

CommaList::Toil::Toil (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< ::CORBA::Double> (max)
{}

CommaList::Toil::Toil (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Double * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< ::CORBA::Double>
    (max, length, buffer, release)
{}

void CommaList::Toil::_tao_any_destructor (
    void * _tao_void_pointer)
{
  Toil * _tao_tmp_pointer =
    static_cast<Toil *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_COMMALIST_TROUBLE_CS_)
#define _COMMALIST_TROUBLE_CS_

CommaList::Trouble::Trouble (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< ::CORBA::Double> (max)
{}

CommaList::Trouble::Trouble (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Double * buffer,
    ::CORBA::Boolean release)
  : ::TAO::unbounded_value_sequence< ::CORBA::Double>
    (max, length, buffer, release)
{}

void CommaList::Trouble::_tao_any_destructor (
    void * _tao_void_pointer)
{
  Trouble * _tao_tmp_pointer =
    static_cast<Trouble *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:43

OBV_TestModule::AMH_TestInterfaceExceptionHolder::~AMH_TestInterfaceExceptionHolder ()
{}

::CORBA::Boolean
OBV_TestModule::AMH_TestInterfaceExceptionHolder::_tao_marshal__TestModule_AMH_TestInterfaceExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_TestModule::AMH_TestInterfaceExceptionHolder::_tao_unmarshal__TestModule_AMH_TestInterfaceExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:43

OBV_bug_2124::AMH_FooExceptionHolder::~AMH_FooExceptionHolder ()
{}

::CORBA::Boolean
OBV_bug_2124::AMH_FooExceptionHolder::_tao_marshal__bug_2124_AMH_FooExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_bug_2124::AMH_FooExceptionHolder::_tao_unmarshal__bug_2124_AMH_FooExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:43

OBV_bug_2122::One::AMH_WhateverExceptionHolder::~AMH_WhateverExceptionHolder ()
{}

::CORBA::Boolean
OBV_bug_2122::One::AMH_WhateverExceptionHolder::_tao_marshal__bug_2122_One_AMH_WhateverExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_bug_2122::One::AMH_WhateverExceptionHolder::_tao_unmarshal__bug_2122_One_AMH_WhateverExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:43

OBV_bug_2122::Two::AMH_WhoCaresExceptionHolder::~AMH_WhoCaresExceptionHolder ()
{}

::CORBA::Boolean
OBV_bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_marshal__bug_2122_Two_AMH_WhoCaresExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_unmarshal__bug_2122_Two_AMH_WhoCaresExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:43

OBV_bug_2122::Three::AMH_WhoCaresExceptionHolder::~AMH_WhoCaresExceptionHolder ()
{}

::CORBA::Boolean
OBV_bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_marshal__bug_2122_Three_AMH_WhoCaresExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_unmarshal__bug_2122_Three_AMH_WhoCaresExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:162


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TAO_A5_forany &_tao_array)
{
  return strm.write_char_array (
      reinterpret_cast <const ACE_CDR::Char *> (_tao_array.in ()),
      5);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TAO_A5_forany &_tao_array)
{
  return strm.read_char_array (
      reinterpret_cast <ACE_CDR::Char *> (_tao_array.out ()),
      5);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:162


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TAO_M5_forany &_tao_array)
{
  CORBA::Boolean _tao_marshal_flag = true;
  
  for (::CORBA::ULong i0 = 0; i0 < 5 && _tao_marshal_flag; ++i0)
    {
      TAO_A5_var tmp_var (TAO_A5_dup (_tao_array[i0]));
      TAO_A5_forany tmp (tmp_var.inout ());
      _tao_marshal_flag = (strm << tmp);
    }

  return _tao_marshal_flag;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TAO_M5_forany &_tao_array)
{
  CORBA::Boolean _tao_marshal_flag = true;
  
  for (::CORBA::ULong i0 = 0; i0 < 5 && _tao_marshal_flag; ++i0)
    {
      TAO_A5_forany tmp (TAO_A5_alloc ());
      _tao_marshal_flag = (strm >> tmp);
      TAO_A5_copy (_tao_array[i0], tmp.in ());
      TAO_A5_free (tmp.inout ());
    }

  return _tao_marshal_flag;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:162


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TAO_Z5_forany &_tao_array)
{
  CORBA::Boolean _tao_marshal_flag = true;
  
  for (::CORBA::ULong i0 = 0; i0 < 5 && _tao_marshal_flag; ++i0)
    {
      TAO_M5_var tmp_var (TAO_M5_dup (_tao_array[i0]));
      TAO_M5_forany tmp (tmp_var.inout ());
      _tao_marshal_flag = (strm << tmp);
    }

  return _tao_marshal_flag;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TAO_Z5_forany &_tao_array)
{
  CORBA::Boolean _tao_marshal_flag = true;
  
  for (::CORBA::ULong i0 = 0; i0 < 5 && _tao_marshal_flag; ++i0)
    {
      TAO_M5_forany tmp (TAO_M5_alloc ());
      _tao_marshal_flag = (strm >> tmp);
      TAO_M5_copy (_tao_array[i0], tmp.in ());
      TAO_M5_free (tmp.inout ());
    }

  return _tao_marshal_flag;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TestModule::TestInterface_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TestModule::TestInterface_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::TestModule::TestInterface>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:506



TAO_BEGIN_VERSIONED_NAMESPACE_DECL
void
CORBA::add_ref (TestModule::AMH_TestInterfaceExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (TestModule::AMH_TestInterfaceExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:59


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const TestModule::AMH_TestInterfaceExceptionHolder *_tao_valuetype)
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&TestModule::AMH_TestInterfaceExceptionHolder::_downcast));
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    TestModule::AMH_TestInterfaceExceptionHolder *&_tao_valuetype)
{
  return TestModule::AMH_TestInterfaceExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:189

::CORBA::Boolean
OBV_TestModule::AMH_TestInterfaceExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const
{
  return true;
}

::CORBA::Boolean
OBV_TestModule::AMH_TestInterfaceExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &)
{
  return true;
}

void
OBV_TestModule::AMH_TestInterfaceExceptionHolder::truncation_hook ()
{
  this->require_truncation_ = true;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TestModule::AMI_TestInterfaceHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TestModule::AMI_TestInterfaceHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::TestModule::AMI_TestInterfaceHandler>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const bug_2124::Foo_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    bug_2124::Foo_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::bug_2124::Foo>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:506



TAO_BEGIN_VERSIONED_NAMESPACE_DECL
void
CORBA::add_ref (bug_2124::AMH_FooExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (bug_2124::AMH_FooExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:59


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const bug_2124::AMH_FooExceptionHolder *_tao_valuetype)
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&bug_2124::AMH_FooExceptionHolder::_downcast));
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    bug_2124::AMH_FooExceptionHolder *&_tao_valuetype)
{
  return bug_2124::AMH_FooExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:189

::CORBA::Boolean
OBV_bug_2124::AMH_FooExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const
{
  return true;
}

::CORBA::Boolean
OBV_bug_2124::AMH_FooExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &)
{
  return true;
}

void
OBV_bug_2124::AMH_FooExceptionHolder::truncation_hook ()
{
  this->require_truncation_ = true;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const bug_2124::AMI_FooHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    bug_2124::AMI_FooHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::bug_2124::AMI_FooHandler>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const bug_2122::One::Whatever_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    bug_2122::One::Whatever_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::bug_2122::One::Whatever>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:506



TAO_BEGIN_VERSIONED_NAMESPACE_DECL
void
CORBA::add_ref (bug_2122::One::AMH_WhateverExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (bug_2122::One::AMH_WhateverExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:59


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const bug_2122::One::AMH_WhateverExceptionHolder *_tao_valuetype)
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&bug_2122::One::AMH_WhateverExceptionHolder::_downcast));
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    bug_2122::One::AMH_WhateverExceptionHolder *&_tao_valuetype)
{
  return bug_2122::One::AMH_WhateverExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:189

::CORBA::Boolean
OBV_bug_2122::One::AMH_WhateverExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const
{
  return true;
}

::CORBA::Boolean
OBV_bug_2122::One::AMH_WhateverExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &)
{
  return true;
}

void
OBV_bug_2122::One::AMH_WhateverExceptionHolder::truncation_hook ()
{
  this->require_truncation_ = true;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const bug_2122::One::AMI_WhateverHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    bug_2122::One::AMI_WhateverHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::bug_2122::One::AMI_WhateverHandler>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const bug_2122::Two::WhoCares_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    bug_2122::Two::WhoCares_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::bug_2122::Two::WhoCares>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:506



TAO_BEGIN_VERSIONED_NAMESPACE_DECL
void
CORBA::add_ref (bug_2122::Two::AMH_WhoCaresExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (bug_2122::Two::AMH_WhoCaresExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:59


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const bug_2122::Two::AMH_WhoCaresExceptionHolder *_tao_valuetype)
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&bug_2122::Two::AMH_WhoCaresExceptionHolder::_downcast));
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    bug_2122::Two::AMH_WhoCaresExceptionHolder *&_tao_valuetype)
{
  return bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:189

::CORBA::Boolean
OBV_bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const
{
  return true;
}

::CORBA::Boolean
OBV_bug_2122::Two::AMH_WhoCaresExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &)
{
  return true;
}

void
OBV_bug_2122::Two::AMH_WhoCaresExceptionHolder::truncation_hook ()
{
  this->require_truncation_ = true;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const bug_2122::Two::AMI_WhoCaresHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    bug_2122::Two::AMI_WhoCaresHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::bug_2122::Two::AMI_WhoCaresHandler>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const bug_2122::Three::WhoCares_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    bug_2122::Three::WhoCares_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::bug_2122::Three::WhoCares>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:506



TAO_BEGIN_VERSIONED_NAMESPACE_DECL
void
CORBA::add_ref (bug_2122::Three::AMH_WhoCaresExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (bug_2122::Three::AMH_WhoCaresExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:59


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const bug_2122::Three::AMH_WhoCaresExceptionHolder *_tao_valuetype)
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&bug_2122::Three::AMH_WhoCaresExceptionHolder::_downcast));
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    bug_2122::Three::AMH_WhoCaresExceptionHolder *&_tao_valuetype)
{
  return bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:189

::CORBA::Boolean
OBV_bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const
{
  return true;
}

::CORBA::Boolean
OBV_bug_2122::Three::AMH_WhoCaresExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &)
{
  return true;
}

void
OBV_bug_2122::Three::AMH_WhoCaresExceptionHolder::truncation_hook ()
{
  this->require_truncation_ = true;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const bug_2122::Three::AMI_WhoCaresHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    bug_2122::Three::AMI_WhoCaresHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::bug_2122::Three::AMI_WhoCaresHandler>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_CommaList_Foo_CPP_
#define _TAO_CDR_OP_CommaList_Foo_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CommaList::Foo &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CommaList::Foo &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_CommaList_Foo_CPP_ */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_CommaList_Trouble_CPP_
#define _TAO_CDR_OP_CommaList_Trouble_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CommaList::Trouble &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CommaList::Trouble &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_CommaList_Trouble_CPP_ */

