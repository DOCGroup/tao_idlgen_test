// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_codegen.cpp:372


#include "pragmaC.h"
#include "tao/CDR.h"
#include "tao/Messaging/Asynch_Invocation_Adapter.h"
#include "tao/Messaging/ExceptionHolder_i.h"
#include "tao/Object_T.h"
#include "tao/SystemException.h"
#include "cstring"
#include "memory"

#if !defined (__ACE_INLINE__)
#include "pragmaC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for hello.

hello_ptr
TAO::Objref_Traits<hello>::duplicate (hello_ptr p)
{
  return hello::_duplicate (p);
}

void
TAO::Objref_Traits<hello>::release (hello_ptr p)
{
  ::CORBA::release (p);
}

hello_ptr
TAO::Objref_Traits<hello>::nil ()
{
  return hello::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<hello>::marshal (const hello_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



hello::hello ()
{
}
void
hello::_tao_any_destructor (void *_tao_void_pointer)
{
  hello *_tao_tmp_pointer =
    static_cast<hello *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

hello_ptr
hello::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<hello>::narrow (_tao_objref, "IDL:anvil.com/hello:1.0");
}

hello_ptr
hello::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<hello>::unchecked_narrow (_tao_objref);
}

hello_ptr
hello::_nil ()
{
  return nullptr;
}

hello_ptr
hello::_duplicate (hello_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
hello::_tao_release (hello_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
hello::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:anvil.com/hello:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* hello::_interface_repository_id () const
{
  return "IDL:anvil.com/hello:1.0";
}

const char* hello::_desc_repository_id ()
{
  return "IDL:anvil.com/hello:1.0";
}

const char* hello::_desc_interface_name ()
{
  return "hello";
}

::CORBA::Boolean
hello::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:52



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


void
TAO::Value_Traits<AMH_helloExceptionHolder>::add_ref (AMH_helloExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<AMH_helloExceptionHolder>::remove_ref (AMH_helloExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<AMH_helloExceptionHolder>::release (AMH_helloExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMH_helloExceptionHolder *
AMH_helloExceptionHolder::_downcast (::CORBA::ValueBase *v)
{
  return dynamic_cast<::AMH_helloExceptionHolder *> (v);
}

const char *
AMH_helloExceptionHolder::_tao_obv_repository_id () const
{
  return this->_tao_obv_static_repository_id ();
}

void
AMH_helloExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
AMH_helloExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_helloExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_helloExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

AMH_helloExceptionHolder::~AMH_helloExceptionHolder ()
{}

::CORBA::ValueBase *
AMH_helloExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_helloExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
AMH_helloExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
AMH_helloExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
AMH_helloExceptionHolder::_tao_match_formal_type (ptrdiff_t) const
{
  return false;
}

::CORBA::Boolean
AMH_helloExceptionHolder::_tao_marshal__AMH_helloExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
AMH_helloExceptionHolder::_tao_unmarshal__AMH_helloExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
AMH_helloExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_helloExceptionHolder *&new_object)
{
  ::CORBA::ValueBase *base {};
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_helloExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_helloExceptionHolder::_downcast (base);
  if (nullptr == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:72



AMH_helloExceptionHolder_init::AMH_helloExceptionHolder_init ()
{
}

AMH_helloExceptionHolder_init::~AMH_helloExceptionHolder_init ()
{
}

AMH_helloExceptionHolder_init *
AMH_helloExceptionHolder_init::_downcast (::CORBA::ValueFactoryBase *v)
{
  return dynamic_cast<::AMH_helloExceptionHolder_init *> (v);
}

const char*
AMH_helloExceptionHolder_init::tao_repository_id ()
{
  return ::AMH_helloExceptionHolder::_tao_obv_static_repository_id ();
}

::CORBA::ValueBase *
AMH_helloExceptionHolder_init::create_for_unmarshal ()
{
  ::CORBA::ValueBase *ret_val = nullptr;
  ACE_NEW_THROW_EX (
      ret_val,
      OBV_AMH_helloExceptionHolder,
      ::CORBA::NO_MEMORY ());
  return ret_val;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for AMH_helloResponseHandler.

AMH_helloResponseHandler_ptr
TAO::Objref_Traits<AMH_helloResponseHandler>::duplicate (AMH_helloResponseHandler_ptr p)
{
  return AMH_helloResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMH_helloResponseHandler>::release (AMH_helloResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

AMH_helloResponseHandler_ptr
TAO::Objref_Traits<AMH_helloResponseHandler>::nil ()
{
  return AMH_helloResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMH_helloResponseHandler>::marshal (const AMH_helloResponseHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMH_helloResponseHandler::AMH_helloResponseHandler ()
{}void
AMH_helloResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_helloResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_helloResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMH_helloResponseHandler_ptr
AMH_helloResponseHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_helloResponseHandler::_duplicate (
      dynamic_cast<AMH_helloResponseHandler_ptr> (_tao_objref));
}

AMH_helloResponseHandler_ptr
AMH_helloResponseHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_helloResponseHandler::_duplicate (
      dynamic_cast<AMH_helloResponseHandler_ptr> (_tao_objref));
}

AMH_helloResponseHandler_ptr
AMH_helloResponseHandler::_nil ()
{
  return nullptr;
}

AMH_helloResponseHandler_ptr
AMH_helloResponseHandler::_duplicate (AMH_helloResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMH_helloResponseHandler::_tao_release (AMH_helloResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMH_helloResponseHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:anvil.com/AMH_helloResponseHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* AMH_helloResponseHandler::_interface_repository_id () const
{
  return "IDL:anvil.com/AMH_helloResponseHandler:1.0";
}

const char* AMH_helloResponseHandler::_desc_repository_id ()
{
  return "IDL:anvil.com/AMH_helloResponseHandler:1.0";
}

const char* AMH_helloResponseHandler::_desc_interface_name ()
{
  return "AMH_helloResponseHandler";
}

::CORBA::Boolean
AMH_helloResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for AMI_helloHandler.

AMI_helloHandler_ptr
TAO::Objref_Traits<AMI_helloHandler>::duplicate (AMI_helloHandler_ptr p)
{
  return AMI_helloHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMI_helloHandler>::release (AMI_helloHandler_ptr p)
{
  ::CORBA::release (p);
}

AMI_helloHandler_ptr
TAO::Objref_Traits<AMI_helloHandler>::nil ()
{
  return AMI_helloHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMI_helloHandler>::marshal (const AMI_helloHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMI_helloHandler::AMI_helloHandler ()
{
}
void
AMI_helloHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_helloHandler *_tao_tmp_pointer =
    static_cast<AMI_helloHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMI_helloHandler_ptr
AMI_helloHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_helloHandler>::narrow (_tao_objref, "IDL:anvil.com/AMI_helloHandler:1.0");
}

AMI_helloHandler_ptr
AMI_helloHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_helloHandler>::unchecked_narrow (_tao_objref);
}

AMI_helloHandler_ptr
AMI_helloHandler::_nil ()
{
  return nullptr;
}

AMI_helloHandler_ptr
AMI_helloHandler::_duplicate (AMI_helloHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMI_helloHandler::_tao_release (AMI_helloHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMI_helloHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:anvil.com/AMI_helloHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* AMI_helloHandler::_interface_repository_id () const
{
  return "IDL:anvil.com/AMI_helloHandler:1.0";
}

const char* AMI_helloHandler::_desc_repository_id ()
{
  return "IDL:anvil.com/AMI_helloHandler:1.0";
}

const char* AMI_helloHandler::_desc_interface_name ()
{
  return "AMI_helloHandler";
}

::CORBA::Boolean
AMI_helloHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/exception_cs.cpp:97

Riot::Riot ()
  : ::CORBA::UserException (
        "IDL:anvil.com/Riot:1.0",
        "Riot")
{
}

Riot::Riot (const ::Riot &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ())
{
}

Riot&
Riot::operator= (const ::Riot &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  return *this;
}

void Riot::_tao_any_destructor (void *_tao_void_pointer)
{
  Riot *_tao_tmp_pointer =
    static_cast<Riot *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

Riot *
Riot::_downcast (::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<Riot *> (_tao_excp);
}

const Riot *
Riot::_downcast (::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const Riot *> (_tao_excp);
}

::CORBA::Exception *Riot::_alloc ()
{
  ::CORBA::Exception *retval {};
  ACE_NEW_RETURN (retval, ::Riot, nullptr);
  return retval;
}

::CORBA::Exception *
Riot::_tao_duplicate () const
{
  ::CORBA::Exception *result {};
  ACE_NEW_RETURN (result, ::Riot (*this), nullptr);
  return result;
}

void Riot::_raise () const
{
  throw *this;
}

void Riot::_tao_encode (TAO_OutputCDR &cdr) const
{
  if (!(cdr << *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}

void Riot::_tao_decode (TAO_InputCDR &cdr)
{
  if (!(cdr >> *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for goodbye.

goodbye_ptr
TAO::Objref_Traits<goodbye>::duplicate (goodbye_ptr p)
{
  return goodbye::_duplicate (p);
}

void
TAO::Objref_Traits<goodbye>::release (goodbye_ptr p)
{
  ::CORBA::release (p);
}

goodbye_ptr
TAO::Objref_Traits<goodbye>::nil ()
{
  return goodbye::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<goodbye>::marshal (const goodbye_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



goodbye::goodbye ()
{
}
void
goodbye::_tao_any_destructor (void *_tao_void_pointer)
{
  goodbye *_tao_tmp_pointer =
    static_cast<goodbye *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

goodbye_ptr
goodbye::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<goodbye>::narrow (_tao_objref, "IDL:anvil.com/goodbye:1.0");
}

goodbye_ptr
goodbye::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<goodbye>::unchecked_narrow (_tao_objref);
}

goodbye_ptr
goodbye::_nil ()
{
  return nullptr;
}

goodbye_ptr
goodbye::_duplicate (goodbye_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
goodbye::_tao_release (goodbye_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
goodbye::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:anvil.com/goodbye:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* goodbye::_interface_repository_id () const
{
  return "IDL:anvil.com/goodbye:1.0";
}

const char* goodbye::_desc_repository_id ()
{
  return "IDL:anvil.com/goodbye:1.0";
}

const char* goodbye::_desc_interface_name ()
{
  return "goodbye";
}

::CORBA::Boolean
goodbye::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:52



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


void
TAO::Value_Traits<AMH_goodbyeExceptionHolder>::add_ref (AMH_goodbyeExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<AMH_goodbyeExceptionHolder>::remove_ref (AMH_goodbyeExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<AMH_goodbyeExceptionHolder>::release (AMH_goodbyeExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMH_goodbyeExceptionHolder *
AMH_goodbyeExceptionHolder::_downcast (::CORBA::ValueBase *v)
{
  return dynamic_cast<::AMH_goodbyeExceptionHolder *> (v);
}

const char *
AMH_goodbyeExceptionHolder::_tao_obv_repository_id () const
{
  return this->_tao_obv_static_repository_id ();
}

void
AMH_goodbyeExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
AMH_goodbyeExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_goodbyeExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_goodbyeExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

AMH_goodbyeExceptionHolder::~AMH_goodbyeExceptionHolder ()
{}

::CORBA::ValueBase *
AMH_goodbyeExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_goodbyeExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
AMH_goodbyeExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
AMH_goodbyeExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
AMH_goodbyeExceptionHolder::_tao_match_formal_type (ptrdiff_t) const
{
  return false;
}

::CORBA::Boolean
AMH_goodbyeExceptionHolder::_tao_marshal__AMH_goodbyeExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
AMH_goodbyeExceptionHolder::_tao_unmarshal__AMH_goodbyeExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
AMH_goodbyeExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_goodbyeExceptionHolder *&new_object)
{
  ::CORBA::ValueBase *base {};
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_goodbyeExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_goodbyeExceptionHolder::_downcast (base);
  if (nullptr == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:72



AMH_goodbyeExceptionHolder_init::AMH_goodbyeExceptionHolder_init ()
{
}

AMH_goodbyeExceptionHolder_init::~AMH_goodbyeExceptionHolder_init ()
{
}

AMH_goodbyeExceptionHolder_init *
AMH_goodbyeExceptionHolder_init::_downcast (::CORBA::ValueFactoryBase *v)
{
  return dynamic_cast<::AMH_goodbyeExceptionHolder_init *> (v);
}

const char*
AMH_goodbyeExceptionHolder_init::tao_repository_id ()
{
  return ::AMH_goodbyeExceptionHolder::_tao_obv_static_repository_id ();
}

::CORBA::ValueBase *
AMH_goodbyeExceptionHolder_init::create_for_unmarshal ()
{
  ::CORBA::ValueBase *ret_val = nullptr;
  ACE_NEW_THROW_EX (
      ret_val,
      OBV_AMH_goodbyeExceptionHolder,
      ::CORBA::NO_MEMORY ());
  return ret_val;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for AMH_goodbyeResponseHandler.

AMH_goodbyeResponseHandler_ptr
TAO::Objref_Traits<AMH_goodbyeResponseHandler>::duplicate (AMH_goodbyeResponseHandler_ptr p)
{
  return AMH_goodbyeResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMH_goodbyeResponseHandler>::release (AMH_goodbyeResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

AMH_goodbyeResponseHandler_ptr
TAO::Objref_Traits<AMH_goodbyeResponseHandler>::nil ()
{
  return AMH_goodbyeResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMH_goodbyeResponseHandler>::marshal (const AMH_goodbyeResponseHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMH_goodbyeResponseHandler::AMH_goodbyeResponseHandler ()
{}void
AMH_goodbyeResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_goodbyeResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_goodbyeResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMH_goodbyeResponseHandler_ptr
AMH_goodbyeResponseHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_goodbyeResponseHandler::_duplicate (
      dynamic_cast<AMH_goodbyeResponseHandler_ptr> (_tao_objref));
}

AMH_goodbyeResponseHandler_ptr
AMH_goodbyeResponseHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_goodbyeResponseHandler::_duplicate (
      dynamic_cast<AMH_goodbyeResponseHandler_ptr> (_tao_objref));
}

AMH_goodbyeResponseHandler_ptr
AMH_goodbyeResponseHandler::_nil ()
{
  return nullptr;
}

AMH_goodbyeResponseHandler_ptr
AMH_goodbyeResponseHandler::_duplicate (AMH_goodbyeResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMH_goodbyeResponseHandler::_tao_release (AMH_goodbyeResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMH_goodbyeResponseHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:anvil.com/AMH_goodbyeResponseHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* AMH_goodbyeResponseHandler::_interface_repository_id () const
{
  return "IDL:anvil.com/AMH_goodbyeResponseHandler:1.0";
}

const char* AMH_goodbyeResponseHandler::_desc_repository_id ()
{
  return "IDL:anvil.com/AMH_goodbyeResponseHandler:1.0";
}

const char* AMH_goodbyeResponseHandler::_desc_interface_name ()
{
  return "AMH_goodbyeResponseHandler";
}

::CORBA::Boolean
AMH_goodbyeResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for AMI_goodbyeHandler.

AMI_goodbyeHandler_ptr
TAO::Objref_Traits<AMI_goodbyeHandler>::duplicate (AMI_goodbyeHandler_ptr p)
{
  return AMI_goodbyeHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMI_goodbyeHandler>::release (AMI_goodbyeHandler_ptr p)
{
  ::CORBA::release (p);
}

AMI_goodbyeHandler_ptr
TAO::Objref_Traits<AMI_goodbyeHandler>::nil ()
{
  return AMI_goodbyeHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMI_goodbyeHandler>::marshal (const AMI_goodbyeHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMI_goodbyeHandler::AMI_goodbyeHandler ()
{
}
void
AMI_goodbyeHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_goodbyeHandler *_tao_tmp_pointer =
    static_cast<AMI_goodbyeHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMI_goodbyeHandler_ptr
AMI_goodbyeHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_goodbyeHandler>::narrow (_tao_objref, "IDL:anvil.com/AMI_goodbyeHandler:1.0");
}

AMI_goodbyeHandler_ptr
AMI_goodbyeHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_goodbyeHandler>::unchecked_narrow (_tao_objref);
}

AMI_goodbyeHandler_ptr
AMI_goodbyeHandler::_nil ()
{
  return nullptr;
}

AMI_goodbyeHandler_ptr
AMI_goodbyeHandler::_duplicate (AMI_goodbyeHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMI_goodbyeHandler::_tao_release (AMI_goodbyeHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMI_goodbyeHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:anvil.com/AMI_goodbyeHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* AMI_goodbyeHandler::_interface_repository_id () const
{
  return "IDL:anvil.com/AMI_goodbyeHandler:1.0";
}

const char* AMI_goodbyeHandler::_desc_repository_id ()
{
  return "IDL:anvil.com/AMI_goodbyeHandler:1.0";
}

const char* AMI_goodbyeHandler::_desc_interface_name ()
{
  return "AMI_goodbyeHandler";
}

::CORBA::Boolean
AMI_goodbyeHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/exception_cs.cpp:97

A::my_exception::my_exception ()
  : ::CORBA::UserException (
        "IDL:anvil.com/A/my_exception:1.0",
        "my_exception")
{
}

A::my_exception::my_exception (const ::A::my_exception &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ())
{
}

A::my_exception&
A::my_exception::operator= (const ::A::my_exception &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  return *this;
}

void A::my_exception::_tao_any_destructor (void *_tao_void_pointer)
{
  my_exception *_tao_tmp_pointer =
    static_cast<my_exception *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

A::my_exception *
A::my_exception::_downcast (::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<my_exception *> (_tao_excp);
}

const A::my_exception *
A::my_exception::_downcast (::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const my_exception *> (_tao_excp);
}

::CORBA::Exception *A::my_exception::_alloc ()
{
  ::CORBA::Exception *retval {};
  ACE_NEW_RETURN (retval, ::A::my_exception, nullptr);
  return retval;
}

::CORBA::Exception *
A::my_exception::_tao_duplicate () const
{
  ::CORBA::Exception *result {};
  ACE_NEW_RETURN (result, ::A::my_exception (*this), nullptr);
  return result;
}

void A::my_exception::_raise () const
{
  throw *this;
}

void A::my_exception::_tao_encode (TAO_OutputCDR &cdr) const
{
  if (!(cdr << *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}

void A::my_exception::_tao_decode (TAO_InputCDR &cdr)
{
  if (!(cdr >> *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for salutation::sayonara.

salutation::sayonara_ptr
TAO::Objref_Traits<salutation::sayonara>::duplicate (salutation::sayonara_ptr p)
{
  return salutation::sayonara::_duplicate (p);
}

void
TAO::Objref_Traits<salutation::sayonara>::release (salutation::sayonara_ptr p)
{
  ::CORBA::release (p);
}

salutation::sayonara_ptr
TAO::Objref_Traits<salutation::sayonara>::nil ()
{
  return salutation::sayonara::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<salutation::sayonara>::marshal (const salutation::sayonara_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



salutation::sayonara::sayonara ()
{
}
void
salutation::sayonara::_tao_any_destructor (void *_tao_void_pointer)
{
  sayonara *_tao_tmp_pointer =
    static_cast<sayonara *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

salutation::sayonara_ptr
salutation::sayonara::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<sayonara>::narrow (_tao_objref, "IDL:hammer.com/salutation/sayonara:1.0");
}

salutation::sayonara_ptr
salutation::sayonara::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<sayonara>::unchecked_narrow (_tao_objref);
}

salutation::sayonara_ptr
salutation::sayonara::_nil ()
{
  return nullptr;
}

salutation::sayonara_ptr
salutation::sayonara::_duplicate (sayonara_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
salutation::sayonara::_tao_release (sayonara_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
salutation::sayonara::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:hammer.com/salutation/sayonara:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* salutation::sayonara::_interface_repository_id () const
{
  return "IDL:hammer.com/salutation/sayonara:1.0";
}

const char* salutation::sayonara::_desc_repository_id ()
{
  return "IDL:hammer.com/salutation/sayonara:1.0";
}

const char* salutation::sayonara::_desc_interface_name ()
{
  return "sayonara";
}

::CORBA::Boolean
salutation::sayonara::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:52



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


void
TAO::Value_Traits<salutation::AMH_sayonaraExceptionHolder>::add_ref (salutation::AMH_sayonaraExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<salutation::AMH_sayonaraExceptionHolder>::remove_ref (salutation::AMH_sayonaraExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<salutation::AMH_sayonaraExceptionHolder>::release (salutation::AMH_sayonaraExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

TAO_END_VERSIONED_NAMESPACE_DECL



salutation::AMH_sayonaraExceptionHolder *
salutation::AMH_sayonaraExceptionHolder::_downcast (::CORBA::ValueBase *v)
{
  return dynamic_cast<::salutation::AMH_sayonaraExceptionHolder *> (v);
}

const char *
salutation::AMH_sayonaraExceptionHolder::_tao_obv_repository_id () const
{
  return this->_tao_obv_static_repository_id ();
}

void
salutation::AMH_sayonaraExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
salutation::AMH_sayonaraExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_sayonaraExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_sayonaraExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

salutation::AMH_sayonaraExceptionHolder::~AMH_sayonaraExceptionHolder ()
{}

::CORBA::ValueBase *
salutation::AMH_sayonaraExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_sayonaraExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
salutation::AMH_sayonaraExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
salutation::AMH_sayonaraExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
salutation::AMH_sayonaraExceptionHolder::_tao_match_formal_type (ptrdiff_t) const
{
  return false;
}

::CORBA::Boolean
salutation::AMH_sayonaraExceptionHolder::_tao_marshal__salutation_AMH_sayonaraExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
salutation::AMH_sayonaraExceptionHolder::_tao_unmarshal__salutation_AMH_sayonaraExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
salutation::AMH_sayonaraExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_sayonaraExceptionHolder *&new_object)
{
  ::CORBA::ValueBase *base {};
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_sayonaraExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_sayonaraExceptionHolder::_downcast (base);
  if (nullptr == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:72



salutation::AMH_sayonaraExceptionHolder_init::AMH_sayonaraExceptionHolder_init ()
{
}

salutation::AMH_sayonaraExceptionHolder_init::~AMH_sayonaraExceptionHolder_init ()
{
}

salutation::AMH_sayonaraExceptionHolder_init *
salutation::AMH_sayonaraExceptionHolder_init::_downcast (::CORBA::ValueFactoryBase *v)
{
  return dynamic_cast<::salutation::AMH_sayonaraExceptionHolder_init *> (v);
}

const char*
salutation::AMH_sayonaraExceptionHolder_init::tao_repository_id ()
{
  return ::salutation::AMH_sayonaraExceptionHolder::_tao_obv_static_repository_id ();
}

::CORBA::ValueBase *
salutation::AMH_sayonaraExceptionHolder_init::create_for_unmarshal ()
{
  ::CORBA::ValueBase *ret_val = nullptr;
  ACE_NEW_THROW_EX (
      ret_val,
      OBV_salutation::AMH_sayonaraExceptionHolder,
      ::CORBA::NO_MEMORY ());
  return ret_val;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for salutation::AMH_sayonaraResponseHandler.

salutation::AMH_sayonaraResponseHandler_ptr
TAO::Objref_Traits<salutation::AMH_sayonaraResponseHandler>::duplicate (salutation::AMH_sayonaraResponseHandler_ptr p)
{
  return salutation::AMH_sayonaraResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<salutation::AMH_sayonaraResponseHandler>::release (salutation::AMH_sayonaraResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

salutation::AMH_sayonaraResponseHandler_ptr
TAO::Objref_Traits<salutation::AMH_sayonaraResponseHandler>::nil ()
{
  return salutation::AMH_sayonaraResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<salutation::AMH_sayonaraResponseHandler>::marshal (const salutation::AMH_sayonaraResponseHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



salutation::AMH_sayonaraResponseHandler::AMH_sayonaraResponseHandler ()
{}void
salutation::AMH_sayonaraResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_sayonaraResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_sayonaraResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

salutation::AMH_sayonaraResponseHandler_ptr
salutation::AMH_sayonaraResponseHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_sayonaraResponseHandler::_duplicate (
      dynamic_cast<AMH_sayonaraResponseHandler_ptr> (_tao_objref));
}

salutation::AMH_sayonaraResponseHandler_ptr
salutation::AMH_sayonaraResponseHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_sayonaraResponseHandler::_duplicate (
      dynamic_cast<AMH_sayonaraResponseHandler_ptr> (_tao_objref));
}

salutation::AMH_sayonaraResponseHandler_ptr
salutation::AMH_sayonaraResponseHandler::_nil ()
{
  return nullptr;
}

salutation::AMH_sayonaraResponseHandler_ptr
salutation::AMH_sayonaraResponseHandler::_duplicate (AMH_sayonaraResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
salutation::AMH_sayonaraResponseHandler::_tao_release (AMH_sayonaraResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
salutation::AMH_sayonaraResponseHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:hammer.com/salutation/AMH_sayonaraResponseHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* salutation::AMH_sayonaraResponseHandler::_interface_repository_id () const
{
  return "IDL:hammer.com/salutation/AMH_sayonaraResponseHandler:1.0";
}

const char* salutation::AMH_sayonaraResponseHandler::_desc_repository_id ()
{
  return "IDL:hammer.com/salutation/AMH_sayonaraResponseHandler:1.0";
}

const char* salutation::AMH_sayonaraResponseHandler::_desc_interface_name ()
{
  return "AMH_sayonaraResponseHandler";
}

::CORBA::Boolean
salutation::AMH_sayonaraResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for salutation::AMI_sayonaraHandler.

salutation::AMI_sayonaraHandler_ptr
TAO::Objref_Traits<salutation::AMI_sayonaraHandler>::duplicate (salutation::AMI_sayonaraHandler_ptr p)
{
  return salutation::AMI_sayonaraHandler::_duplicate (p);
}

void
TAO::Objref_Traits<salutation::AMI_sayonaraHandler>::release (salutation::AMI_sayonaraHandler_ptr p)
{
  ::CORBA::release (p);
}

salutation::AMI_sayonaraHandler_ptr
TAO::Objref_Traits<salutation::AMI_sayonaraHandler>::nil ()
{
  return salutation::AMI_sayonaraHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<salutation::AMI_sayonaraHandler>::marshal (const salutation::AMI_sayonaraHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



salutation::AMI_sayonaraHandler::AMI_sayonaraHandler ()
{
}
void
salutation::AMI_sayonaraHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_sayonaraHandler *_tao_tmp_pointer =
    static_cast<AMI_sayonaraHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

salutation::AMI_sayonaraHandler_ptr
salutation::AMI_sayonaraHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_sayonaraHandler>::narrow (_tao_objref, "IDL:hammer.com/salutation/AMI_sayonaraHandler:1.0");
}

salutation::AMI_sayonaraHandler_ptr
salutation::AMI_sayonaraHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_sayonaraHandler>::unchecked_narrow (_tao_objref);
}

salutation::AMI_sayonaraHandler_ptr
salutation::AMI_sayonaraHandler::_nil ()
{
  return nullptr;
}

salutation::AMI_sayonaraHandler_ptr
salutation::AMI_sayonaraHandler::_duplicate (AMI_sayonaraHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
salutation::AMI_sayonaraHandler::_tao_release (AMI_sayonaraHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
salutation::AMI_sayonaraHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:hammer.com/salutation/AMI_sayonaraHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* salutation::AMI_sayonaraHandler::_interface_repository_id () const
{
  return "IDL:hammer.com/salutation/AMI_sayonaraHandler:1.0";
}

const char* salutation::AMI_sayonaraHandler::_desc_repository_id ()
{
  return "IDL:hammer.com/salutation/AMI_sayonaraHandler:1.0";
}

const char* salutation::AMI_sayonaraHandler::_desc_interface_name ()
{
  return "AMI_sayonaraHandler";
}

::CORBA::Boolean
salutation::AMI_sayonaraHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for ciao.

ciao_ptr
TAO::Objref_Traits<ciao>::duplicate (ciao_ptr p)
{
  return ciao::_duplicate (p);
}

void
TAO::Objref_Traits<ciao>::release (ciao_ptr p)
{
  ::CORBA::release (p);
}

ciao_ptr
TAO::Objref_Traits<ciao>::nil ()
{
  return ciao::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ciao>::marshal (const ciao_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



ciao::ciao ()
{
}
void
ciao::_tao_any_destructor (void *_tao_void_pointer)
{
  ciao *_tao_tmp_pointer =
    static_cast<ciao *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

ciao_ptr
ciao::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<ciao>::narrow (_tao_objref, "IDL:anvil.com/ciao:1.0");
}

ciao_ptr
ciao::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<ciao>::unchecked_narrow (_tao_objref);
}

ciao_ptr
ciao::_nil ()
{
  return nullptr;
}

ciao_ptr
ciao::_duplicate (ciao_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ciao::_tao_release (ciao_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ciao::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:anvil.com/ciao:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* ciao::_interface_repository_id () const
{
  return "IDL:anvil.com/ciao:1.0";
}

const char* ciao::_desc_repository_id ()
{
  return "IDL:anvil.com/ciao:1.0";
}

const char* ciao::_desc_interface_name ()
{
  return "ciao";
}

::CORBA::Boolean
ciao::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:52



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


void
TAO::Value_Traits<AMH_ciaoExceptionHolder>::add_ref (AMH_ciaoExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<AMH_ciaoExceptionHolder>::remove_ref (AMH_ciaoExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<AMH_ciaoExceptionHolder>::release (AMH_ciaoExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMH_ciaoExceptionHolder *
AMH_ciaoExceptionHolder::_downcast (::CORBA::ValueBase *v)
{
  return dynamic_cast<::AMH_ciaoExceptionHolder *> (v);
}

const char *
AMH_ciaoExceptionHolder::_tao_obv_repository_id () const
{
  return this->_tao_obv_static_repository_id ();
}

void
AMH_ciaoExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
AMH_ciaoExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_ciaoExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_ciaoExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

AMH_ciaoExceptionHolder::~AMH_ciaoExceptionHolder ()
{}

::CORBA::ValueBase *
AMH_ciaoExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_ciaoExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
AMH_ciaoExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
AMH_ciaoExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
AMH_ciaoExceptionHolder::_tao_match_formal_type (ptrdiff_t) const
{
  return false;
}

::CORBA::Boolean
AMH_ciaoExceptionHolder::_tao_marshal__AMH_ciaoExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
AMH_ciaoExceptionHolder::_tao_unmarshal__AMH_ciaoExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
AMH_ciaoExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_ciaoExceptionHolder *&new_object)
{
  ::CORBA::ValueBase *base {};
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_ciaoExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_ciaoExceptionHolder::_downcast (base);
  if (nullptr == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:72



AMH_ciaoExceptionHolder_init::AMH_ciaoExceptionHolder_init ()
{
}

AMH_ciaoExceptionHolder_init::~AMH_ciaoExceptionHolder_init ()
{
}

AMH_ciaoExceptionHolder_init *
AMH_ciaoExceptionHolder_init::_downcast (::CORBA::ValueFactoryBase *v)
{
  return dynamic_cast<::AMH_ciaoExceptionHolder_init *> (v);
}

const char*
AMH_ciaoExceptionHolder_init::tao_repository_id ()
{
  return ::AMH_ciaoExceptionHolder::_tao_obv_static_repository_id ();
}

::CORBA::ValueBase *
AMH_ciaoExceptionHolder_init::create_for_unmarshal ()
{
  ::CORBA::ValueBase *ret_val = nullptr;
  ACE_NEW_THROW_EX (
      ret_val,
      OBV_AMH_ciaoExceptionHolder,
      ::CORBA::NO_MEMORY ());
  return ret_val;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for AMH_ciaoResponseHandler.

AMH_ciaoResponseHandler_ptr
TAO::Objref_Traits<AMH_ciaoResponseHandler>::duplicate (AMH_ciaoResponseHandler_ptr p)
{
  return AMH_ciaoResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMH_ciaoResponseHandler>::release (AMH_ciaoResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

AMH_ciaoResponseHandler_ptr
TAO::Objref_Traits<AMH_ciaoResponseHandler>::nil ()
{
  return AMH_ciaoResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMH_ciaoResponseHandler>::marshal (const AMH_ciaoResponseHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMH_ciaoResponseHandler::AMH_ciaoResponseHandler ()
{}void
AMH_ciaoResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_ciaoResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_ciaoResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMH_ciaoResponseHandler_ptr
AMH_ciaoResponseHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_ciaoResponseHandler::_duplicate (
      dynamic_cast<AMH_ciaoResponseHandler_ptr> (_tao_objref));
}

AMH_ciaoResponseHandler_ptr
AMH_ciaoResponseHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_ciaoResponseHandler::_duplicate (
      dynamic_cast<AMH_ciaoResponseHandler_ptr> (_tao_objref));
}

AMH_ciaoResponseHandler_ptr
AMH_ciaoResponseHandler::_nil ()
{
  return nullptr;
}

AMH_ciaoResponseHandler_ptr
AMH_ciaoResponseHandler::_duplicate (AMH_ciaoResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMH_ciaoResponseHandler::_tao_release (AMH_ciaoResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMH_ciaoResponseHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:anvil.com/AMH_ciaoResponseHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* AMH_ciaoResponseHandler::_interface_repository_id () const
{
  return "IDL:anvil.com/AMH_ciaoResponseHandler:1.0";
}

const char* AMH_ciaoResponseHandler::_desc_repository_id ()
{
  return "IDL:anvil.com/AMH_ciaoResponseHandler:1.0";
}

const char* AMH_ciaoResponseHandler::_desc_interface_name ()
{
  return "AMH_ciaoResponseHandler";
}

::CORBA::Boolean
AMH_ciaoResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for AMI_ciaoHandler.

AMI_ciaoHandler_ptr
TAO::Objref_Traits<AMI_ciaoHandler>::duplicate (AMI_ciaoHandler_ptr p)
{
  return AMI_ciaoHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMI_ciaoHandler>::release (AMI_ciaoHandler_ptr p)
{
  ::CORBA::release (p);
}

AMI_ciaoHandler_ptr
TAO::Objref_Traits<AMI_ciaoHandler>::nil ()
{
  return AMI_ciaoHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMI_ciaoHandler>::marshal (const AMI_ciaoHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMI_ciaoHandler::AMI_ciaoHandler ()
{
}
void
AMI_ciaoHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_ciaoHandler *_tao_tmp_pointer =
    static_cast<AMI_ciaoHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMI_ciaoHandler_ptr
AMI_ciaoHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_ciaoHandler>::narrow (_tao_objref, "IDL:anvil.com/AMI_ciaoHandler:1.0");
}

AMI_ciaoHandler_ptr
AMI_ciaoHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_ciaoHandler>::unchecked_narrow (_tao_objref);
}

AMI_ciaoHandler_ptr
AMI_ciaoHandler::_nil ()
{
  return nullptr;
}

AMI_ciaoHandler_ptr
AMI_ciaoHandler::_duplicate (AMI_ciaoHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMI_ciaoHandler::_tao_release (AMI_ciaoHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMI_ciaoHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:anvil.com/AMI_ciaoHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* AMI_ciaoHandler::_interface_repository_id () const
{
  return "IDL:anvil.com/AMI_ciaoHandler:1.0";
}

const char* AMI_ciaoHandler::_desc_repository_id ()
{
  return "IDL:anvil.com/AMI_ciaoHandler:1.0";
}

const char* AMI_ciaoHandler::_desc_interface_name ()
{
  return "AMI_ciaoHandler";
}

::CORBA::Boolean
AMI_ciaoHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for aloha.

aloha_ptr
TAO::Objref_Traits<aloha>::duplicate (aloha_ptr p)
{
  return aloha::_duplicate (p);
}

void
TAO::Objref_Traits<aloha>::release (aloha_ptr p)
{
  ::CORBA::release (p);
}

aloha_ptr
TAO::Objref_Traits<aloha>::nil ()
{
  return aloha::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<aloha>::marshal (const aloha_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



aloha::aloha ()
{
}
void
aloha::_tao_any_destructor (void *_tao_void_pointer)
{
  aloha *_tao_tmp_pointer =
    static_cast<aloha *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

aloha_ptr
aloha::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<aloha>::narrow (_tao_objref, "IDL:anvil.com/aloha:1.0");
}

aloha_ptr
aloha::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<aloha>::unchecked_narrow (_tao_objref);
}

aloha_ptr
aloha::_nil ()
{
  return nullptr;
}

aloha_ptr
aloha::_duplicate (aloha_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
aloha::_tao_release (aloha_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
aloha::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:anvil.com/aloha:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* aloha::_interface_repository_id () const
{
  return "IDL:anvil.com/aloha:1.0";
}

const char* aloha::_desc_repository_id ()
{
  return "IDL:anvil.com/aloha:1.0";
}

const char* aloha::_desc_interface_name ()
{
  return "aloha";
}

::CORBA::Boolean
aloha::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:52



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


void
TAO::Value_Traits<AMH_alohaExceptionHolder>::add_ref (AMH_alohaExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<AMH_alohaExceptionHolder>::remove_ref (AMH_alohaExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<AMH_alohaExceptionHolder>::release (AMH_alohaExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMH_alohaExceptionHolder *
AMH_alohaExceptionHolder::_downcast (::CORBA::ValueBase *v)
{
  return dynamic_cast<::AMH_alohaExceptionHolder *> (v);
}

const char *
AMH_alohaExceptionHolder::_tao_obv_repository_id () const
{
  return this->_tao_obv_static_repository_id ();
}

void
AMH_alohaExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
AMH_alohaExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_alohaExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_alohaExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

AMH_alohaExceptionHolder::~AMH_alohaExceptionHolder ()
{}

::CORBA::ValueBase *
AMH_alohaExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_alohaExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
AMH_alohaExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
AMH_alohaExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
AMH_alohaExceptionHolder::_tao_match_formal_type (ptrdiff_t) const
{
  return false;
}

::CORBA::Boolean
AMH_alohaExceptionHolder::_tao_marshal__AMH_alohaExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
AMH_alohaExceptionHolder::_tao_unmarshal__AMH_alohaExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
AMH_alohaExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_alohaExceptionHolder *&new_object)
{
  ::CORBA::ValueBase *base {};
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_alohaExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_alohaExceptionHolder::_downcast (base);
  if (nullptr == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:72



AMH_alohaExceptionHolder_init::AMH_alohaExceptionHolder_init ()
{
}

AMH_alohaExceptionHolder_init::~AMH_alohaExceptionHolder_init ()
{
}

AMH_alohaExceptionHolder_init *
AMH_alohaExceptionHolder_init::_downcast (::CORBA::ValueFactoryBase *v)
{
  return dynamic_cast<::AMH_alohaExceptionHolder_init *> (v);
}

const char*
AMH_alohaExceptionHolder_init::tao_repository_id ()
{
  return ::AMH_alohaExceptionHolder::_tao_obv_static_repository_id ();
}

::CORBA::ValueBase *
AMH_alohaExceptionHolder_init::create_for_unmarshal ()
{
  ::CORBA::ValueBase *ret_val = nullptr;
  ACE_NEW_THROW_EX (
      ret_val,
      OBV_AMH_alohaExceptionHolder,
      ::CORBA::NO_MEMORY ());
  return ret_val;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for AMH_alohaResponseHandler.

AMH_alohaResponseHandler_ptr
TAO::Objref_Traits<AMH_alohaResponseHandler>::duplicate (AMH_alohaResponseHandler_ptr p)
{
  return AMH_alohaResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMH_alohaResponseHandler>::release (AMH_alohaResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

AMH_alohaResponseHandler_ptr
TAO::Objref_Traits<AMH_alohaResponseHandler>::nil ()
{
  return AMH_alohaResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMH_alohaResponseHandler>::marshal (const AMH_alohaResponseHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMH_alohaResponseHandler::AMH_alohaResponseHandler ()
{}void
AMH_alohaResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_alohaResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_alohaResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMH_alohaResponseHandler_ptr
AMH_alohaResponseHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_alohaResponseHandler::_duplicate (
      dynamic_cast<AMH_alohaResponseHandler_ptr> (_tao_objref));
}

AMH_alohaResponseHandler_ptr
AMH_alohaResponseHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return AMH_alohaResponseHandler::_duplicate (
      dynamic_cast<AMH_alohaResponseHandler_ptr> (_tao_objref));
}

AMH_alohaResponseHandler_ptr
AMH_alohaResponseHandler::_nil ()
{
  return nullptr;
}

AMH_alohaResponseHandler_ptr
AMH_alohaResponseHandler::_duplicate (AMH_alohaResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMH_alohaResponseHandler::_tao_release (AMH_alohaResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMH_alohaResponseHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:anvil.com/AMH_alohaResponseHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* AMH_alohaResponseHandler::_interface_repository_id () const
{
  return "IDL:anvil.com/AMH_alohaResponseHandler:1.0";
}

const char* AMH_alohaResponseHandler::_desc_repository_id ()
{
  return "IDL:anvil.com/AMH_alohaResponseHandler:1.0";
}

const char* AMH_alohaResponseHandler::_desc_interface_name ()
{
  return "AMH_alohaResponseHandler";
}

::CORBA::Boolean
AMH_alohaResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for AMI_alohaHandler.

AMI_alohaHandler_ptr
TAO::Objref_Traits<AMI_alohaHandler>::duplicate (AMI_alohaHandler_ptr p)
{
  return AMI_alohaHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMI_alohaHandler>::release (AMI_alohaHandler_ptr p)
{
  ::CORBA::release (p);
}

AMI_alohaHandler_ptr
TAO::Objref_Traits<AMI_alohaHandler>::nil ()
{
  return AMI_alohaHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMI_alohaHandler>::marshal (const AMI_alohaHandler_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



AMI_alohaHandler::AMI_alohaHandler ()
{
}
void
AMI_alohaHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_alohaHandler *_tao_tmp_pointer =
    static_cast<AMI_alohaHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMI_alohaHandler_ptr
AMI_alohaHandler::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_alohaHandler>::narrow (_tao_objref, "IDL:anvil.com/AMI_alohaHandler:1.0");
}

AMI_alohaHandler_ptr
AMI_alohaHandler::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<AMI_alohaHandler>::unchecked_narrow (_tao_objref);
}

AMI_alohaHandler_ptr
AMI_alohaHandler::_nil ()
{
  return nullptr;
}

AMI_alohaHandler_ptr
AMI_alohaHandler::_duplicate (AMI_alohaHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMI_alohaHandler::_tao_release (AMI_alohaHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMI_alohaHandler::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:omg.org/Messaging/ReplyHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:anvil.com/AMI_alohaHandler:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* AMI_alohaHandler::_interface_repository_id () const
{
  return "IDL:anvil.com/AMI_alohaHandler:1.0";
}

const char* AMI_alohaHandler::_desc_repository_id ()
{
  return "IDL:anvil.com/AMI_alohaHandler:1.0";
}

const char* AMI_alohaHandler::_desc_interface_name ()
{
  return "AMI_alohaHandler";
}

::CORBA::Boolean
AMI_alohaHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:43

OBV_AMH_helloExceptionHolder::~OBV_AMH_helloExceptionHolder ()
{}

::CORBA::ValueBase *
OBV_AMH_helloExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    OBV_AMH_helloExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
OBV_AMH_helloExceptionHolder::_tao_marshal__AMH_helloExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_AMH_helloExceptionHolder::_tao_unmarshal__AMH_helloExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:43

OBV_AMH_goodbyeExceptionHolder::~OBV_AMH_goodbyeExceptionHolder ()
{}

::CORBA::ValueBase *
OBV_AMH_goodbyeExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    OBV_AMH_goodbyeExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
OBV_AMH_goodbyeExceptionHolder::_tao_marshal__AMH_goodbyeExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_AMH_goodbyeExceptionHolder::_tao_unmarshal__AMH_goodbyeExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:43

OBV_salutation::AMH_sayonaraExceptionHolder::~AMH_sayonaraExceptionHolder ()
{}

::CORBA::ValueBase *
OBV_salutation::AMH_sayonaraExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_sayonaraExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
OBV_salutation::AMH_sayonaraExceptionHolder::_tao_marshal__salutation_AMH_sayonaraExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_salutation::AMH_sayonaraExceptionHolder::_tao_unmarshal__salutation_AMH_sayonaraExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:43

OBV_AMH_ciaoExceptionHolder::~OBV_AMH_ciaoExceptionHolder ()
{}

::CORBA::ValueBase *
OBV_AMH_ciaoExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    OBV_AMH_ciaoExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
OBV_AMH_ciaoExceptionHolder::_tao_marshal__AMH_ciaoExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_AMH_ciaoExceptionHolder::_tao_unmarshal__AMH_ciaoExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:43

OBV_AMH_alohaExceptionHolder::~OBV_AMH_alohaExceptionHolder ()
{}

::CORBA::ValueBase *
OBV_AMH_alohaExceptionHolder::_copy_value ()
{
  ::CORBA::ValueBase *ret_val {};
  ACE_NEW_THROW_EX (
    ret_val,
    OBV_AMH_alohaExceptionHolder (),
    ::CORBA::NO_MEMORY ());
  return ret_val;
}

::CORBA::Boolean
OBV_AMH_alohaExceptionHolder::_tao_marshal__AMH_alohaExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_AMH_alohaExceptionHolder::_tao_unmarshal__AMH_alohaExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const hello_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    hello_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::hello>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:506



TAO_BEGIN_VERSIONED_NAMESPACE_DECL
void
CORBA::add_ref (AMH_helloExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (AMH_helloExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:59


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const AMH_helloExceptionHolder *_tao_valuetype)
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&AMH_helloExceptionHolder::_downcast));
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    AMH_helloExceptionHolder *&_tao_valuetype)
{
  return AMH_helloExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:189

::CORBA::Boolean
OBV_AMH_helloExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const
{
  return true;
}

::CORBA::Boolean
OBV_AMH_helloExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &)
{
  return true;
}

void
OBV_AMH_helloExceptionHolder::truncation_hook ()
{
  this->require_truncation_ = true;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const AMI_helloHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    AMI_helloHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::AMI_helloHandler>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_enum/cdr_op_cs.cpp:29


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (TAO_OutputCDR &strm, ClusterFu _tao_enumerator)
{
  return strm << static_cast< ::CORBA::ULong> (_tao_enumerator);
}

::CORBA::Boolean operator>> (TAO_InputCDR &strm, ClusterFu & _tao_enumerator)
{
  ::CORBA::ULong _tao_temp = 0;
  ::CORBA::Boolean const _tao_success = strm >> _tao_temp;
  
  if (_tao_success)
    {
      _tao_enumerator = static_cast<ClusterFu> (_tao_temp);
    }
  
  return _tao_success;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Riot &_tao_aggregate)
{
  // Marshal the repository ID.
  return (strm << _tao_aggregate._rep_id ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Riot&)
{
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const goodbye_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    goodbye_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::goodbye>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:506



TAO_BEGIN_VERSIONED_NAMESPACE_DECL
void
CORBA::add_ref (AMH_goodbyeExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (AMH_goodbyeExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:59


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const AMH_goodbyeExceptionHolder *_tao_valuetype)
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&AMH_goodbyeExceptionHolder::_downcast));
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    AMH_goodbyeExceptionHolder *&_tao_valuetype)
{
  return AMH_goodbyeExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:189

::CORBA::Boolean
OBV_AMH_goodbyeExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const
{
  return true;
}

::CORBA::Boolean
OBV_AMH_goodbyeExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &)
{
  return true;
}

void
OBV_AMH_goodbyeExceptionHolder::truncation_hook ()
{
  this->require_truncation_ = true;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const AMI_goodbyeHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    AMI_goodbyeHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::AMI_goodbyeHandler>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const A::my_exception &_tao_aggregate)
{
  // Marshal the repository ID.
  return (strm << _tao_aggregate._rep_id ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &,
    A::my_exception&)
{
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const salutation::sayonara_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    salutation::sayonara_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::salutation::sayonara>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:506



TAO_BEGIN_VERSIONED_NAMESPACE_DECL
void
CORBA::add_ref (salutation::AMH_sayonaraExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (salutation::AMH_sayonaraExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:59


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const salutation::AMH_sayonaraExceptionHolder *_tao_valuetype)
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&salutation::AMH_sayonaraExceptionHolder::_downcast));
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    salutation::AMH_sayonaraExceptionHolder *&_tao_valuetype)
{
  return salutation::AMH_sayonaraExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:189

::CORBA::Boolean
OBV_salutation::AMH_sayonaraExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const
{
  return true;
}

::CORBA::Boolean
OBV_salutation::AMH_sayonaraExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &)
{
  return true;
}

void
OBV_salutation::AMH_sayonaraExceptionHolder::truncation_hook ()
{
  this->require_truncation_ = true;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const salutation::AMI_sayonaraHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    salutation::AMI_sayonaraHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::salutation::AMI_sayonaraHandler>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ciao_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ciao_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::ciao>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:506



TAO_BEGIN_VERSIONED_NAMESPACE_DECL
void
CORBA::add_ref (AMH_ciaoExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (AMH_ciaoExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:59


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const AMH_ciaoExceptionHolder *_tao_valuetype)
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&AMH_ciaoExceptionHolder::_downcast));
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    AMH_ciaoExceptionHolder *&_tao_valuetype)
{
  return AMH_ciaoExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:189

::CORBA::Boolean
OBV_AMH_ciaoExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const
{
  return true;
}

::CORBA::Boolean
OBV_AMH_ciaoExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &)
{
  return true;
}

void
OBV_AMH_ciaoExceptionHolder::truncation_hook ()
{
  this->require_truncation_ = true;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const AMI_ciaoHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    AMI_ciaoHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::AMI_ciaoHandler>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const aloha_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    aloha_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::aloha>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_valuetype.cpp:506



TAO_BEGIN_VERSIONED_NAMESPACE_DECL
void
CORBA::add_ref (AMH_alohaExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (AMH_alohaExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:59


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const AMH_alohaExceptionHolder *_tao_valuetype)
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&AMH_alohaExceptionHolder::_downcast));
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    AMH_alohaExceptionHolder *&_tao_valuetype)
{
  return AMH_alohaExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:189

::CORBA::Boolean
OBV_AMH_alohaExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const
{
  return true;
}

::CORBA::Boolean
OBV_AMH_alohaExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &)
{
  return true;
}

void
OBV_AMH_alohaExceptionHolder::truncation_hook ()
{
  this->require_truncation_ = true;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const AMI_alohaHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    AMI_alohaHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::AMI_alohaHandler>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



