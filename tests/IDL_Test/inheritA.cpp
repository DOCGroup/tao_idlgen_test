// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

#include "inheritA.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Value_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Value_Field.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_one (
    ::CORBA::tk_objref,
    "IDL:OldInherit/one:1.0",
    "one");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_one =
    &_tao_tc_OldInherit_one;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:63

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_OldInherit_AMH_oneExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMH_oneExceptionHolder (
    ::CORBA::tk_value,
    "IDL:OldInherit/AMH_oneExceptionHolder:1.0",
    "AMH_oneExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_OldInherit_AMH_oneExceptionHolder,
    0);
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMH_oneExceptionHolder =
    &_tao_tc_OldInherit_AMH_oneExceptionHolder;
}// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr OldInherit::AMH_oneExceptionHolder::_tao_type () const
{
  return ::OldInherit::_tc_AMH_oneExceptionHolder;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMH_oneResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:OldInherit/AMH_oneResponseHandler:1.0",
    "AMH_oneResponseHandler");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMH_oneResponseHandler =
    &_tao_tc_OldInherit_AMH_oneResponseHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMI_oneHandler (
    ::CORBA::tk_objref,
    "IDL:OldInherit/AMI_oneHandler:1.0",
    "AMI_oneHandler");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMI_oneHandler =
    &_tao_tc_OldInherit_AMI_oneHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_two (
    ::CORBA::tk_objref,
    "IDL:OldInherit/two:1.0",
    "two");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_two =
    &_tao_tc_OldInherit_two;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:63

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_OldInherit_AMH_twoExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMH_twoExceptionHolder (
    ::CORBA::tk_value,
    "IDL:OldInherit/AMH_twoExceptionHolder:1.0",
    "AMH_twoExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_OldInherit_AMH_twoExceptionHolder,
    0);
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMH_twoExceptionHolder =
    &_tao_tc_OldInherit_AMH_twoExceptionHolder;
}// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr OldInherit::AMH_twoExceptionHolder::_tao_type () const
{
  return ::OldInherit::_tc_AMH_twoExceptionHolder;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMH_twoResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:OldInherit/AMH_twoResponseHandler:1.0",
    "AMH_twoResponseHandler");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMH_twoResponseHandler =
    &_tao_tc_OldInherit_AMH_twoResponseHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMI_twoHandler (
    ::CORBA::tk_objref,
    "IDL:OldInherit/AMI_twoHandler:1.0",
    "AMI_twoHandler");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMI_twoHandler =
    &_tao_tc_OldInherit_AMI_twoHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_three (
    ::CORBA::tk_objref,
    "IDL:OldInherit/three:1.0",
    "three");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_three =
    &_tao_tc_OldInherit_three;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:63

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_OldInherit_AMH_threeExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMH_threeExceptionHolder (
    ::CORBA::tk_value,
    "IDL:OldInherit/AMH_threeExceptionHolder:1.0",
    "AMH_threeExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_OldInherit_AMH_threeExceptionHolder,
    0);
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMH_threeExceptionHolder =
    &_tao_tc_OldInherit_AMH_threeExceptionHolder;
}// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr OldInherit::AMH_threeExceptionHolder::_tao_type () const
{
  return ::OldInherit::_tc_AMH_threeExceptionHolder;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMH_threeResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:OldInherit/AMH_threeResponseHandler:1.0",
    "AMH_threeResponseHandler");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMH_threeResponseHandler =
    &_tao_tc_OldInherit_AMH_threeResponseHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMI_threeHandler (
    ::CORBA::tk_objref,
    "IDL:OldInherit/AMI_threeHandler:1.0",
    "AMI_threeHandler");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMI_threeHandler =
    &_tao_tc_OldInherit_AMI_threeHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_four (
    ::CORBA::tk_objref,
    "IDL:OldInherit/four:1.0",
    "four");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_four =
    &_tao_tc_OldInherit_four;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:63

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_OldInherit_AMH_fourExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMH_fourExceptionHolder (
    ::CORBA::tk_value,
    "IDL:OldInherit/AMH_fourExceptionHolder:1.0",
    "AMH_fourExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_OldInherit_AMH_fourExceptionHolder,
    0);
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMH_fourExceptionHolder =
    &_tao_tc_OldInherit_AMH_fourExceptionHolder;
}// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr OldInherit::AMH_fourExceptionHolder::_tao_type () const
{
  return ::OldInherit::_tc_AMH_fourExceptionHolder;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMH_fourResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:OldInherit/AMH_fourResponseHandler:1.0",
    "AMH_fourResponseHandler");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMH_fourResponseHandler =
    &_tao_tc_OldInherit_AMH_fourResponseHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMI_fourHandler (
    ::CORBA::tk_objref,
    "IDL:OldInherit/AMI_fourHandler:1.0",
    "AMI_fourHandler");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMI_fourHandler =
    &_tao_tc_OldInherit_AMI_fourHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_five (
    ::CORBA::tk_objref,
    "IDL:OldInherit/five:1.0",
    "five");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_five =
    &_tao_tc_OldInherit_five;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:63

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_OldInherit_AMH_fiveExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMH_fiveExceptionHolder (
    ::CORBA::tk_value,
    "IDL:OldInherit/AMH_fiveExceptionHolder:1.0",
    "AMH_fiveExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_OldInherit_AMH_fiveExceptionHolder,
    0);
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMH_fiveExceptionHolder =
    &_tao_tc_OldInherit_AMH_fiveExceptionHolder;
}// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr OldInherit::AMH_fiveExceptionHolder::_tao_type () const
{
  return ::OldInherit::_tc_AMH_fiveExceptionHolder;
}


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMH_fiveResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:OldInherit/AMH_fiveResponseHandler:1.0",
    "AMH_fiveResponseHandler");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMH_fiveResponseHandler =
    &_tao_tc_OldInherit_AMH_fiveResponseHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:68

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_OldInherit_AMI_fiveHandler (
    ::CORBA::tk_objref,
    "IDL:OldInherit/AMI_fiveHandler:1.0",
    "AMI_fiveHandler");
  

namespace OldInherit
{
  ::CORBA::TypeCode_ptr const _tc_AMI_fiveHandler =
    &_tao_tc_OldInherit_AMI_fiveHandler;
}
// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::one>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::one_ptr _tao_elem)
{
  OldInherit::one_ptr _tao_objptr =
    OldInherit::one::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::one_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::one>::insert (
    _tao_any,
    OldInherit::one::_tao_any_destructor,
    OldInherit::_tc_one,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::one_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::one>::extract (
        _tao_any,
        OldInherit::one::_tao_any_destructor,
        OldInherit::_tc_one,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:44


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_oneExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_oneExceptionHolder *_tao_elem)
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    OldInherit::AMH_oneExceptionHolder *_tao_copy =
      _tao_elem ?
        OldInherit::AMH_oneExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : nullptr;
    _tao_any <<= std::addressof(_tao_copy);
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= std::addressof(_tao_elem);
  #endif
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_oneExceptionHolder **_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMH_oneExceptionHolder>::insert (
    _tao_any,
    OldInherit::AMH_oneExceptionHolder::_tao_any_destructor,
    OldInherit::_tc_AMH_oneExceptionHolder,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMH_oneExceptionHolder *&_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMH_oneExceptionHolder>::extract (
        _tao_any,
        OldInherit::AMH_oneExceptionHolder::_tao_any_destructor,
        OldInherit::_tc_AMH_oneExceptionHolder,
        _tao_elem);
}


}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_oneResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_oneResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_oneResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_oneResponseHandler_ptr _tao_elem)
{
  OldInherit::AMH_oneResponseHandler_ptr _tao_objptr =
    OldInherit::AMH_oneResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_oneResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMH_oneResponseHandler>::insert (
    _tao_any,
    OldInherit::AMH_oneResponseHandler::_tao_any_destructor,
    OldInherit::_tc_AMH_oneResponseHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMH_oneResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMH_oneResponseHandler>::extract (
        _tao_any,
        OldInherit::AMH_oneResponseHandler::_tao_any_destructor,
        OldInherit::_tc_AMH_oneResponseHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMI_oneHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMI_oneHandler_ptr _tao_elem)
{
  OldInherit::AMI_oneHandler_ptr _tao_objptr =
    OldInherit::AMI_oneHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMI_oneHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMI_oneHandler>::insert (
    _tao_any,
    OldInherit::AMI_oneHandler::_tao_any_destructor,
    OldInherit::_tc_AMI_oneHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMI_oneHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMI_oneHandler>::extract (
        _tao_any,
        OldInherit::AMI_oneHandler::_tao_any_destructor,
        OldInherit::_tc_AMI_oneHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::two>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::two_ptr _tao_elem)
{
  OldInherit::two_ptr _tao_objptr =
    OldInherit::two::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::two_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::two>::insert (
    _tao_any,
    OldInherit::two::_tao_any_destructor,
    OldInherit::_tc_two,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::two_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::two>::extract (
        _tao_any,
        OldInherit::two::_tao_any_destructor,
        OldInherit::_tc_two,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:44


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_twoExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_twoExceptionHolder *_tao_elem)
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    OldInherit::AMH_twoExceptionHolder *_tao_copy =
      _tao_elem ?
        OldInherit::AMH_twoExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : nullptr;
    _tao_any <<= std::addressof(_tao_copy);
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= std::addressof(_tao_elem);
  #endif
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_twoExceptionHolder **_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMH_twoExceptionHolder>::insert (
    _tao_any,
    OldInherit::AMH_twoExceptionHolder::_tao_any_destructor,
    OldInherit::_tc_AMH_twoExceptionHolder,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMH_twoExceptionHolder *&_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMH_twoExceptionHolder>::extract (
        _tao_any,
        OldInherit::AMH_twoExceptionHolder::_tao_any_destructor,
        OldInherit::_tc_AMH_twoExceptionHolder,
        _tao_elem);
}


}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_twoResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_twoResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_twoResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_twoResponseHandler_ptr _tao_elem)
{
  OldInherit::AMH_twoResponseHandler_ptr _tao_objptr =
    OldInherit::AMH_twoResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_twoResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMH_twoResponseHandler>::insert (
    _tao_any,
    OldInherit::AMH_twoResponseHandler::_tao_any_destructor,
    OldInherit::_tc_AMH_twoResponseHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMH_twoResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMH_twoResponseHandler>::extract (
        _tao_any,
        OldInherit::AMH_twoResponseHandler::_tao_any_destructor,
        OldInherit::_tc_AMH_twoResponseHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMI_twoHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMI_twoHandler_ptr _tao_elem)
{
  OldInherit::AMI_twoHandler_ptr _tao_objptr =
    OldInherit::AMI_twoHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMI_twoHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMI_twoHandler>::insert (
    _tao_any,
    OldInherit::AMI_twoHandler::_tao_any_destructor,
    OldInherit::_tc_AMI_twoHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMI_twoHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMI_twoHandler>::extract (
        _tao_any,
        OldInherit::AMI_twoHandler::_tao_any_destructor,
        OldInherit::_tc_AMI_twoHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::three>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::three_ptr _tao_elem)
{
  OldInherit::three_ptr _tao_objptr =
    OldInherit::three::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::three_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::three>::insert (
    _tao_any,
    OldInherit::three::_tao_any_destructor,
    OldInherit::_tc_three,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::three_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::three>::extract (
        _tao_any,
        OldInherit::three::_tao_any_destructor,
        OldInherit::_tc_three,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:44


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_threeExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_threeExceptionHolder *_tao_elem)
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    OldInherit::AMH_threeExceptionHolder *_tao_copy =
      _tao_elem ?
        OldInherit::AMH_threeExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : nullptr;
    _tao_any <<= std::addressof(_tao_copy);
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= std::addressof(_tao_elem);
  #endif
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_threeExceptionHolder **_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMH_threeExceptionHolder>::insert (
    _tao_any,
    OldInherit::AMH_threeExceptionHolder::_tao_any_destructor,
    OldInherit::_tc_AMH_threeExceptionHolder,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMH_threeExceptionHolder *&_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMH_threeExceptionHolder>::extract (
        _tao_any,
        OldInherit::AMH_threeExceptionHolder::_tao_any_destructor,
        OldInherit::_tc_AMH_threeExceptionHolder,
        _tao_elem);
}


}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_threeResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_threeResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_threeResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_threeResponseHandler_ptr _tao_elem)
{
  OldInherit::AMH_threeResponseHandler_ptr _tao_objptr =
    OldInherit::AMH_threeResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_threeResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMH_threeResponseHandler>::insert (
    _tao_any,
    OldInherit::AMH_threeResponseHandler::_tao_any_destructor,
    OldInherit::_tc_AMH_threeResponseHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMH_threeResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMH_threeResponseHandler>::extract (
        _tao_any,
        OldInherit::AMH_threeResponseHandler::_tao_any_destructor,
        OldInherit::_tc_AMH_threeResponseHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMI_threeHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMI_threeHandler_ptr _tao_elem)
{
  OldInherit::AMI_threeHandler_ptr _tao_objptr =
    OldInherit::AMI_threeHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMI_threeHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMI_threeHandler>::insert (
    _tao_any,
    OldInherit::AMI_threeHandler::_tao_any_destructor,
    OldInherit::_tc_AMI_threeHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMI_threeHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMI_threeHandler>::extract (
        _tao_any,
        OldInherit::AMI_threeHandler::_tao_any_destructor,
        OldInherit::_tc_AMI_threeHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::four>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::four_ptr _tao_elem)
{
  OldInherit::four_ptr _tao_objptr =
    OldInherit::four::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::four_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::four>::insert (
    _tao_any,
    OldInherit::four::_tao_any_destructor,
    OldInherit::_tc_four,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::four_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::four>::extract (
        _tao_any,
        OldInherit::four::_tao_any_destructor,
        OldInherit::_tc_four,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:44


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_fourExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_fourExceptionHolder *_tao_elem)
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    OldInherit::AMH_fourExceptionHolder *_tao_copy =
      _tao_elem ?
        OldInherit::AMH_fourExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : nullptr;
    _tao_any <<= std::addressof(_tao_copy);
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= std::addressof(_tao_elem);
  #endif
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_fourExceptionHolder **_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMH_fourExceptionHolder>::insert (
    _tao_any,
    OldInherit::AMH_fourExceptionHolder::_tao_any_destructor,
    OldInherit::_tc_AMH_fourExceptionHolder,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMH_fourExceptionHolder *&_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMH_fourExceptionHolder>::extract (
        _tao_any,
        OldInherit::AMH_fourExceptionHolder::_tao_any_destructor,
        OldInherit::_tc_AMH_fourExceptionHolder,
        _tao_elem);
}


}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_fourResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_fourResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_fourResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_fourResponseHandler_ptr _tao_elem)
{
  OldInherit::AMH_fourResponseHandler_ptr _tao_objptr =
    OldInherit::AMH_fourResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_fourResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMH_fourResponseHandler>::insert (
    _tao_any,
    OldInherit::AMH_fourResponseHandler::_tao_any_destructor,
    OldInherit::_tc_AMH_fourResponseHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMH_fourResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMH_fourResponseHandler>::extract (
        _tao_any,
        OldInherit::AMH_fourResponseHandler::_tao_any_destructor,
        OldInherit::_tc_AMH_fourResponseHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMI_fourHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMI_fourHandler_ptr _tao_elem)
{
  OldInherit::AMI_fourHandler_ptr _tao_objptr =
    OldInherit::AMI_fourHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMI_fourHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMI_fourHandler>::insert (
    _tao_any,
    OldInherit::AMI_fourHandler::_tao_any_destructor,
    OldInherit::_tc_AMI_fourHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMI_fourHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMI_fourHandler>::extract (
        _tao_any,
        OldInherit::AMI_fourHandler::_tao_any_destructor,
        OldInherit::_tc_AMI_fourHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::five>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::five_ptr _tao_elem)
{
  OldInherit::five_ptr _tao_objptr =
    OldInherit::five::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::five_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::five>::insert (
    _tao_any,
    OldInherit::five::_tao_any_destructor,
    OldInherit::_tc_five,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::five_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::five>::extract (
        _tao_any,
        OldInherit::five::_tao_any_destructor,
        OldInherit::_tc_five,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:44


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_fiveExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {

/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_fiveExceptionHolder *_tao_elem)
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    OldInherit::AMH_fiveExceptionHolder *_tao_copy =
      _tao_elem ?
        OldInherit::AMH_fiveExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : nullptr;
    _tao_any <<= std::addressof(_tao_copy);
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= std::addressof(_tao_elem);
  #endif
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_fiveExceptionHolder **_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMH_fiveExceptionHolder>::insert (
    _tao_any,
    OldInherit::AMH_fiveExceptionHolder::_tao_any_destructor,
    OldInherit::_tc_AMH_fiveExceptionHolder,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMH_fiveExceptionHolder *&_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMH_fiveExceptionHolder>::extract (
        _tao_any,
        OldInherit::AMH_fiveExceptionHolder::_tao_any_destructor,
        OldInherit::_tc_AMH_fiveExceptionHolder,
        _tao_elem);
}


}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_fiveResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_fiveResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMH_fiveResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_fiveResponseHandler_ptr _tao_elem)
{
  OldInherit::AMH_fiveResponseHandler_ptr _tao_objptr =
    OldInherit::AMH_fiveResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMH_fiveResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMH_fiveResponseHandler>::insert (
    _tao_any,
    OldInherit::AMH_fiveResponseHandler::_tao_any_destructor,
    OldInherit::_tc_AMH_fiveResponseHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMH_fiveResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMH_fiveResponseHandler>::extract (
        _tao_any,
        OldInherit::AMH_fiveResponseHandler::_tao_any_destructor,
        OldInherit::_tc_AMH_fiveResponseHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/johnny/ACE/trunk/TAO/TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<OldInherit::AMI_fiveHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



/// Copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMI_fiveHandler_ptr _tao_elem)
{
  OldInherit::AMI_fiveHandler_ptr _tao_objptr =
    OldInherit::AMI_fiveHandler::_duplicate (_tao_elem);
  _tao_any <<= std::addressof(_tao_objptr);
}

/// Non-copying insertion.
void
operator<<= (
  ::CORBA::Any &_tao_any,
  OldInherit::AMI_fiveHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<OldInherit::AMI_fiveHandler>::insert (
    _tao_any,
    OldInherit::AMI_fiveHandler::_tao_any_destructor,
    OldInherit::_tc_AMI_fiveHandler,
    *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    OldInherit::AMI_fiveHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<OldInherit::AMI_fiveHandler>::extract (
        _tao_any,
        OldInherit::AMI_fiveHandler::_tao_any_destructor,
        OldInherit::_tc_AMI_fiveHandler,
        _tao_elem);
}

}
TAO_END_VERSIONED_NAMESPACE_DECL


